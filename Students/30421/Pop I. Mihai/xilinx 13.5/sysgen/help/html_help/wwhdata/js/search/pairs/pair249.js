function FileData_Pairs(x)
{
x.t("modes","learning");
x.t("debugging","mode");
x.t("four","arguments");
x.t("example","execute");
x.t("example","calling");
x.t("example","xblock");
x.t("xbsindex_r4/addsub","parameter");
x.t("xbsindex_r4/addsub","source");
x.t("block.getnuminports","returns");
x.t("passed","port");
x.t("port.getoutsignals","returns");
x.t("gcb","set_param");
x.t("precision","full");
x.t("overflow","wrap");
x.t("xoutport","xoutport");
x.t("xoutport","(port_name)");
x.t("xoutport","creates");
x.t("xoutport","objects");
x.t("xoutport","name1");
x.t("xoutport","object");
x.t("below","examples");
x.t("library","built-in");
x.t("library","listed");
x.t("library","block");
x.t("library","need");
x.t("library","name");
x.t("library","argument");
x.t("library","simulink");
x.t("parameter","available");
x.t("parameter","table");
x.t("parameter","block");
x.t("parameter","function");
x.t("parameter","acceptable");
x.t("parameter","names");
x.t("parameter","binding");
x.t("method","invoked");
x.t("method","xlsub2script");
x.t("method","xblock");
x.t("construct","subsystem");
x.t("available","blocks");
x.t("arith_type","signed");
x.t("rerouted","useful");
x.t("(port_name)","creates");
x.t("var1","var2");
x.t("every","time");
x.t("every","variable");
x.t("full","path");
x.t("full","string");
x.t("block.bindport","inports");
x.t("var2","var3");
x.t("leaf","block");
x.t("built-in","library");
x.t("create","xblock");
x.t("getsrc","method");
x.t("question","dialog");
x.t("var3","xlsub2script");
x.t("var3","note");
x.t("you'll","following");
x.t("table","parameter");
x.t("table","transcript");
x.t("============","==================");
x.t("------------","------------------");
x.t("bin_pt","int");
x.t("source","parameter");
x.t("source","objects");
x.t("source","block");
x.t("source","argument");
x.t("source","params");
x.t("source","targets");
x.t("source","input");
x.t("source","output");
x.t("source","object");
x.t("having","physical");
x.t("having","two");
x.t("untiled","please");
x.t("coming","signals");
x.t("once","xlsub2script");
x.t("variables","inside");
x.t("variables","matlab");
x.t("variables","basevars");
x.t("variables","generate");
x.t("demonstrated","below");
x.t("arguments","source");
x.t("arguments","missing");
x.t("arguments","invoked");
x.t("arguments","optional");
x.t("arguments","specify");
x.t("flag","error");
x.t("builds","system");
x.t("creates","xoutport");
x.t("creates","block");
x.t("creates","list");
x.t("creates","xinport");
x.t("creates","xsignal");
x.t("creates","input");
x.t("creates","xblock");
x.t("creates","output");
x.t("current","subsystem");
x.t("block\u2019s","link");
x.t("try","overwrite");
x.t("execute","xblockhelp");
x.t("execute","following");
x.t("user","defined");
x.t("n_bits","int");
x.t("diagrams","i.e");
x.t("field","want");
x.t("field","cell");
x.t("field","options");
x.t("field","xblock");
x.t("field","port");
x.t("field","struct");
x.t("(obj)","connects");
x.t("get_param","add_block");
x.t("skipped","xlsub2script");
x.t("dialog","asking");
x.t("line","xblockhelp");
x.t("mode","debugging");
x.t("mode","m-function");
x.t("mode","learning");
x.t("mode","allows");
x.t("mode","addition");
x.t("mode","blocks");
x.t("mode","works");
x.t("mode","production");
x.t("mode","except");
x.t("physical","script");
x.t("points","script");
x.t("block.getinportnames","returns");
x.t("insigs","port.getinsignals");
x.t("insigs","block.getinsignals");
x.t("selectively","pick");
x.t("introduction","script");
x.t("exit","matlab");
x.t("type","============");
x.t("type","commands");
x.t("please","remember");
x.t("close","untitled");
x.t("missing","constructing");
x.t("bindport","method");
x.t("pipelined","string");
x.t("time","new");
x.t("time","xlsub2script");
x.t("calls","gcb");
x.t("calls","access");
x.t("i.e","subsystems");
x.t("connection","established");
x.t("bound","two");
x.t("bound","binding");
x.t("port.bind","(obj)");
x.t("(sig_name)","creates");
x.t("inside","subsystem");
x.t("position-based","binding");
x.t("automatically","generated");
x.t("default","xlsub2script");
x.t("default","generated");
x.t("convert","subsystem");
x.t("limitations","xlsub2script");
x.t("listed","example");
x.t("inf","------------");
x.t("access","programmatic");
x.t("access","global");
x.t("access","system");
x.t("objects","xsignal");
x.t("objects","driving");
x.t("objects","programmatic");
x.t("new","connection");
x.t("new","learning");
x.t("new","untitled");
x.t("new","model");
x.t("new","object");
x.t("single","step");
x.t("element","source");
x.t("element","cell");
x.t("element","either");
x.t("link","broken");
x.t("want","xlsub2script");
x.t("block","library");
x.t("block","create");
x.t("block","leaf");
x.t("block","source");
x.t("block","current");
x.t("block","field");
x.t("block","skipped");
x.t("block","name");
x.t("block","constructor");
x.t("block","target");
x.t("block","prints");
x.t("block","xblock");
x.t("block","value");
x.t("block","subsystem");
x.t("block","port");
x.t("block","following");
x.t("block","xbsindex_r4");
x.t("port.getinsignals","returns");
x.t("sig","sig");
x.t("sig","xsignal");
x.t("top","level");
x.t("top","subsystem");
x.t("overwrite","file");
x.t("overwrite","m-function");
x.t("overwrite","existing");
x.t("command","line");
x.t("m-function","file");
x.t("m-function","xlsub2script");
x.t("file","builds");
x.t("file","default");
x.t("file","invoked");
x.t("file","useful");
x.t("file","named");
x.t("file","forcewrite");
x.t("file","without");
x.t("invoked","follows");
x.t("invoked","xblock");
x.t("invoked","subsystem");
x.t("invoked","following");
x.t("need","full");
x.t("need","add");
x.t("need","extra");
x.t("need","basevars");
x.t("list","input");
x.t("list","signals");
x.t("list","output");
x.t("initialization","code");
x.t("proper","code");
x.t("add","leaf");
x.t("add","subsystem");
x.t("add","corresponding");
x.t("treated","configuration");
x.t("api","mode");
x.t("api","m-function");
x.t("api","helper");
x.t("api","function");
x.t("api","programmatic");
x.t("api","works");
x.t("api","script");
x.t("entry","point");
x.t("outsigs","port.getoutsignals");
x.t("outsigs","block.getoutsignals");
x.t("guide","generated");
x.t("remove","simulink");
x.t("wrap","string");
x.t("remember","run");
x.t("inports","outports");
x.t("inports","nout");
x.t("spaces","replaced");
x.t("quantization","truncate");
x.t("helper","function");
x.t("converts","simulink");
x.t("converts","subsystem");
x.t("learning","mode");
x.t("learning","session");
x.t("learning","sysgen");
x.t("handle","base");
x.t("handle","interpreted");
x.t("specified","bindport");
x.t("set_param","get_param");
x.t("true","xlsub2script");
x.t("true","basevars");
x.t("connects","source");
x.t("connects","obj");
x.t("connects","object");
x.t("name","example");
x.t("name","xoutport");
x.t("name","source");
x.t("name","automatically");
x.t("name","block");
x.t("name","xinport");
x.t("name","port_name");
x.t("name","subsystem");
x.t("name","following");
x.t("name","without");
x.t("name","sig_name");
x.t("path","example");
x.t("struc","specify");
x.t("constructor","creates");
x.t("constructor","exit");
x.t("constructor","sig");
x.t("constructor","subsystem");
x.t("constructor","port");
x.t("constructor","used");
x.t("corresponds","wire");
x.t("follows","block.bindport");
x.t("follows","block");
x.t("argument","close");
x.t("argument","true");
x.t("argument","matlab");
x.t("argument","string");
x.t("argument","sets");
x.t("argument","cell");
x.t("argument","function");
x.t("argument","xlsub2script");
x.t("argument","purpose");
x.t("argument","model");
x.t("dst","sig.getdst");
x.t("base","workspace");
x.t("xinport","xoutport");
x.t("xinport","(port_name)");
x.t("xinport","creates");
x.t("xinport","xinport");
x.t("xinport","name1");
x.t("xinport","object");
x.t("useful","debug");
x.t("useful","learn");
x.t("session","production");
x.t("params","inports");
x.t("params","argument");
x.t("parameters","execute");
x.t("parameters","top");
x.t("parameters","cell");
x.t("methods","port.bind");
x.t("methods","outsigs");
x.t("methods","include");
x.t("methods","sig.bind");
x.t("going","signals");
x.t("src","sig.getsrc");
x.t("replaced","underscores");
x.t("========","mode");
x.t("--------","precision");
x.t("--------","overflow");
x.t("--------","arith_type");
x.t("--------","bin_pt");
x.t("--------","n_bits");
x.t("--------","pipelined");
x.t("--------","quantization");
x.t("--------","string");
x.t("--------","use_behavioral_hdl");
x.t("--------","use_rpm");
x.t("--------","latency");
x.t("--------","use_carryout");
x.t("--------","use_carryin");
x.t("matlab","field");
x.t("matlab","command");
x.t("matlab","m-function");
x.t("matlab","base");
x.t("matlab","adds");
x.t("matlab","struct");
x.t("instantiating","interconnecting");
x.t("untitled","model");
x.t("nin","block.getnuminports");
x.t("xsignal","creates");
x.t("xsignal","(sig_name)");
x.t("xsignal","name");
x.t("xsignal","xinport");
x.t("xsignal","xsignal");
x.t("xsignal","represents");
x.t("xsignal","name1");
x.t("xsignal","object");
x.t("allows","construct");
x.t("allows","type");
x.t("block.getoutportnames","returns");
x.t("port1","port2");
x.t("targets","constructor");
x.t("destination","objects");
x.t("subsyste","options");
x.t("strings","string");
x.t("wire","connects");
x.t("target","xinport");
x.t("string","------------");
x.t("string","user");
x.t("string","round");
x.t("string","expected");
x.t("string","variable");
x.t("string","subtraction");
x.t("string","saturate");
x.t("string","unsigned");
x.t("sets","parameters");
x.t("array","source");
x.t("array","coming");
x.t("array","position-based");
x.t("array","element");
x.t("array","inports");
x.t("array","going");
x.t("array","xsignal");
x.t("array","destination");
x.t("array","strings");
x.t("array","inport");
x.t("array","outport");
x.t("array","incoming");
x.t("array","call");
x.t("port2","port3");
x.t("fields","block");
x.t("fields","forcewrite");
x.t("int","------------");
x.t("int","value");
x.t("three","modes");
x.t("three","ways");
x.t("ports","bound");
x.t("ports","subsystems");
x.t("cell","array");
x.t("input","output");
x.t("input","port");
x.t("port3","xoutport");
x.t("port3","xinport");
x.t("sig1","sig2");
x.t("(subsystem)","converts");
x.t("prints","parameter");
x.t("prints","xblock");
x.t("mask","initialization");
x.t("mask","parameters");
x.t("second","time");
x.t("extra","xblockhelp");
x.t("addition","string");
x.t("addition","subtraction");
x.t("round","unbiased");
x.t("use_behavioral_hdl","string");
x.t("signals","xoutport");
x.t("signals","outsigs");
x.t("signals","xinport");
x.t("signals","xsignal");
x.t("signals","names");
x.t("port_name","port1");
x.t("sig2","sig3");
x.t("underscores","once");
x.t("depended","variables");
x.t("interconnecting","xblock");
x.t("point","invoked");
x.t("commands","without");
x.t("blocks","ports");
x.t("blocks","xbsindex_r4");
x.t("equivalent","xblock");
x.t("sig3","xsignal");
x.t("error","------------");
x.t("error","modify");
x.t("sometimes","subsystem");
x.t("------------------","--------");
x.t("top-level","function");
x.t("top-level","subsystem");
x.t("top-level","script");
x.t("top-level","model");
x.t("inport","xoutport");
x.t("inport","names");
x.t("outports","source");
x.t("outports","arguments");
x.t("outports","insigs");
x.t("outports","inports");
x.t("means","convert");
x.t("options","argument");
x.t("options","matlab");
x.t("options","options");
x.t("options","xlsub2script");
x.t("options","struct");
x.t("number","inports");
x.t("number","outports");
x.t("block.getnumoutports","returns");
x.t("function","calls");
x.t("function","handle");
x.t("function","converts");
x.t("function","learning");
x.t("function","matlab");
x.t("function","error");
x.t("function","xlsub2script");
x.t("function","call");
x.t("function","system");
x.t("function","pointer");
x.t("relation","source");
x.t("interpreted","api");
x.t("signal","object");
x.t("represents","signal");
x.t("represents","subsystem");
x.t("driving","element");
x.t("driving","xsignal");
x.t("whether","overwrite");
x.t("workspace","variables");
x.t("workspace","need");
x.t("workspace","case");
x.t("use_rpm","string");
x.t("starting","new");
x.t("step","script");
x.t("ways","add");
x.t("index","dst");
x.t("sig.getdst","returns");
x.t("xlsub2script","block\u2019s");
x.t("xlsub2script","try");
x.t("xlsub2script","selectively");
x.t("xlsub2script","want");
x.t("xlsub2script","overwrite");
x.t("xlsub2script","invoked");
x.t("xlsub2script","converts");
x.t("xlsub2script","helper");
x.t("xlsub2script","subsyste");
x.t("xlsub2script","(subsystem)");
x.t("xlsub2script","options");
x.t("xlsub2script","function");
x.t("xlsub2script","xlsub2script");
x.t("xlsub2script","pop");
x.t("xlsub2script","pick");
x.t("xlsub2script","subsystem");
x.t("xlsub2script","finishes");
x.t("xlsub2script","(block)");
x.t("name-based","binding");
x.t("sig.getsrc","returns");
x.t("asking","sometimes");
x.t("asking","whether");
x.t("programmatic","access");
x.t("programmatic","constructing");
x.t("programmatic","script");
x.t("programmatic","generation");
x.t("works","three");
x.t("works","production");
x.t("added","simulink");
x.t("expected","library");
x.t("calling","xlsub2script");
x.t("calling","xblock");
x.t("purpose","want");
x.t("purpose","xlsub2script");
x.t("truncate","string");
x.t("xblock","xbsindex_r4/addsub");
x.t("xblock","source");
x.t("xblock","block");
x.t("xblock","constructor");
x.t("xblock","methods");
x.t("xblock","xsignal");
x.t("xblock","contructor");
x.t("xblock","takes");
x.t("xblock","addsub");
x.t("xblock","xbstest_r4/assert");
x.t("xblock","two");
x.t("xblock","call");
x.t("xblock","without");
x.t("xblock","object");
x.t("code","remove");
x.t("code","handle");
x.t("code","contains");
x.t("unbiased","inf");
x.t("adds","corresponding");
x.t("return","value");
x.t("level","sysgen");
x.t("xblockhelp","xblockhelp");
x.t("xblockhelp","addsub");
x.t("xblockhelp","without");
x.t("xblockhelp","block_name");
x.t("outport","api");
x.t("outport","names");
x.t("message","guide");
x.t("broken","block");
x.t("upon","constructor");
x.t("nout","block.getnumoutports");
x.t("block.getoutsignals","returns");
x.t("variable","name");
x.t("variable","base");
x.t("constructing","xblock");
x.t("constructing","system");
x.t("existing","m-function");
x.t("existing","model");
x.t("obj","sig");
x.t("obj","xsignal");
x.t("nice","utility");
x.t("basevars","var1");
x.t("basevars","field");
x.t("basevars","xlsub2script");
x.t("basevars","options.basevars");
x.t("pop","question");
x.t("pick","every");
x.t("pick","variables");
x.t("pick","base");
x.t("simulink","built-in");
x.t("simulink","calls");
x.t("simulink","inport");
x.t("simulink","outport");
x.t("simulink","diagram");
x.t("simulink","model");
x.t("configuration","struc");
x.t("inport/outport","binding");
x.t("include","following");
x.t("latency","int");
x.t("named","untiled");
x.t("named","name");
x.t("value","getsrc");
x.t("value","type");
x.t("value","int");
x.t("value","struct");
x.t("main","purpose");
x.t("easier","nice");
x.t("sig.bind","(obj)");
x.t("signed","comp");
x.t("generator","diagrams");
x.t("generator","api");
x.t("generator","programmatic");
x.t("generator","subsystem");
x.t("subsystem","current");
x.t("subsystem","top");
x.t("subsystem","need");
x.t("subsystem","add");
x.t("subsystem","api");
x.t("subsystem","instantiating");
x.t("subsystem","xsignal");
x.t("subsystem","input");
x.t("subsystem","mask");
x.t("subsystem","second");
x.t("subsystem","depended");
x.t("subsystem","top-level");
x.t("subsystem","options");
x.t("subsystem","xblock");
x.t("subsystem","generated");
x.t("subsystem","output");
x.t("subsystem","inserted");
x.t("subsystem","corresponding");
x.t("subsystem","either");
x.t("subsystem","model");
x.t("subsystem","white");
x.t("subsystem","run");
x.t("subsystem","using");
x.t("subsystem","attach");
x.t("subsystem","struct");
x.t("contructor","upon");
x.t("generated","m-function");
x.t("generated","name");
x.t("generated","xsignal");
x.t("generated","subsystem");
x.t("generated","script");
x.t("generate","proper");
x.t("established","simulink");
x.t("takes","four");
x.t("acceptable","value");
x.t("acceptable","values");
x.t("script","single");
x.t("script","file");
x.t("script","entry");
x.t("script","api");
x.t("script","argument");
x.t("script","matlab");
x.t("script","xlsub2script");
x.t("script","xblock");
x.t("script","main");
x.t("script","easier");
x.t("script","system");
x.t("script","break");
x.t("diagram","rerouted");
x.t("diagram","programmatic");
x.t("output","ports");
x.t("output","port");
x.t("specifying","inport/outport");
x.t("block.getinsignals","returns");
x.t("help","message");
x.t("inserted","new");
x.t("inserted","xblock");
x.t("optional","arguments");
x.t("graphic","means");
x.t("transcript","xbsindex_r4/addsub");
x.t("subtraction","------------");
x.t("subtraction","addition");
x.t("examples","top-level");
x.t("examples","calling");
x.t("production","mode");
x.t("addsub","you'll");
x.t("addsub","equivalent");
x.t("xbstest_r4/assert","relation");
x.t("defined","------------");
x.t("defined","return");
x.t("add_block","function");
x.t("generation","introduction");
x.t("generation","api");
x.t("generation","script");
x.t("case","run");
x.t("case","object");
x.t("utility","allows");
x.t("values","corresponding");
x.t("port","xoutport");
x.t("port","source");
x.t("port","field");
x.t("port","bound");
x.t("port","automatically");
x.t("port","block");
x.t("port","name");
x.t("port","constructor");
x.t("port","xinport");
x.t("port","index");
x.t("port","port");
x.t("port","names");
x.t("port","binding");
x.t("sysgen","script");
x.t("global","variables");
x.t("saturate","flag");
x.t("two","arguments");
x.t("two","fields");
x.t("two","port");
x.t("forcewrite","field");
x.t("forcewrite","true");
x.t("forcewrite","basevars");
x.t("note","matlab");
x.t("opened","new");
x.t("debug","script");
x.t("created","library");
x.t("created","new");
x.t("created","system");
x.t("incoming","signals");
x.t("call","creates");
x.t("call","need");
x.t("call","struct");
x.t("system","generator");
x.t("corresponding","parameters");
x.t("corresponding","mask");
x.t("corresponding","system");
x.t("corresponding","model");
x.t("model","debugging");
x.t("model","default");
x.t("model","params");
x.t("model","starting");
x.t("model","xblock");
x.t("model","named");
x.t("model","inserted");
x.t("model","opened");
x.t("model","created");
x.t("model","model");
x.t("run","xlsub2script");
x.t("run","xblock");
x.t("either","existing");
x.t("either","struct");
x.t("except","every");
x.t("break","points");
x.t("used","three");
x.t("pointer","argument");
x.t("following","table");
x.t("following","limitations");
x.t("following","matlab");
x.t("following","xlsub2script");
x.t("following","examples");
x.t("following","names");
x.t("white","spaces");
x.t("finishes","help");
x.t("options.basevars","var1");
x.t("use_carryout","string");
x.t("name1","name2");
x.t("using","graphic");
x.t("instantiates","simulink");
x.t("returns","cell");
x.t("returns","number");
x.t("name2","creates");
x.t("name2","name2");
x.t("without","library");
x.t("without","parameter");
x.t("without","having");
x.t("without","argument");
x.t("without","asking");
x.t("names","block.getinportnames");
x.t("names","sig");
x.t("names","nin");
x.t("names","block.getoutportnames");
x.t("names","acceptable");
x.t("names","port");
x.t("names","names");
x.t("(block)","block");
x.t("modify","mask");
x.t("use_carryin","string");
x.t("attach","top-level");
x.t("struct","xoutport");
x.t("struct","having");
x.t("struct","field");
x.t("struct","treated");
x.t("struct","cell");
x.t("struct","options");
x.t("struct","function");
x.t("struct","name-based");
x.t("struct","basevars");
x.t("struct","port");
x.t("struct","two");
x.t("struct","forcewrite");
x.t("struct","object");
x.t("unsigned","------------");
x.t("subsystems","demonstrated");
x.t("subsystems","added");
x.t("learn","api");
x.t("xbsindex_r4","library");
x.t("==================","========");
x.t("object","passed");
x.t("object","source");
x.t("object","insigs");
x.t("object","bindport");
x.t("object","block");
x.t("object","name");
x.t("object","connects");
x.t("object","corresponds");
x.t("object","src");
x.t("object","xinport");
x.t("object","cell");
x.t("object","represents");
x.t("object","driving");
x.t("object","obj");
x.t("object","defined");
x.t("object","port");
x.t("object","created");
x.t("object","instantiates");
x.t("object","struct");
x.t("object","object");
x.t("specify","input");
x.t("specify","subsystem");
x.t("specify","attach");
x.t("binding","source");
x.t("binding","arguments");
x.t("binding","element");
x.t("binding","specified");
x.t("binding","argument");
x.t("binding","methods");
x.t("binding","matlab");
x.t("binding","cell");
x.t("binding","xblock");
x.t("binding","specifying");
x.t("binding","case");
x.t("sig_name","sig1");
x.t("contains","function");
x.t("block_name","prints");
x.t("comp","string");
}
