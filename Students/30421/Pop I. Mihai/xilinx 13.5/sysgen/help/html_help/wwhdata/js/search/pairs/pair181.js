function FileData_Pairs(x)
{
x.t("clock","enabled");
x.t("clock","rate");
x.t("clock","cycles");
x.t("clock","enable");
x.t("double-clicking","icon");
x.t("example","hardware");
x.t("example","ratio");
x.t("registers","clock");
x.t("placed","design");
x.t("(n-1)","zeroes");
x.t("possible","block");
x.t("possible","implementations");
x.t("below","block");
x.t("provide","enable");
x.t("parameter","dialog");
x.t("hardware","sample");
x.t("hardware","expended");
x.t("hardware","over-clocked");
x.t("receives","two");
x.t("switches","constant");
x.t("switches","data");
x.t("defines","number");
x.t("fpga","implementation");
x.t("within","input");
x.t("shown","below");
x.t("timing","src_ce");
x.t("delayed","sample");
x.t("l/n","input");
x.t("once","(n-1)");
x.t("mux","switches");
x.t("mux","flip-flop");
x.t("mux","used");
x.t("user","defined");
x.t("enabled","input");
x.t("topic","common");
x.t("interspersed","zero");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("dout","hardware");
x.t("dout","result");
x.t("uses","single");
x.t("handled","upsample");
x.t("interface","sample");
x.t("register","whenever");
x.t("icon","simulink");
x.t("essentially","sample");
x.t("sample","sample");
x.t("sample","times");
x.t("sample","xilinx");
x.t("sample","rate");
x.t("sample","start");
x.t("sample","block");
x.t("sample","frame");
x.t("sample","period");
x.t("sample","duplicated");
x.t("sample","important");
x.t("sample","latency");
x.t("sample","periods");
x.t("sample","inserted");
x.t("sample","integer");
x.t("sample","either");
x.t("basic","elements");
x.t("basic","tab");
x.t("times","checkbox");
x.t("times","samples");
x.t("xilinx","sample");
x.t("xilinx","blockset");
x.t("rate","non-integer");
x.t("rate","multiplier");
x.t("rate","input");
x.t("rate","point");
x.t("rate","notice");
x.t("rate","number");
x.t("rate","selecting");
x.t("rate","dest_ce");
x.t("copied","presented");
x.t("followed","register");
x.t("whenever","possible");
x.t("down","sample");
x.t("multiple","clock");
x.t("listed","following");
x.t("increases","sample");
x.t("block's","output");
x.t("single","flip-flop");
x.t("start","input");
x.t("block","placed");
x.t("block","parameter");
x.t("block","receives");
x.t("block","shown");
x.t("block","interface");
x.t("block","listed");
x.t("block","increases");
x.t("block","parameters");
x.t("block","zero");
x.t("block","explained");
x.t("block","configured");
x.t("block","equivalent");
x.t("block","placing");
x.t("block","two");
x.t("block","copy");
x.t("block","non-zero");
x.t("block","used");
x.t("block","behavior");
x.t("frame","input");
x.t("invoked","double-clicking");
x.t("indicates","doubling");
x.t("during","extra");
x.t("presented","once");
x.t("presented","output");
x.t("directly","dout");
x.t("desired","sample");
x.t("(enable)","input");
x.t("specified","positive");
x.t("libraries","basic");
x.t("box","invoked");
x.t("box","din");
x.t("expended","alternatively");
x.t("faster","clock");
x.t("path","din");
x.t("common","options");
x.t("sampled","within");
x.t("follows","sampling");
x.t("non-integer","ratio");
x.t("cycles","corresponding");
x.t("zero","pad");
x.t("zero","first");
x.t("zero","padding");
x.t("zero","latency");
x.t("zero","optional");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("alternatively","zero");
x.t("implementations","copy");
x.t("pad","followed");
x.t("allows","choose");
x.t("produced","increased");
x.t("explained","topic");
x.t("adjust","timing");
x.t("multiplier","example");
x.t("input","essentially");
x.t("input","sample");
x.t("input","block");
x.t("input","signal");
x.t("input","upsample");
x.t("input","data");
x.t("input","port");
x.t("stream","rate");
x.t("addition","mux");
x.t("combinational","path");
x.t("extra","sample");
x.t("ports","provide");
x.t("selected","mux");
x.t("selected","block");
x.t("selected","additional");
x.t("signals","src_ce");
x.t("point","block");
x.t("notice","circuit");
x.t("configured","zero");
x.t("respect","simulink");
x.t("equivalent","latency");
x.t("period","switches");
x.t("period","l/n");
x.t("period","input");
x.t("period","may");
x.t("period","sampling");
x.t("din","dout");
x.t("din","port");
x.t("checkbox","selected");
x.t("delay","block");
x.t("first","input");
x.t("doubling","input");
x.t("options","block");
x.t("number","sample");
x.t("number","output");
x.t("design","output");
x.t("signal","sampled");
x.t("signal","corresponding");
x.t("placing","shift");
x.t("combination","down");
x.t("duplicated","(copied)");
x.t("may","correspond");
x.t("index","xilinx");
x.t("zeroes","interspersed");
x.t("samples","sample");
x.t("samples","copied");
x.t("samples","zero");
x.t("samples","produced");
x.t("samples","option");
x.t("samples","otherwise");
x.t("samples","per");
x.t("switch","input");
x.t("important","notice");
x.t("connected","directly");
x.t("enable","signals");
x.t("enable","signal");
x.t("enable","port");
x.t("enable","corresponding");
x.t("correspond","multiple");
x.t("adds","(enable)");
x.t("option","selected");
x.t("option","adds");
x.t("greater","zero");
x.t("greater","ratio");
x.t("over-clocked","respect");
x.t("sampling","rate");
x.t("padding","sample");
x.t("padding","selected");
x.t("padding","used");
x.t("zeros","inserted");
x.t("zeros","corresponding");
x.t("upsample","block");
x.t("simulink","model");
x.t("latency","defines");
x.t("latency","handled");
x.t("latency","specified");
x.t("latency","parameters");
x.t("latency","input");
x.t("latency","similar");
x.t("value","greater");
x.t("additional","samples");
x.t("(copied)","during");
x.t("similar","putting");
x.t("constant","zero");
x.t("specific","basic");
x.t("selecting","copy");
x.t("periods","block's");
x.t("implementation","example");
x.t("circuit","uses");
x.t("circuit","zero");
x.t("circuit","combinational");
x.t("dest_ce","faster");
x.t("dest_ce","src_ce");
x.t("putting","delay");
x.t("output","delayed");
x.t("output","sample");
x.t("output","times");
x.t("output","samples");
x.t("output","data");
x.t("inserted","allows");
x.t("inserted","zeros");
x.t("data","stream");
x.t("data","input");
x.t("optional","ports");
x.t("src_ce","clock");
x.t("src_ce","mux");
x.t("src_ce","dest_ce");
x.t("result","sample");
x.t("defined","sample");
x.t("port","connected");
x.t("port","latency");
x.t("port","checked");
x.t("flip-flop","addition");
x.t("flip-flop","used");
x.t("choose","additional");
x.t("two","clock");
x.t("two","possible");
x.t("integer","greater");
x.t("integer","value");
x.t("otherwise","zeros");
x.t("copy","samples");
x.t("positive","integer");
x.t("non-zero","latency");
x.t("following","xilinx");
x.t("elements","index");
x.t("either","presented");
x.t("used","hardware");
x.t("used","block");
x.t("used","adjust");
x.t("used","combination");
x.t("used","switch");
x.t("corresponding","fpga");
x.t("corresponding","input");
x.t("corresponding","circuit");
x.t("corresponding","output");
x.t("model","user");
x.t("model","basic");
x.t("blockset","sample");
x.t("blockset","libraries");
x.t("tab","follows");
x.t("tab","parameters");
x.t("per","input");
x.t("behavior","upsample");
x.t("increased","clock");
x.t("shift","registers");
x.t("ratio","indicates");
x.t("ratio","desired");
x.t("ratio","output");
x.t("checked","option");
}
