function FileData_Pairs(x)
{
x.t("example","xflow");
x.t("placed","routed");
x.t("below","allows");
x.t("available","hardware");
x.t("possible","define");
x.t("parameter","requirements");
x.t("hardware","co-simulation");
x.t("hardware","boards");
x.t("fpga","hardware");
x.t("fpga","bitstream");
x.t("fpga","board");
x.t("defines","various");
x.t("defines","command");
x.t("sysgen/plugins/compilation/bitstream","commonly");
x.t("implement","flow");
x.t("implement","options");
x.t("implement","configure");
x.t("files","provided");
x.t("files","default");
x.t("files","settings");
x.t("files","edit");
x.t("files","base");
x.t("files","modifying");
x.t("files","define");
x.t("files","may");
x.t("files","located");
x.t("files","include");
x.t("files","associated");
x.t("shown","below");
x.t("co-simulation","command");
x.t("co-simulation","settings");
x.t("co-simulation","targets");
x.t("co-simulation","flow");
x.t("co-simulation","compilation");
x.t("co-simulation","specifying");
x.t("ngc","placed");
x.t("timing","analysis");
x.t("create","fpga");
x.t("create","options");
x.t("tree","files");
x.t("various","flows");
x.t("ise","software");
x.t("responsible","compiling");
x.t("execute","trace");
x.t("line","options");
x.t("line","tool");
x.t("uses","two");
x.t("edif","ngc");
x.t("program","typically");
x.t("dialog","box");
x.t("necessary","create");
x.t("provided","target");
x.t("provided","compilation");
x.t("errors","system");
x.t("type","default");
x.t("trace","timing");
x.t("xilinx","ise");
x.t("xilinx","tools");
x.t("xilinx","tool");
x.t("multiple","flows");
x.t("default","options");
x.t("default","configuration");
x.t("default","system");
x.t("compiling","synthesis");
x.t("synthesis","tool");
x.t("want","options");
x.t("command","line");
x.t("placer","effort");
x.t("includes","several");
x.t("boards","specific");
x.t("file","specified");
x.t("file","declares");
x.t("file","input");
x.t("file","edited");
x.t("file","used");
x.t("file","accomplish");
x.t("during","compilation");
x.t("results","case");
x.t("xflow","defines");
x.t("xflow","options");
x.t("xflow","used");
x.t("desired","settings");
x.t("desired","output");
x.t("specified","compilation");
x.t("settings","hardware");
x.t("settings","dialog");
x.t("settings","differ");
x.t("settings","gui");
x.t("settings","design");
x.t("settings","specifying");
x.t("settings","using");
x.t("box","shown");
x.t("edit","default");
x.t("declares","programs");
x.t("base","directory");
x.t("provides","options");
x.t("parameters","available");
x.t("determine","sequence");
x.t("targets","configuration");
x.t("map","par");
x.t("allows","specify");
x.t("modifying","addition");
x.t("programs","run");
x.t("target","xilinx");
x.t("target","provides");
x.t("target","parameters");
x.t("target","configuration");
x.t("target","case");
x.t("copies","default");
x.t("flow","defines");
x.t("flow","responsible");
x.t("flow","execute");
x.t("flow","type");
x.t("flow","settings");
x.t("flow","specifies");
x.t("flow","types");
x.t("flow","runs");
x.t("flow","result");
x.t("expedite","compilation");
x.t("input","implementation");
x.t("differ","e.g");
x.t("addition","configuration");
x.t("selected","fpga");
x.t("sometimes","may");
x.t("config","flow");
x.t("config","options");
x.t("backup","copies");
x.t("options","files");
x.t("options","provided");
x.t("options","file");
x.t("options","tools");
x.t("options","used");
x.t("gui","implementation");
x.t("cause","errors");
x.t("design","during");
x.t("design","selected");
x.t("design","compiled");
x.t("effort","level");
x.t("commonly","used");
x.t("particular","flow");
x.t("define","default");
x.t("define","options");
x.t("may","create");
x.t("may","want");
x.t("may","cause");
x.t("specifies","options");
x.t("software","tree");
x.t("software","includes");
x.t("idea","backup");
x.t("edited","caution");
x.t("achieve","desired");
x.t("types","separate");
x.t("directory","sysgen/plugins/compilation/bitstream");
x.t("directory","xilinx");
x.t("omitted","order");
x.t("bitstream","implementation");
x.t("bitstream","system");
x.t("bitstream","using");
x.t("par","default");
x.t("par","implementation");
x.t("fully","elaborated");
x.t("level","par");
x.t("located","directory");
x.t("e.g","edif");
x.t("e.g","specify");
x.t("netlist","output");
x.t("routed","ncd");
x.t("board","xflow");
x.t("configuration","parameter");
x.t("configuration","flow");
x.t("configuration","options");
x.t("configuration","bitstream");
x.t("configuration","order");
x.t("include","desired");
x.t("include","balanced.opt");
x.t("tools","hardware");
x.t("tools","necessary");
x.t("tools","sometimes");
x.t("tools","ngdbuild");
x.t("ngdbuild","map");
x.t("implementation","flow");
x.t("implementation","options");
x.t("implementation","configuration");
x.t("several","example");
x.t("specific","configuration");
x.t("generator","hardware");
x.t("generator","implement");
x.t("generator","uses");
x.t("generator","config");
x.t("compilation","target");
x.t("compilation","process");
x.t("compilation","typically");
x.t("process","configuration");
x.t("runs","xilinx");
x.t("runs","tools");
x.t("although","program");
x.t("specifying","xilinx");
x.t("sequence","programs");
x.t("output","results");
x.t("output","e.g");
x.t("ncd","file");
x.t("purposes","although");
x.t("separate","xflow");
x.t("good","idea");
x.t("tool","xflow");
x.t("tool","flow");
x.t("tool","netlist");
x.t("configure","design");
x.t("result","typically");
x.t("caution","fpga");
x.t("case","hardware");
x.t("case","may");
x.t("two","flows");
x.t("note","possible");
x.t("typically","multiple");
x.t("typically","omitted");
x.t("typically","good");
x.t("order","expedite");
x.t("order","achieve");
x.t("order","produce");
x.t("system","generator");
x.t("used","implement");
x.t("used","config");
x.t("used","tools");
x.t("used","implementation");
x.t("run","design");
x.t("run","particular");
x.t("run","order");
x.t("using","hardware");
x.t("using","fully");
x.t("accomplish","runs");
x.t("analysis","purposes");
x.t("associated","xflow");
x.t("compiled","system");
x.t("produce","configuration");
x.t("bitgen.opt","note");
x.t("flows","determine");
x.t("flows","implementation");
x.t("flows","run");
x.t("elaborated","ncd");
x.t("specify","options");
x.t("specify","higher");
x.t("higher","placer");
x.t("balanced.opt","bitgen.opt");
}
