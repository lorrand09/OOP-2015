function FileData_Pairs(x)
{
x.t("clock","speed");
x.t("clock","used");
x.t("double-clicking","icon");
x.t("adc1","adc2");
x.t("digital","converter");
x.t("hardware","co-simulation");
x.t("hardware","adc");
x.t("hardware","component");
x.t("adc2","provided");
x.t("co-simulation","separate");
x.t("co-simulation","model");
x.t("14-bit","xilinx");
x.t("14-bit","ad6644");
x.t("components","connect");
x.t("prepared","hardware");
x.t("double","signal");
x.t("xtremedsp","adc");
x.t("xtremedsp","kit");
x.t("xtremedsp","development");
x.t("xtremedsp","analog");
x.t("uses","adc");
x.t("uses","fractional");
x.t("hdl","appropriate");
x.t("dialog","box");
x.t("provided","xtremedsp");
x.t("provided","analog");
x.t("register","adc");
x.t("icon","simulink");
x.t("sample","period");
x.t("pin","location");
x.t("ensuring","port");
x.t("xilinx","xtremedsp");
x.t("xilinx","fixed-point");
x.t("nallatech","benadda");
x.t("nallatech","fuse");
x.t("speed","higher");
x.t("modeled","using");
x.t("denotes","directory");
x.t("block","sample");
x.t("block","modeled");
x.t("block","accepts");
x.t("block","parameters");
x.t("block","allows");
x.t("block","addition");
x.t("block","translated");
x.t("block","output");
x.t("block","data");
x.t("converter","xtremedsp");
x.t("converter","xilinx");
x.t("converter","devices");
x.t("adc","block");
x.t("adc","component");
x.t("adc","blocks");
x.t("file","thereby");
x.t("appropriately","adc");
x.t("invoked","double-clicking");
x.t("found","following");
x.t("bits","hardware");
x.t("accepts","double");
x.t("kit","install");
x.t("kit","blockset");
x.t("channels","nallatech");
x.t("channels","two");
x.t("constraints","file");
x.t("constraints","added");
x.t("programmable","clock");
x.t("box","invoked");
x.t("gateway","drives");
x.t("component","free");
x.t("component","driven");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("allows","system");
x.t("thereby","ensuring");
x.t("fuse\\xtremedsp","development");
x.t("input","channels");
x.t("input","gateway");
x.t("input","produces");
x.t("input","port");
x.t("addition","programmable");
x.t("device","provided");
x.t("blocks","adc1");
x.t("benadda","constraints");
x.t("benadda","board");
x.t("respectively","simulink");
x.t("period","block");
x.t("period","specifies");
x.t("install","directory");
x.t("kit\\docs\\datasheets\\adc","ad6644.pdf");
x.t("top-level","input");
x.t("signal","uses");
x.t("signal","input");
x.t("signal","output");
x.t("specifies","sample");
x.t("software","data");
x.t("directory","containing");
x.t("directory","fuse");
x.t("added","benadda");
x.t("mhz","block");
x.t("produces","signed");
x.t("translated","hardware");
x.t("translated","top-level");
x.t("board","model");
x.t("board","system");
x.t("simulink","adc");
x.t("simulink","model");
x.t("running","clock");
x.t("signed","14-bit");
x.t("free","running");
x.t("specific","adc");
x.t("generator","components");
x.t("generator","model");
x.t("fixed-point","signal");
x.t("separate","adc");
x.t("output","signal");
x.t("output","output");
x.t("output","driven");
x.t("location","constraints");
x.t("location","fuse\\xtremedsp");
x.t("data","sheet");
x.t("appropriate","pin");
x.t("ad6644","device");
x.t("ad6644","analog");
x.t("port","driven");
x.t("port","model");
x.t("sheet","found");
x.t("sheet","data");
x.t("sheet","ad6644");
x.t("two","14-bit");
x.t("two","respectively");
x.t("two","analog");
x.t("fractional","bits");
x.t("driven","adc");
x.t("driven","appropriately");
x.t("driven","two");
x.t("system","generator");
x.t("model","prepared");
x.t("model","uses");
x.t("model","hdl");
x.t("model","parameters");
x.t("model","contains");
x.t("used","hardware");
x.t("following","location");
x.t("connect","two");
x.t("using","input");
x.t("containing","nallatech");
x.t("blockset","xtremedsp");
x.t("development","kit");
x.t("development","kit\\docs\\datasheets\\adc");
x.t("drives","register");
x.t("analog","digital");
x.t("analog","input");
x.t("devices","benadda");
x.t("contains","adc");
x.t("higher","mhz");
x.t("fuse","denotes");
x.t("fuse","software");
}
