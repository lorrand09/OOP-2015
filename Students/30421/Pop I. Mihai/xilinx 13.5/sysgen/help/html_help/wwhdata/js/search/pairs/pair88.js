function FileData_Pairs(x)
{
x.t("complex","multipliers");
x.t("complex","multiplier");
x.t("complex","multiplication");
x.t("interfaces","resulting");
x.t("interfaces","following");
x.t("ctrl_tlast","input");
x.t("ctrl_tlast","pass");
x.t("clock","enable");
x.t("registers","core");
x.t("active","pulse");
x.t("example","shows");
x.t("example","becomes");
x.t("example","following");
x.t("construct","multipliers");
x.t("available","use_mults");
x.t("blocking","mode");
x.t("blocking","selects");
x.t("provide","full-precision");
x.t("determined","system");
x.t("pulse","cycle");
x.t("pulse","two");
x.t("illustrate","design");
x.t("version","provides");
x.t("version","data");
x.t("version","tvalid");
x.t("drive","input");
x.t("5.0","complex");
x.t("5.0","xilinx");
x.t("5.0","block");
x.t("5.0","design");
x.t("within","channel");
x.t("full","explanation");
x.t("clear","input");
x.t("shown","figure");
x.t("independently","xilinx");
x.t("user-specified","options");
x.t("refer","complex");
x.t("refer","topic");
x.t("refer","datasheet");
x.t("description","example");
x.t("always","uses");
x.t("always","takes");
x.t("required","natural");
x.t("required","signal");
x.t("required","output");
x.t("having","additional");
x.t("b_tvalid","driven");
x.t("b_tvalid","operated");
x.t("topic","axi");
x.t("(aclken)","pin");
x.t("enabled","control");
x.t("dialog","box");
x.t("uses","3-real-multiplier");
x.t("uses","4-real");
x.t("uses","multiplier");
x.t("uses","following");
x.t("ctrl_tvalid","ctrl_tdata");
x.t("field","manually");
x.t("shows","migrate");
x.t("interface","within");
x.t("interface","block");
x.t("interface","detailed");
x.t("mode","mode");
x.t("mode","lack");
x.t("icon","display");
x.t("necessary","however");
x.t("multiplicand","inputs");
x.t("basic","tab");
x.t("best","frequency");
x.t("please","refer");
x.t("random_rounding","option");
x.t("type","rounding");
x.t("resets","core");
x.t("migration","detail");
x.t("pin","core");
x.t("response","pulse");
x.t("compiler","5.0");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("however","bursty");
x.t("however","4-real-multiplier");
x.t("execution","operation");
x.t("full-precision","product");
x.t("listed","following");
x.t("product","range");
x.t("product","operand");
x.t("product","output");
x.t("product","specification");
x.t("channel","block");
x.t("channel","operands");
x.t("channel","nonblocking");
x.t("channel","options");
x.t("channel","page");
x.t("channel","ctrl");
x.t("automatically","provide");
x.t("automatically","determined");
x.t("lsb","greater");
x.t("default","unchecked");
x.t("gate","valid");
x.t("details","please");
x.t("advanced","tab");
x.t("certain","features");
x.t("noticeable","difference");
x.t("block","interfaces");
x.t("block","b_tvalid");
x.t("block","uses");
x.t("block","icon");
x.t("block","execution");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","channel");
x.t("block","axi4");
x.t("block","parameters");
x.t("block","multiplier");
x.t("block","implements");
x.t("block","latency");
x.t("block","bit");
x.t("block","dout_tvalid");
x.t("block","using");
x.t("block","tuser");
x.t("axi4-stream","compliant");
x.t("axi4-stream","channels");
x.t("axi4-stream","master");
x.t("compliant","high-performance");
x.t("datasheet","core");
x.t("datasheet","output");
x.t("dout_tlast","output");
x.t("operands","results");
x.t("parameterizable","refer");
x.t("determines","particular");
x.t("determines","behavior");
x.t("bursty","data");
x.t("results","represented");
x.t("bits","result");
x.t("bits","either");
x.t("according","output");
x.t("entry","field");
x.t("3.1","complex");
x.t("due","changes");
x.t("dsp","index");
x.t("dsp","-1l");
x.t("selects","blocking");
x.t("selects","non-blocking");
x.t("features","block");
x.t("channels","slave");
x.t("via","axi4-stream");
x.t("use_luts","luts");
x.t("3-real-multiplier","structure");
x.t("cycle","resets");
x.t("cycle","immediately");
x.t("libraries","axi4");
x.t("resulting","product");
x.t("box","page");
x.t("4-real-multiplier","structure");
x.t("operation","data");
x.t("operation","rounding");
x.t("range","select");
x.t("path","control");
x.t("axi4","complex");
x.t("axi4","version");
x.t("axi4","dsp");
x.t("axi4","versions");
x.t("two\u2019s","complement");
x.t("performance","pulse");
x.t("performance","always");
x.t("performance","manual");
x.t("performance","achieved");
x.t("manual","may");
x.t("enables","clock");
x.t("exactly","due");
x.t("virtex","device");
x.t("construction","options");
x.t("synchronous","clear");
x.t("cycles","required");
x.t("3,3e","dsp");
x.t("parameters","dialog");
x.t("parameters","parameters");
x.t("parameters","specific");
x.t("parameters","non-axi4");
x.t("nonblocking","selects");
x.t("zero","truncate");
x.t("provides","input");
x.t("optimized","complex");
x.t("operand","widths");
x.t("4-real","multiplier");
x.t("multipliers","optimization");
x.t("multipliers","virtex-6");
x.t("aportwidth","bportwidth");
x.t("-the","remaining");
x.t("non-axi","complex");
x.t("non-axi","axi4");
x.t("utilized","a_tvalid");
x.t("multiplier","5.0");
x.t("multiplier","block");
x.t("multiplier","3.1");
x.t("multiplier","construction");
x.t("multiplier","v5.0");
x.t("multiplier","4.0");
x.t("multiplier","structure");
x.t("multiplier","resources");
x.t("optimization","goal");
x.t("allow","best");
x.t("natural","output");
x.t("adjust","block");
x.t("m_axis_dout_tvalid","igrate");
x.t("input","always");
x.t("input","channel");
x.t("input","determines");
x.t("input","ports");
x.t("input","independent");
x.t("input","slave");
x.t("input","output");
x.t("input","port");
x.t("width","complex");
x.t("width","parameterizable");
x.t("width","specifies");
x.t("width","less");
x.t("width","values");
x.t("width","ctrl_tuser");
x.t("flow","control");
x.t("ports","and_all_tlasts");
x.t("ports","core");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","maximum");
x.t("logicore","system");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("virtex-6","spartan-6");
x.t("selected","ctrl_tvalid");
x.t("selected","say");
x.t("selected","tlast");
x.t("selected","resources");
x.t("activated","random");
x.t("random","rounding");
x.t("present","tlast");
x.t("signals","shown");
x.t("signals","noticeable");
x.t("signals","utilized");
x.t("signals","aclken");
x.t("signals","may");
x.t("signals","note");
x.t("independent","axi4-stream");
x.t("frequency","performance");
x.t("multiplication","aportwidth");
x.t("pass_a_tlast","pass");
x.t("aclken","enables");
x.t("aclken","minimum");
x.t("registered","performance");
x.t("display","display");
x.t("display","shortened");
x.t("bportwidth","details");
x.t("bportwidth","output");
x.t("explanation","channel");
x.t("logical","present");
x.t("automatic","block");
x.t("options","blocking");
x.t("options","activated");
x.t("options","use_mults");
x.t("options","two");
x.t("options","following");
x.t("options","tlast");
x.t("luts","fabric");
x.t("select","output");
x.t("fixed","aportwidth");
x.t("minimum","block");
x.t("minimum","latency");
x.t("minimum","aresetn");
x.t("igrate","complex");
x.t("control","signals");
x.t("control","options");
x.t("control","signal");
x.t("non-blocking","mode");
x.t("v5.0","datasheet");
x.t("and_all_tlasts","pass");
x.t("underlying","logicore");
x.t("decoding","circuits");
x.t("implements","axi4-stream");
x.t("truncated","rounded");
x.t("maximum","performance");
x.t("signal","axi4");
x.t("signal","aresetn");
x.t("signal","internally");
x.t("design","description");
x.t("design","migration");
x.t("high-performance","optimized");
x.t("particular","example");
x.t("particular","type");
x.t("specifies","bit");
x.t("may","necessary");
x.t("may","adjust");
x.t("may","identical");
x.t("index","math");
x.t("detailed","information");
x.t("format","operand");
x.t("use_mults","selected");
x.t("use_mults","embedded");
x.t("section","complex");
x.t("identical","exactly");
x.t("changes","certain");
x.t("msb","fixed");
x.t("truncate","truncate");
x.t("truncate","output");
x.t("added","block");
x.t("-1l","complex");
x.t("-1l","-1l");
x.t("enable","(aclken)");
x.t("active-low","synchronous");
x.t("master","interface");
x.t("master","d_valid");
x.t("adds","ctrl_tlast");
x.t("adds","tuser");
x.t("adds","ctrl_user");
x.t("adds","tlast");
x.t("option","selected");
x.t("embedded","multipliers/xtremedsp");
x.t("greater","zero");
x.t("ctrl_tdata","input");
x.t("4.0","product");
x.t("unchecked","dout_tvalid");
x.t("slave","interfaces");
x.t("slave","tvalid");
x.t("less","significant");
x.t("null","pass_a_tlast");
x.t("null","output");
x.t("dds","compiler");
x.t("spartan-6","devices");
x.t("latency","automatically");
x.t("latency","entry");
x.t("latency","minimum");
x.t("latency","control");
x.t("latency","latency");
x.t("latency","configuration");
x.t("latency","specifying");
x.t("configuration","automatic");
x.t("steaming","application");
x.t("represented","signed");
x.t("value","ctrl_tlast");
x.t("value","a_tlast");
x.t("value","b_tlast");
x.t("core","registers");
x.t("core","enabled");
x.t("core","response");
x.t("core","latency");
x.t("core","data");
x.t("similar","block");
x.t("additional","decoding");
x.t("signed","two\u2019s");
x.t("specific","basic");
x.t("aresetn","active");
x.t("aresetn","active-low");
x.t("figure","above");
x.t("lack","data");
x.t("generator","block");
x.t("generator","pipelining");
x.t("pipelining","underlying");
x.t("a_tlast","input");
x.t("takes","priority");
x.t("valid","input");
x.t("output","random_rounding");
x.t("output","product");
x.t("output","lsb");
x.t("output","via");
x.t("output","-the");
x.t("output","width");
x.t("output","msb");
x.t("output","null");
x.t("output","data");
x.t("output","bit");
x.t("output","sign-extended");
x.t("output","tvalid");
x.t("output","port");
x.t("output","rounding");
x.t("output","tlast");
x.t("page","tab");
x.t("ctrl","options");
x.t("specifying","minimum");
x.t("optional","rounding");
x.t("information","axi");
x.t("data","path");
x.t("data","input");
x.t("data","received");
x.t("data","sheet");
x.t("data","without");
x.t("data","flows");
x.t("internally","registered");
x.t("becomes","m_axis_dout_tvalid");
x.t("bit","input");
x.t("bit","width");
x.t("bit","ctrl_tdata");
x.t("result","width");
x.t("result","output");
x.t("goal","available");
x.t("received","input");
x.t("sign-extended","required");
x.t("or_all_tlasts","pass");
x.t("dout_tvalid","example");
x.t("dout_tvalid","used");
x.t("values","automatically");
x.t("tvalid","signals");
x.t("tvalid","control");
x.t("tvalid","signal");
x.t("application","control");
x.t("port","channel");
x.t("port","block");
x.t("port","dout_tlast");
x.t("port","added");
x.t("port","null");
x.t("port","output");
x.t("port","or_all_tlasts");
x.t("port","pass");
x.t("port","names");
x.t("structure","uses");
x.t("structure","however");
x.t("structure","allow");
x.t("structure","used");
x.t("specification","full");
x.t("migrate","non-axi");
x.t("above","steaming");
x.t("sheet","spartan");
x.t("two","multiplicand");
x.t("two","cycles");
x.t("priority","aclken");
x.t("non-axi4","axi4");
x.t("note","a_tvalid");
x.t("based","user-specified");
x.t("slices","use_luts");
x.t("significant","bits");
x.t("complement","format");
x.t("immediately","following");
x.t("a_tvalid","b_tvalid");
x.t("a_tvalid","driven");
x.t("driven","master");
x.t("following","xilinx");
x.t("following","advanced");
x.t("following","options");
x.t("following","control");
x.t("following","model");
x.t("used","illustrate");
x.t("used","drive");
x.t("used","gate");
x.t("used","multiplier");
x.t("either","truncated");
x.t("rounded","according");
x.t("say","output");
x.t("b_tlast","input");
x.t("b_tlast","pass");
x.t("system","generator");
x.t("model","used");
x.t("rounding","required");
x.t("rounding","operation");
x.t("rounding","selected");
x.t("rounding","section");
x.t("rounding","option");
x.t("rounding","bit");
x.t("rounding","rounding");
x.t("axi","interface");
x.t("remaining","bits");
x.t("using","similar");
x.t("blockset","complex");
x.t("blockset","libraries");
x.t("tab","channel");
x.t("tab","block");
x.t("tab","parameters");
x.t("tab","output");
x.t("tuser","input");
x.t("tuser","width");
x.t("tuser","adds");
x.t("fabric","construct");
x.t("ctrl_user","input");
x.t("pass","ctrl_tlast");
x.t("pass","logical");
x.t("pass","value");
x.t("pass","b_tlast");
x.t("manually","specifying");
x.t("kintex","device");
x.t("tlast","input");
x.t("tlast","adds");
x.t("tlast","behavior");
x.t("behavior","dout_tlast");
x.t("behavior","determines");
x.t("shortened","port");
x.t("names","default");
x.t("without","having");
x.t("operated","independently");
x.t("multipliers/xtremedsp","slices");
x.t("achieved","flow");
x.t("versions","may");
x.t("spartan","device");
x.t("math","complex");
x.t("circuits","particular");
x.t("devices","based");
x.t("inputs","optional");
x.t("widths","output");
x.t("widths","result");
x.t("resources","uses");
x.t("resources","performance");
x.t("ctrl_tuser","input");
x.t("detail","refer");
x.t("difference","non-axi");
x.t("flows","used");
x.t("d_valid","dds");
}
