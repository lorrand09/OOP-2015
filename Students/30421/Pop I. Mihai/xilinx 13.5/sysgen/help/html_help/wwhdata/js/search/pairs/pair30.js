function FileData_Pairs(x)
{
x.t("example","top-level");
x.t("example","following");
x.t("four","different");
x.t("token","modelsim");
x.t("token","change");
x.t("token","note");
x.t("placed","routed");
x.t("available","processes");
x.t("below","process");
x.t("properties","dialog");
x.t("properties","brings");
x.t("structural","processes");
x.t("fpga","physical");
x.t("fpga","bitstream");
x.t("hardware","design");
x.t("compxlib","program");
x.t("compxlib","command");
x.t("compxlib","found");
x.t("compxlib","mti_se");
x.t("version","modelsim");
x.t("files","create");
x.t("files","modelsim");
x.t("files","xilinx");
x.t("files","produced");
x.t("files","project");
x.t("files","generated");
x.t("files","created");
x.t("within","project");
x.t("full","path");
x.t("full","software");
x.t("pn_postpar.do","respectively");
x.t("pn_postpar.do","run");
x.t("console","window");
x.t("console","opens");
x.t("implement","design");
x.t("installed","version");
x.t("create","testbench");
x.t("_tb.vhd/.v","file");
x.t("ise","project");
x.t("ise","general");
x.t("instructions","running");
x.t("source","messages");
x.t("preferences","brings");
x.t("post-mapped","design");
x.t("creates","four");
x.t("creates","custom");
x.t("creates","several");
x.t("user","guide");
x.t("hdl","files");
x.t("hdl","source");
x.t("hdl","libraries");
x.t("hdl","module");
x.t("hdl","simulation");
x.t("line","compile");
x.t("line","tools");
x.t("program","example");
x.t("dialog","box");
x.t("field","project");
x.t("shows","processes");
x.t("shows","system");
x.t("uses","input");
x.t("generating","fpga");
x.t("generating","bitstream");
x.t("physical","design");
x.t("necessary","hdl");
x.t("necessary","produce");
x.t("provided","design");
x.t("errors","generating");
x.t("working","project");
x.t("modelsim","compxlib");
x.t("modelsim","within");
x.t("modelsim","files");
x.t("modelsim","console");
x.t("modelsim","modelsim");
x.t("modelsim","open");
x.t("modelsim","multiple");
x.t("modelsim","simulator");
x.t("modelsim",".do");
x.t("modelsim","may");
x.t("modelsim","reports");
x.t("modelsim","project");
x.t("modelsim","tool");
x.t("modelsim","model");
x.t("titled","compxlib");
x.t("open","xilinx");
x.t("open","customizing");
x.t("open","windows");
x.t("open","project");
x.t("pn_postmap.do","pn_postpar.do");
x.t("pn_postmap.do","run");
x.t("change","settings");
x.t("change","device");
x.t("regenerated","case");
x.t("left","simulation");
x.t("xilinx","ise");
x.t("xilinx","software");
x.t("xilinx","partner");
x.t("xilinx","cores");
x.t("xilinx","translation");
x.t("multiple","ways");
x.t("testbench","uses");
x.t("testbench","testbench");
x.t("testbench","option");
x.t("down","menu");
x.t("behavioral","(hdl)");
x.t("behavioral","simulation");
x.t("behavioral","model");
x.t("speed","synthesis");
x.t("speed","grade");
x.t("compiling","simulate");
x.t("synthesis","bitstream");
x.t("synthesis","implementation");
x.t("synthesis","tool");
x.t("design_name","_cw.ise");
x.t("access","files");
x.t("command","line");
x.t("command","used");
x.t("includes","back-annotated");
x.t("translating","mapping");
x.t("simulator","files");
x.t("simulator","become");
x.t("simulator","edit");
x.t("simulator","appear");
x.t("simulator","process");
x.t("found","chapter");
x.t("file","fpga");
x.t("file","field");
x.t("file","open");
x.t("file","includes");
x.t("file","association");
x.t("file","select");
x.t("file","project");
x.t("file","windows");
x.t("file","already");
x.t("file","process");
x.t("file","import");
x.t("file","runs");
x.t("file","called");
x.t("file","used");
x.t("clicking","plus");
x.t("my_project_cw.ise","open");
x.t("my_project_cw.ise","used");
x.t("my_project_cw.ise","system");
x.t("complete","instructions");
x.t("menu","browse");
x.t("menu","edit");
x.t("menu","select");
x.t("during","code");
x.t("guide","click");
x.t("results","provided");
x.t("results","simulink");
x.t("browse","location");
x.t("pn_behavioral.do","behavioral");
x.t("pn_behavioral.do","pn_posttranslate.do");
x.t("become","available");
x.t("specified","system");
x.t("directly","choose");
x.t("constraints","editor");
x.t("(cores)","libraries");
x.t("libraries","modelsim");
x.t("libraries","complete");
x.t("libraries","using");
x.t("mti_se","simulation");
x.t("brings","dialog");
x.t("brings","design");
x.t("box","shows");
x.t("box","dialog");
x.t("box","change");
x.t("box","enter");
x.t("box","include");
x.t("box","choose");
x.t("path","version");
x.t("name","executable");
x.t("association",".ise");
x.t("settings","right-click");
x.t("edit","preferences");
x.t("edit","box");
x.t("post-route","simulation");
x.t("custom","file");
x.t("custom",".do");
x.t("part","full");
x.t("re-generate","project");
x.t("back-annotated","simulation");
x.t("plus","button");
x.t("window","shows");
x.t("window","select");
x.t("window","project");
x.t("window","right-click");
x.t("top-","level");
x.t("double-click","simulation");
x.t("double-click",".ise");
x.t("produced","bitstream");
x.t("produced","system");
x.t("target","directory");
x.t("flow","compiling");
x.t("input","stimuli");
x.t("customizing","system");
x.t("device","family");
x.t("device","package");
x.t("selected","hdl");
x.t("selected","system");
x.t("viewers","implement");
x.t("error","free");
x.t("family","xilinx");
x.t("whatever","processes");
x.t("mapped","file");
x.t("respectively","select");
x.t("first","step");
x.t("first","opening");
x.t("select","behavioral");
x.t("select","top-");
x.t("select","design");
x.t("select","run");
x.t("button","left");
x.t("top-level","hdl");
x.t("top-level","pull");
x.t("options","within");
x.t("messages","console");
x.t("processing","system");
x.t(".do","files");
x.t(".do","file");
x.t("standalone","modelsim");
x.t("design","example");
x.t("design","placed");
x.t("design","properties");
x.t("design","fpga");
x.t("design","pn_postpar.do");
x.t("design","_tb.vhd/.v");
x.t("design","synthesis");
x.t("design","access");
x.t("design","file");
x.t("design","error");
x.t("design","mapped");
x.t("design","options");
x.t("design","compile");
x.t("design","simply");
x.t("design","project");
x.t("design","tools");
x.t("design","implementation");
x.t("design","generated");
x.t("design","simulation");
x.t("design","using");
x.t("better","return");
x.t("may","open");
x.t("may","double-click");
x.t("may","associate");
x.t("may","run");
x.t("navigator","working");
x.t("navigator","file");
x.t("navigator","during");
x.t("navigator","part");
x.t("navigator","design");
x.t("navigator","launch");
x.t("navigator","project");
x.t("navigator","synthesize");
x.t("navigator","synthesizing");
x.t("navigator","tool");
x.t("navigator","choose");
x.t("navigator","run");
x.t("navigator","specify");
x.t("software","tools");
x.t("software","implementation");
x.t("chapter","titled");
x.t("launch","modelsim");
x.t("launch","opening");
x.t("different","modelsim");
x.t("different","stages");
x.t("processes","necessary");
x.t("processes","window");
x.t("processes","view");
x.t("processes","run");
x.t("editor","report");
x.t("ways","compile");
x.t("step","first");
x.t("step","project");
x.t("step","implementation");
x.t("partner","software");
x.t("report","viewers");
x.t("compile","hdl");
x.t("compile","necessary");
x.t("compile","(cores)");
x.t("compile","libraries");
x.t("compile","run");
x.t("opens","associated");
x.t("directory","specified");
x.t("pull","down");
x.t("implementing","design");
x.t("my_project_cw","structural");
x.t("pn_posttranslate.do","pn_postmap.do");
x.t("pn_posttranslate.do","file");
x.t("simply","instruct");
x.t("reports","simulation");
x.t("bitstream","creation");
x.t("bitstream","xilinx");
x.t("bitstream","selected");
x.t("bitstream","design");
x.t("bitstream","sources");
x.t("code","generation");
x.t("return","system");
x.t("level","hdl");
x.t("option","selected");
x.t("appear","image");
x.t("click","open");
x.t("enter","full");
x.t("executable","file");
x.t("finished","without");
x.t("project","files");
x.t("project","modelsim");
x.t("project","open");
x.t("project","synthesis");
x.t("project","file");
x.t("project","top-level");
x.t("project","first");
x.t("project","navigator");
x.t("project","may");
x.t("project","implementing");
x.t("project","already");
x.t("windows","command");
x.t("windows","explorer");
x.t("routed","file");
x.t("include","name");
x.t("simulink","results");
x.t("simulink","compares");
x.t("discussion","opening");
x.t("sources","window");
x.t("tools","hardware");
x.t("tools","user");
x.t("tools","hdl");
x.t("tools","constraints");
x.t("tools","processing");
x.t("tools","project");
x.t("tools","category");
x.t("running","compxlib");
x.t("main","menu");
x.t("post-map","simulation");
x.t("right-click","generate");
x.t("right-click","top_leve");
x.t("named","my_project_cw");
x.t("implementation","pn_postmap.do");
x.t("implementation","flow");
x.t("implementation","pn_posttranslate.do");
x.t("implementation","view");
x.t("implementation","system");
x.t("already","run");
x.t("already","associated");
x.t("free","modelsim");
x.t("several","project");
x.t("synthesize","simulate");
x.t("generator","token");
x.t("generator","creates");
x.t("generator","regenerated");
x.t("generator","testbench");
x.t("generator","my_project_cw.ise");
x.t("generator","pn_behavioral.do");
x.t("generator","re-generate");
x.t("generator","processing");
x.t("generator",".do");
x.t("generator","design");
x.t("generator","project");
x.t("generated","bitstream");
x.t("generated","project");
x.t("generated","simulink");
x.t("view","modelsim");
x.t("view","select");
x.t("view","pull-down");
x.t("view","expand");
x.t("process","properties");
x.t("process","modelsim");
x.t("process","clicking");
x.t("process","double-click");
x.t("process","associated");
x.t("process","labeled");
x.t("import","system");
x.t("generate","programming");
x.t("programming","file");
x.t("synthesizing","translating");
x.t("simulations","four");
x.t("simulations","within");
x.t("simulations","standalone");
x.t("runs","simulation");
x.t("opening","my_project_cw.ise");
x.t("opening","project");
x.t("opening","system");
x.t("instruct","project");
x.t("location","installed");
x.t("location","system");
x.t("output","xilinx");
x.t("tool","directly");
x.t("tool","device");
x.t("tool","may");
x.t("tool","opening");
x.t("tool","note");
x.t("(ngdbuild)","step");
x.t("pull-down","menu");
x.t("module","design");
x.t("module","processes");
x.t("module","named");
x.t("image","below");
x.t("stimuli","generated");
x.t("grade","specified");
x.t("expand","modelsim");
x.t("generation","system");
x.t("cores","produced");
x.t("case","better");
x.t("routing","generating");
x.t("choose","ise");
x.t("choose","file");
x.t("choose","main");
x.t("called","design_name");
x.t("explorer","project");
x.t("note","change");
x.t("note","my_project_cw.ise");
x.t("top_leve","design");
x.t("associate","xilinx");
x.t("tech","simulator");
x.t("created","target");
x.t("created","system");
x.t("_cw.ise","created");
x.t("causes","project");
x.t("package","speed");
x.t("mapping","routing");
x.t("system","generator");
x.t("simulation","post-mapped");
x.t("simulation","hdl");
x.t("simulation","results");
x.t("simulation","post-route");
x.t("simulation","design");
x.t("simulation","step");
x.t("simulation","finished");
x.t("simulation","post-map");
x.t("simulation","view");
x.t("simulation","process");
x.t("simulation","output");
x.t("simulation","system");
x.t("simulation","post-translate");
x.t("simulation","corresponding");
x.t("simulation","using");
x.t("run","whatever");
x.t("run","top-level");
x.t("run","design");
x.t("run","simulations");
x.t("run","simulation");
x.t("run","system");
x.t("run","instructing");
x.t("following","command");
x.t("following","discussion");
x.t("used","compile");
x.t("used","following");
x.t("model","process");
x.t("model","tech");
x.t("(hdl)","simulation");
x.t("post-translate","simulation");
x.t("corresponding","pn_behavioral.do");
x.t("using","compxlib");
x.t("using","modelsim");
x.t("using","system");
x.t("general","integrated");
x.t("compares","hdl");
x.t("stages","implementation");
x.t("translation","(ngdbuild)");
x.t(".ise","file");
x.t(".ise","causes");
x.t("simulate","implement");
x.t("simulate","behavioral");
x.t("simulate","design");
x.t("associated","modelsim");
x.t("associated","custom");
x.t("without","errors");
x.t("labeled","simulate");
x.t("category","dialog");
x.t("instructing","project");
x.t("produce","programming");
x.t("specify","location");
x.t("integrated","tools");
}
