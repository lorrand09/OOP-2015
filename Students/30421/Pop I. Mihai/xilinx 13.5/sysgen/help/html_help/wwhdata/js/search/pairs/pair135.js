function FileData_Pairs(x)
{
x.t("supports","following");
x.t("supports","limited");
x.t("coding","guidelines");
x.t("coding","style");
x.t("example","else");
x.t("example","infers");
x.t("example","init");
x.t("example","topic");
x.t("example","isnan");
x.t("example","fix_8_4");
x.t("example","illustrates");
x.t("example","given");
x.t("example","variable");
x.t("example","consider");
x.t("example","latency");
x.t("example","multiplying");
x.t("example","num2str");
x.t("example","xfix");
x.t("example","described");
x.t("example","above");
x.t("example","xl_state");
x.t("example","following");
x.t("statements","provided");
x.t("statements","infer");
x.t("statements","simple");
x.t("statements","completed");
x.t("statements","contain");
x.t("statements","switch");
x.t("statements","executed");
x.t("statements","consider");
x.t("statements","arithmetic");
x.t("equal","equal");
x.t("equal","logical");
x.t("equal","greater");
x.t("precision","precision");
x.t("precision","uses");
x.t("precision","state");
x.t("precision","i.e");
x.t("precision","needed");
x.t("precision","specified");
x.t("precision","argument");
x.t("precision","cell");
x.t("precision","addition");
x.t("precision","maxlen");
x.t("precision","value");
x.t("precision","output");
x.t("precision","xl_state");
x.t("precision","following");
x.t("precision","returns");
x.t("precision","shift");
x.t("looks","following");
x.t("quantizes","rounding");
x.t("overflow","precision");
x.t("overflow","mode");
x.t("overflow","xlwrap");
x.t("overflow","occurs");
x.t("overflow","several");
x.t("overflow","type_spec");
x.t("four","built-in");
x.t("4-bit","accumulator");
x.t("clock","cycle");
x.t("clock","number");
x.t("clock","hello");
x.t("registers","registers");
x.t("registers","state");
x.t("registers","delay");
x.t("registers","function");
x.t("registers","inferred");
x.t("ieee","arithmetic");
x.t("debugging","m-function");
x.t("debugging","examine");
x.t("debugging","checkbox");
x.t("debugging","option");
x.t("differently","achieved");
x.t("passed","xl_state");
x.t("double-clicking","block");
x.t("tells","name");
x.t("parameter","implement");
x.t("parameter","mcode");
x.t("parameter","dialog");
x.t("parameter","block");
x.t("parameter","three");
x.t("parameter","function");
x.t("parameter","passing");
x.t("exist","matlab");
x.t("exist","three");
x.t("below","consists");
x.t("below","matlab");
x.t("possible","overflow");
x.t("possible","locations");
x.t("possible","execution");
x.t("possible","m-function");
x.t("possible","infer");
x.t("possible","quantization");
x.t("illustrate","ideas");
x.t("else","reset");
x.t("else","din");
x.t("else","end");
x.t("else","variable");
x.t("integers","done");
x.t("properties","fixed-");
x.t("properties","xl_nbits");
x.t("properties","xl_arith");
x.t("properties","order");
x.t("properties","arithmetic");
x.t("xlunsigned","persistent");
x.t("xlunsigned","xlsigned");
x.t("xlunsigned","nextstate");
x.t("xlunsigned","myfn");
x.t("xlunsigned","width");
x.t("xlunsigned","4,0");
x.t("xlunsigned","code");
x.t("xlunsigned","elseif");
x.t("xlunsigned","signed");
x.t("xlunsigned","2,0");
x.t("method","example");
x.t("method","vector");
x.t("method","(idx)");
x.t("method","return");
x.t("method","invocation");
x.t("method","update");
x.t("provide","three");
x.t("indexed","block");
x.t("indexed","zero");
x.t("indexed","msb");
x.t("available","mcode");
x.t("available","statement");
x.t("available","vector");
x.t("available","switch");
x.t("available","variable");
x.t("unchanged","vector");
x.t("(0)","coef");
x.t("(0)","1:n-1");
x.t("(0)","(1)");
x.t("de-asserted","persistent");
x.t("de-asserted","resulting");
x.t("3.14159","persistent");
x.t("hardware","generated");
x.t("hardware","using");
x.t("hardware","resources");
x.t("fpga","clock");
x.t("fpga","shows");
x.t("fpga","device");
x.t("fpga","error");
x.t("fpga","bitstream");
x.t("fpga","result");
x.t("ideas","consider");
x.t("converted","boolean");
x.t("converted","xfix");
x.t("receives","xfix");
x.t("right","coding");
x.t("right","shifting");
x.t("right","shift");
x.t("moves","fixed-point");
x.t("ram_enable","proto");
x.t("1010","double");
x.t("1-by-4","vector");
x.t("just","aware");
x.t("state=xl_state","xlunsigned");
x.t("detected","mcode");
x.t("within","simulink");
x.t("subdirectory","model");
x.t("relational","operands");
x.t("relational","operators");
x.t("xl_concat","reinterpret");
x.t("xl_concat","function");
x.t("xl_concat","xl_slice");
x.t("xl_concat","mid");
x.t("applied","boolean");
x.t("every","possible");
x.t("every","time");
x.t("every","operation");
x.t("full","precision");
x.t("full","v.pop_front");
x.t("full","otherwise");
x.t("full","v.pop_back");
x.t("full","v.full");
x.t("equivalently","case");
x.t("equivalently","type_spec");
x.t("approximation","approximation");
x.t("approximation","signed");
x.t("console","mcode");
x.t("console","start");
x.t("console","requires");
x.t("console","code");
x.t("console","option");
x.t("console","call");
x.t("console","special");
x.t("mathematically","undefined");
x.t("clear","functions");
x.t("shown","input");
x.t("infers","register");
x.t("infers","reset");
x.t("infers","enable");
x.t("saved","next");
x.t("implement","register");
x.t("implement","delay");
x.t("implement","using");
x.t("mcode","mcode");
x.t("mcode","state");
x.t("mcode","xilinx");
x.t("mcode","block");
x.t("mcode","blocks");
x.t("mcode","function");
x.t("mcode","two");
x.t("mcode","insert");
x.t("build","state");
x.t("build","finite");
x.t("xl_not","mcode");
x.t("xl_not","performs");
x.t("xl_not","bit-wise");
x.t("xl_not","(a)");
x.t("xl_not","function");
x.t("xl_not","(x)");
x.t("create","value");
x.t("built-in","functions");
x.t("aligned","binary");
x.t("8-bit","wide");
x.t("init","precision");
x.t("init","example");
x.t("init","else");
x.t("init","persistent");
x.t("init","xlsigned");
x.t("init","myfn");
x.t("init","din");
x.t("init","initial");
x.t("init","end");
x.t("init","enable");
x.t("init","maxlen");
x.t("init","constant");
x.t("init","inference");
x.t("init","xfix");
x.t("init","rst");
x.t("init","(rst)");
x.t("(val)","pushes");
x.t("(val)","v.pop_front");
x.t("(val)","query");
x.t("(val)","v.pop_back");
x.t("static","precision");
x.t("static","independent");
x.t("refer","next");
x.t("once","control");
x.t("once","model");
x.t("binary","1010");
x.t("binary","double");
x.t("binary","0001.0000000");
x.t("binary","0011.0000000");
x.t("binary","010.1100000");
x.t("binary","point");
x.t("binary","10110");
x.t("binary","0000.0000000");
x.t("binary","0010.0000000");
x.t("binary","value");
x.t("concatenate","function");
x.t("variables","every");
x.t("variables","mcode");
x.t("variables","conditional");
x.t("variables","however");
x.t("variables","incompatible");
x.t("variables","contain");
x.t("variables","hold");
x.t("variables","delay");
x.t("variables","branches");
x.t("variables","compared");
x.t("variables","consider");
x.t("variables","typing");
x.t("variables","fixed-point");
x.t("variables","above");
x.t("variables","xl_state");
x.t("variables","model");
x.t("variables","using");
x.t("kinds","xfix");
x.t("having","binary");
x.t("having","three");
x.t("having","different");
x.t("having","two");
x.t("persistent","variables");
x.t("persistent","dout_temp");
x.t("persistent","state");
x.t("persistent","initially");
x.t("persistent","coef");
x.t("persistent","dly");
x.t("persistent","rom");
x.t("persistent","regs");
x.t("persistent","first");
x.t("persistent","ff1");
x.t("persistent","ff2");
x.t("persistent","variable");
x.t("persistent","mem");
x.t("persistent","xl_state");
x.t("persistent","assumed");
x.t("lat","persistent");
x.t("lat","lat");
x.t("lat","r.back");
x.t("(d)","xl_concat");
x.t("(d)","persistent");
x.t("(d)","line");
x.t("(d)","vector");
x.t("(d)","xl_slice");
x.t("(d)","end");
x.t("cnt","cnt");
x.t("cnt","end");
x.t("mechanism","allows");
x.t("container's","precision");
x.t("required","xfix");
x.t("arguments","shown");
x.t("arguments","aligned");
x.t("arguments","first");
x.t("arguments","select");
x.t("arguments","bit");
x.t("arguments","values");
x.t("performs","bit-wise");
x.t("performs","dead");
x.t("xlmcode_testdisp/mcode","simulink");
x.t("0.0","0.000000");
x.t("fix_5_0","binary");
x.t("apply","button");
x.t("sub","else");
x.t("sub","sub");
x.t("sub","false");
x.t("sub","perform");
x.t("sub","following");
x.t("container","state");
x.t("container","needed");
x.t("container","executing");
x.t("derived","matlab");
x.t("topic","titled");
x.t("topic","compiling");
x.t("topic","common");
x.t("topic","matlab");
x.t("topic","disp");
x.t("topic","pipelining");
x.t("double","precision");
x.t("double","0.0");
x.t("double","ended");
x.t("double","xilinx");
x.t("double","2.75");
x.t("double","3.0");
x.t("double","10.0");
x.t("double","char");
x.t("double","find");
x.t("double","(state)");
x.t("double","1.0");
x.t("double","logical");
x.t("double","function");
x.t("double","added");
x.t("double","0.000000");
x.t("double","-10.0");
x.t("double","xfix");
x.t("double","values");
x.t("double","2.0");
x.t("double","call");
x.t("double","(i)");
x.t("converting","unsigned");
x.t("creates","1-by-4");
x.t("creates","vector");
x.t("creates","empty");
x.t("creates","xfix");
x.t("v.empty","returns");
x.t("v.empty","v.length");
x.t("blockram","single");
x.t("current","state");
x.t("current","length");
x.t("current","value");
x.t("0001.0000000","double");
x.t("formatting","supported");
x.t("execute","clear");
x.t("outputs","xilinx");
x.t("outputs","during");
x.t("outputs","delay");
x.t("uses","block");
x.t("uses","m-function");
x.t("uses","xlround");
x.t("shows","build");
x.t("shows","mcode");
x.t("shows","bindings");
x.t("shows","block");
x.t("shows","three");
x.t("shows","several");
x.t("locations","time");
x.t("locations","directory");
x.t("reinterpret","function");
x.t("conditional","assignment");
x.t("conditional","contain");
x.t("conditional","assignments");
x.t("conditional","expression");
x.t("last","clock");
x.t("last","input");
x.t("declared","persistent");
x.t("declared","matlab");
x.t("line","registers");
x.t("line","creates");
x.t("line","state");
x.t("line","addressable");
x.t("line","type");
x.t("line","includes");
x.t("line","function");
x.t("line","printed");
x.t("dout","dout_temp");
x.t("dout","ram");
x.t("dout","mem");
x.t("dout","xfix");
x.t("dout","xl_sconvert");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("dialog","click");
x.t("pair","mcode");
x.t("generating","code");
x.t("eliminated","constant");
x.t("inferring","registers");
x.t("downstream","logic");
x.t("hdl","instructs");
x.t("hdl","instruct");
x.t("implemented","adjusting");
x.t("interface","derived");
x.t("interface","tab");
x.t("state","state=xl_state");
x.t("state","mcode");
x.t("state","variables");
x.t("state","register");
x.t("state","machine");
x.t("state","switch");
x.t("state","end");
x.t("state","machines");
x.t("state","variable");
x.t("state","value");
x.t("state","variable's");
x.t("state","output");
x.t("icon","displays");
x.t("icon","simulink");
x.t("displays","name");
x.t("displays","message");
x.t("displays","variable");
x.t("displays","expression");
x.t("illustrated","below");
x.t("support","mcode");
x.t("provided","mixture");
x.t("provided","switch");
x.t("provided","value");
x.t("provided","cases");
x.t("statement","else");
x.t("statement","evaluate");
x.t("statement","types");
x.t("statement","fully");
x.t("statement","value");
x.t("statement","otherwise");
x.t("3.1415926","xl_rsh");
x.t("3.1415926","returns");
x.t("mode","overflow");
x.t("mode","hardware");
x.t("mode","data");
x.t("mode","optional");
x.t("mode","xl_state");
x.t("binpt","ram_enable");
x.t("binpt","persistent");
x.t("binpt","dout");
x.t("binpt","type");
x.t("binpt","new");
x.t("binpt","assignment");
x.t("binpt","xlsigned");
x.t("binpt","quantization");
x.t("binpt","argument");
x.t("binpt","proto");
x.t("binpt","xlround");
x.t("binpt","xfix");
x.t("binpt","forces");
x.t("accum","din");
x.t("v.back","returns");
x.t("v.back","v.full");
x.t("v.maxlen","method");
x.t("register","de-asserted");
x.t("register","possible");
x.t("register","persistent");
x.t("register","state");
x.t("register","reset");
x.t("register","single");
x.t("register","blocks");
x.t("register","function");
x.t("register","balancing");
x.t("register","ff1");
x.t("register","ff2");
x.t("register","connected");
x.t("register","re-timing");
x.t("register","value");
x.t("register","inferred");
x.t("register","register's");
x.t("register","used");
x.t("register","containing");
x.t("register","feeds");
x.t("dout_temp","dout_temp");
x.t("dout_temp","mem");
x.t("dout_temp","xl_state");
x.t("points","needed");
x.t("points","debug");
x.t("points","reached");
x.t("points","break");
x.t("8,5","xlround");
x.t("type","binary");
x.t("type","fix_5_0");
x.t("type","double");
x.t("type","provided");
x.t("type","binpt");
x.t("type","explicitly");
x.t("type","bit-wise");
x.t("type","xlboolean");
x.t("type","block");
x.t("type","xlsigned");
x.t("type","fix_10_7");
x.t("type","conversion");
x.t("type","width");
x.t("type","input");
x.t("type","cell");
x.t("type","ufix_4_0");
x.t("type","nbits");
x.t("type","maximum");
x.t("type","arith");
x.t("type","bool");
x.t("type","fix_11_7");
x.t("type","xfix");
x.t("type","bit");
x.t("type","type_spec");
x.t("titled","additional");
x.t("xl_and","bit-wise");
x.t("xl_and","xl_or");
x.t("xl_and","xl_xor");
x.t("usual","matlab");
x.t("addressable","shift");
x.t("(a==b)","following");
x.t("vectors","matrices");
x.t("obtained","result");
x.t("please","reference");
x.t("open","matlab");
x.t("evaluates","false");
x.t("evaluates","true");
x.t("time","parameter");
x.t("time","fpga");
x.t("time","equivalently");
x.t("time","0.000000");
x.t("time","following");
x.t("time","modify");
x.t("explicitly","floating");
x.t("explicitly","xfix");
x.t("vector","registers");
x.t("vector","unchanged");
x.t("vector","method");
x.t("vector","full");
x.t("vector","state");
x.t("vector","invoked");
x.t("vector","initialized");
x.t("vector","zero");
x.t("vector","constants");
x.t("vector","empty");
x.t("vector","ones");
x.t("vector","queries");
x.t("vector","maximum");
x.t("vector","length");
x.t("vector","cannot");
x.t("vector","changes");
x.t("vector","zeros");
x.t("vector","nan");
x.t("vector","val");
x.t("vector","object");
x.t("evaluate","true");
x.t("evaluate","boolean");
x.t("calls","example");
x.t("calls","xl_and");
x.t("calls","need");
x.t("left","right");
x.t("left","last");
x.t("left","shifting");
x.t("left","shift");
x.t("shifted","position");
x.t("initially","assigned");
x.t("(2)","coef");
x.t("(2)","(3)");
x.t("sequential","i.e");
x.t("reset","conditional");
x.t("reset","synchronous");
x.t("reset","input");
x.t("reset","written");
x.t("reset","signal");
x.t("reset","enable");
x.t("reset","and/or");
x.t("compiler","optimizations");
x.t("hence","large");
x.t("xilinx","mcode");
x.t("xilinx","fixed-point");
x.t("xilinx","blockset");
x.t("followed","block");
x.t("bit-wise","logical");
x.t("bit-wise","operators");
x.t("bit-wise","xor");
x.t("bit-wise","xl_or");
x.t("bit-wise","xl_xor");
x.t("bit-wise","shift");
x.t("xlboolean","xlunsigned");
x.t("xlboolean","binpt");
x.t("xlboolean","respectively");
x.t("xlboolean","additional");
x.t("xlboolean","arithmetic");
x.t("i.e","statements");
x.t("i.e","minimum");
x.t("demands","constant");
x.t("compiles","model");
x.t("form","xl_not");
x.t("form","type");
x.t("form","single");
x.t("form","xl_lsh");
x.t("form","xl_slice");
x.t("form","xl_op");
x.t("ended","queue");
x.t("v.push_front","(val)");
x.t("0011.0000000","double");
x.t("(din)","persistent");
x.t("(din)","following");
x.t("execution","path");
x.t("execution","matlab");
x.t("inside","mcode");
x.t("however","right");
x.t("however","executing");
x.t("regardless","order");
x.t("listed","following");
x.t("behavioral","hdl");
x.t("behavioral","vhdl/verilog");
x.t("block's","function");
x.t("block's","code");
x.t("block's","simulink");
x.t("division","mcode");
x.t("division","power");
x.t("convert","type");
x.t("convert","matlab");
x.t("needed","example");
x.t("needed","supplied");
x.t("needed","during");
x.t("needed","guarantee");
x.t("needed","accommodate");
x.t("automatically","converted");
x.t("automatically","infer");
x.t("automatically","pipeline");
x.t("wraps","overflow");
x.t("default","element");
x.t("default","number");
x.t("default","xltruncate");
x.t("fixed-","point");
x.t("lsb","indexed");
x.t("lsb","msb");
x.t("queue","two");
x.t("back","current");
x.t("back","increases");
x.t("back","element");
x.t("back","it's");
x.t("back","end");
x.t("back","decreases");
x.t("v.front","v.back");
x.t("v.front","returns");
x.t("increases","vector");
x.t("coef","(0)");
x.t("coef","(2)");
x.t("coef","coef");
x.t("coef","(1)");
x.t("coef","(3)");
x.t("coef","xl_state");
x.t("detect","number");
x.t("multiplied","divided");
x.t("multiplied","result");
x.t("require","additional");
x.t("signature","block");
x.t("compiling","matlab");
x.t("consists","function");
x.t("consists","elements");
x.t("element","back");
x.t("element","settings");
x.t("element","address");
x.t("element","front");
x.t("element","length");
x.t("supplied","quantization");
x.t("supplied","types");
x.t("access","sequence");
x.t("low","concatenates");
x.t("single","persistent");
x.t("single","fixed-point");
x.t("single","port");
x.t("new","binary");
x.t("new","type");
x.t("new","arithmetic");
x.t("prec","creates");
x.t("thrown","vector");
x.t("thrown","during");
x.t("contents","proto");
x.t("contents","addr");
x.t("advanced","tab");
x.t("loop","statement");
x.t("want","matlab");
x.t("start","debugging");
x.t("bindings","din");
x.t("non-constant","value");
x.t("precedence","inferred");
x.t("synthesis","tool");
x.t("fix_10_0","number");
x.t("block","supports");
x.t("block","example");
x.t("block","tells");
x.t("block","exist");
x.t("block","parameter");
x.t("block","static");
x.t("block","performs");
x.t("block","container");
x.t("block","topic");
x.t("block","outputs");
x.t("block","uses");
x.t("block","icon");
x.t("block","illustrated");
x.t("block","state");
x.t("block","type");
x.t("block","listed");
x.t("block","automatically");
x.t("block","detect");
x.t("block","requires");
x.t("block","name");
x.t("block","perform");
x.t("block","provides");
x.t("block","parameters");
x.t("block","matlab");
x.t("block","explained");
x.t("block","mask");
x.t("block","three");
x.t("block","first");
x.t("block","throw");
x.t("block","gui");
x.t("block","function");
x.t("block","specifies");
x.t("block","may");
x.t("block","cannot");
x.t("block","internal");
x.t("block","executed");
x.t("block","least");
x.t("block","appear");
x.t("block","consider");
x.t("block","title");
x.t("block","diagram");
x.t("block","optional");
x.t("block","ignores");
x.t("block","executes");
x.t("block","based");
x.t("block","work");
x.t("block","following");
x.t("block","drives");
x.t("block","occasionally");
x.t("block","inputs");
x.t("block","specify");
x.t("xl_nbits","(a)");
x.t("xl_nbits","(x)");
x.t("xl_nbits","xl_binpt");
x.t("xl_nbits","returns");
x.t("left-hand","side");
x.t("conceptually","vector");
x.t("it's","usually");
x.t("it's","shift");
x.t("printing","matlab");
x.t("printing","disp");
x.t("includes","block");
x.t("usually","mcode");
x.t("usually","used");
x.t("bitreverse","(d)");
x.t("command","matlab");
x.t("m-function","illustrate");
x.t("m-function","just");
x.t("m-function","arguments");
x.t("m-function","block");
x.t("m-function","need");
x.t("m-function","name");
x.t("m-function","function");
x.t("m-function","different");
x.t("m-function","two");
x.t("file","located");
x.t("file","xlmax.m");
x.t("operands","xfix");
x.t("braces","usual");
x.t("need","execute");
x.t("need","check");
x.t("need","first");
x.t("need","xfix");
x.t("need","type_spec");
x.t("need","insert");
x.t("pushes","val");
x.t("invoked","double-clicking");
x.t("invoked","title");
x.t("invoked","update");
x.t("2.75","argument");
x.t("2.75","disp");
x.t("infer","register");
x.t("infer","reset");
x.t("infer","enable");
x.t("again","conditional");
x.t("list","constant");
x.t("during","simulink");
x.t("during","simulation");
x.t("during","model");
x.t("machine","examples");
x.t("machine","two");
x.t("machine","using");
x.t("assignment","statements");
x.t("assignment","persistent");
x.t("assignment","left-hand");
x.t("assignment","contain");
x.t("assignment","input");
x.t("assignment","function");
x.t("assignment","result");
x.t("assignment","case");
x.t("assignment","following");
x.t("isnan","tests");
x.t("isnan","(incr)");
x.t("isnan","(x)");
x.t("isnan","returns");
x.t("assign","type_spec");
x.t("issued","during");
x.t("3.0","binary");
x.t("sum","din");
x.t("switch/case","expression");
x.t("elimination","constant");
x.t("add","delay");
x.t("simple","compound");
x.t("simple","arithmetic");
x.t("bits","right");
x.t("bits","binary");
x.t("bits","last");
x.t("bits","wide");
x.t("bits","discarded");
x.t("bits","dividing");
x.t("bits","fixed-point");
x.t("bits","output");
x.t("bits","xfix");
x.t("bits","bit");
x.t("bits","fractional");
x.t("bits","xl_binpt");
x.t("bits","using");
x.t("bits","shift");
x.t("xlsigned","8,5");
x.t("xlsigned","type");
x.t("xlsigned","xlboolean");
x.t("xlsigned","block");
x.t("xlsigned","2.75");
x.t("xlsigned","bits");
x.t("xlsigned","boolean");
x.t("xlsigned","nbits");
x.t("xlsigned","3.345");
x.t("xlsigned","xlround");
x.t("xlsigned","xfix");
x.t("xlsigned","rst");
x.t("presented","data");
x.t("results","functions");
x.t("initialized","init");
x.t("initialized","persitent");
x.t("(idx)","v.front");
x.t("(idx)","val");
x.t("(idx)","returns");
x.t("check","enable");
x.t("tutorials","configuring");
x.t("configuring","mcode");
x.t("false","mcode");
x.t("false","automatically");
x.t("false","len");
x.t("false","empty");
x.t("false","enable");
x.t("false","register's");
x.t("quantization","overflow");
x.t("quantization","mode");
x.t("quantization","xlwrap");
x.t("quantization","xltruncate");
x.t("len","v.length");
x.t("(rom)","type");
x.t("(rom)","disp");
x.t("(rom)","dly.back");
x.t("10.0","disp");
x.t("availability","matlab");
x.t("behave","differently");
x.t("large","critical");
x.t("fix_8_2","number");
x.t("converts","double");
x.t("converts","string");
x.t("converts","number");
x.t("guarantee","information");
x.t("true","persistent");
x.t("true","vector");
x.t("true","false");
x.t("true","not-a-number");
x.t("true","otherwise");
x.t("true","register's");
x.t("specified","precision");
x.t("specified","three");
x.t("specified","second");
x.t("specified","number");
x.t("cycle","infers");
x.t("cycle","register");
x.t("cycle","error");
x.t("cycle","next");
x.t("cycle","assigns");
x.t("cycle","simulation");
x.t("ram","state");
x.t("ram","function");
x.t("ram","addr");
x.t("ram","based");
x.t("ram","fabric");
x.t("(addr)","single");
x.t("(addr)","din");
x.t("(addr)","mem");
x.t("(addr)","r.push_front_pop_back");
x.t("requires","every");
x.t("requires","expression");
x.t("nextstate","state");
x.t("nextstate","currentstate");
x.t("nextstate","end");
x.t("nextstate","xfix");
x.t("nextstate","fsm1");
x.t("shifting","bits");
x.t("libraries","control");
x.t("name","block's");
x.t("name","block");
x.t("name","m-function");
x.t("name","simulink");
x.t("guidelines","followed");
x.t("path","block");
x.t("path","delay");
x.t("path","directory");
x.t("path","assigns");
x.t("operation","example");
x.t("operation","full");
x.t("operation","form");
x.t("operation","length");
x.t("operation","performed");
x.t("settings","used");
x.t("wide","number");
x.t("wide","fractional");
x.t("toward","least");
x.t("toward","significant");
x.t("range","input");
x.t("range","num2str");
x.t("box","open");
x.t("box","block");
x.t("box","invoked");
x.t("box","argument");
x.t("fix_10_7","binary");
x.t("(true)","disp");
x.t("test1","end");
x.t("debugger","need");
x.t("debugger","switch/case");
x.t("debugger","stop");
x.t("debugger","usage");
x.t("resulting","assignment");
x.t("synthesizable","hdl");
x.t("fix_8_4","number");
x.t("common","options");
x.t("xlmax","else");
x.t("xlmax","mcode");
x.t("xlmax","once");
x.t("xlmax","input");
x.t("xlmax","function");
x.t("xlmax","returns");
x.t("if/else/elseif","end");
x.t("conversion","width");
x.t("conversion","supported");
x.t("conversion","function");
x.t("conversion","xfix");
x.t("conversion","done");
x.t("xlwrap","overflow");
x.t("xlwrap","3.14159");
x.t("xlwrap","3.1415926");
x.t("xlwrap","xlsaturate");
x.t("(a)","concatenate");
x.t("(a)","type");
x.t("(a)","xl_nbits");
x.t("(a)","disp");
x.t("(a)","num2str");
x.t("(a)","takes");
x.t("ends","front");
x.t("3.5","6.7");
x.t("edit","m-file");
x.t("stop","break");
x.t("char","facilitate");
x.t("changed","switch");
x.t("follows","function");
x.t("myfn","else");
x.t("myfn","init");
x.t("myfn","afn");
x.t("myfn","end");
x.t("myfn","(rst)");
x.t("finite","state");
x.t("xl_arith","xl_nbits");
x.t("xl_arith","(x)");
x.t("xl_arith","returns");
x.t("tests","whether");
x.t("argument","precision");
x.t("argument","passed");
x.t("argument","xlunsigned");
x.t("argument","init");
x.t("argument","vector");
x.t("argument","string");
x.t("argument","occupies");
x.t("argument","thus");
x.t("argument","bit");
x.t("argument","xfix");
x.t("argument","returns");
x.t("perform","full");
x.t("perform","conditional");
x.t("perform","bit-wise");
x.t("perform","operation");
x.t("perform","shift");
x.t("cycles","simulation");
x.t("part","debug");
x.t("synchronous","consider");
x.t("parameters","possible");
x.t("parameters","dialog");
x.t("parameters","type");
x.t("parameters","m-function");
x.t("parameters","input");
x.t("parameters","return");
x.t("parameters","used");
x.t("useful","implementing");
x.t("illustrates","simple");
x.t("illustrates","function");
x.t("illustrates","case");
x.t("illustrates","simultaneous");
x.t("constructs","assignment");
x.t("floating","point");
x.t("boolean","variables");
x.t("boolean","provided");
x.t("boolean","xlboolean");
x.t("boolean","switch");
x.t("boolean","result");
x.t("boolean","literals");
x.t("boolean","arithmetic");
x.t("zero","binary");
x.t("zero","reinterpret");
x.t("zero","lsb");
x.t("zero","it's");
x.t("zero","floating-point");
x.t("zero","values");
x.t("zero","content");
x.t("compatible","example");
x.t("compatible","thus");
x.t("provides","four");
x.t("methods","available");
x.t("methods","vector");
x.t("methods","(idx)");
x.t("methods","query");
x.t("methods","update");
x.t("rule","broken");
x.t("in1","in2");
x.t("in1","assigned");
x.t("in1","code");
x.t("matlab","debugging");
x.t("matlab","method");
x.t("matlab","fpga");
x.t("matlab","console");
x.t("matlab","path");
x.t("matlab","debugger");
x.t("matlab","functions");
x.t("matlab","function");
x.t("matlab","editor");
x.t("matlab","language");
x.t("matlab","keyword");
x.t("matlab","code");
x.t("matlab","1-d");
x.t("matlab","help");
x.t("matlab","values");
x.t("compound","if/else/elseif");
x.t("constants","state");
x.t("constants","function");
x.t("constants","values");
x.t("constants","powers");
x.t("constants","integer");
x.t("constants","evaluated");
x.t("makes","sense");
x.t("consecutively","indexed");
x.t("010.1100000","double");
x.t("dly","dly");
x.t("dly","xl_state");
x.t("find","need");
x.t("find","above");
x.t("figures","shows");
x.t("in2","persistent");
x.t("in2","first");
x.t("in2","two");
x.t("completed","cycle");
x.t("arrays","supported");
x.t("xl_lsh","functions");
x.t("xl_lsh","function");
x.t("xl_lsh","xl_rsh");
x.t("mixture","types");
x.t("allows","mcode");
x.t("allows","access");
x.t("address","back");
x.t("address","idx");
x.t("map","vector");
x.t("rom","state");
x.t("rom","single");
x.t("rom","rom");
x.t("rom","function");
x.t("rom","xl_state");
x.t("dead","code");
x.t("optimizations","generating");
x.t("segments","following");
x.t("explained","topic");
x.t("third","shows");
x.t("linked","topic");
x.t("string","ones");
x.t("string","scalar");
x.t("string","num2str");
x.t("string","xfix");
x.t("incompatible","arithmetic");
x.t("array","mcode");
x.t("array","block");
x.t("array","zero-indexed");
x.t("array","specifies");
x.t("array","defined");
x.t("array","described");
x.t("allow","downstream");
x.t("allow","shift");
x.t("empty","v.empty");
x.t("empty","v.back");
x.t("empty","vector");
x.t("empty","v.push_front");
x.t("empty","perform");
x.t("empty","v.push_back");
x.t("empty","cell");
x.t("empty","otherwise");
x.t("empty","v.push_front_pop_back");
x.t("v.pop_front","v.push_back");
x.t("v.pop_front","pops");
x.t("lines","result");
x.t("examine","values");
x.t("segment","ff2");
x.t("segment","value");
x.t("segment","out1");
x.t("critical","path");
x.t("mask","parameters");
x.t("input","de-asserted");
x.t("input","arguments");
x.t("input","register");
x.t("input","argument");
x.t("input","ports");
x.t("input","number");
x.t("input","function");
x.t("input","value");
x.t("input","port");
x.t("input","two");
x.t("input","asserted");
x.t("three","possible");
x.t("three","properties");
x.t("three","kinds");
x.t("three","locations");
x.t("three","input");
x.t("three","functions");
x.t("three","primary");
x.t("three","branches");
x.t("three","examples");
x.t("three","values");
x.t("second","precision");
x.t("second","argument");
x.t("second","illustrates");
x.t("second","code");
x.t("ports","parameter");
x.t("ports","mcode");
x.t("ports","having");
x.t("ports","sub");
x.t("ports","perform");
x.t("ports","consider");
x.t("ports","constructing");
x.t("ports","output");
x.t("addition","empty");
x.t("addition","subtraction");
x.t("width","having");
x.t("width","binary");
x.t("width","binpt");
x.t("width","input");
x.t("width","inclusively");
x.t("contain","variable");
x.t("contain","case");
x.t("contain","two");
x.t("contain","levels");
x.t("flow","conditional");
x.t("cell","array");
x.t("cell","arrary");
x.t("v.push_back","(val)");
x.t("device","error");
x.t("currentstate","state");
x.t("currentstate","din");
x.t("currentstate","switch");
x.t("currentstate","case");
x.t("currentstate","fsm1");
x.t("combinational","logic");
x.t("round","constant");
x.t("earlier","topic");
x.t("functions","properties");
x.t("functions","full");
x.t("functions","mcode");
x.t("functions","type");
x.t("functions","xl_and");
x.t("functions","bit-wise");
x.t("functions","command");
x.t("functions","finite");
x.t("functions","constants");
x.t("functions","xl_lsh");
x.t("functions","disp");
x.t("functions","code");
x.t("functions","return");
x.t("ones","it's");
x.t("ones","ones");
x.t("ones","function");
x.t("ones","proto");
x.t("ones","returns");
x.t("ones","generates");
x.t("selector","boolean");
x.t("selector","cases");
x.t("retrieves","state");
x.t("arrary","form");
x.t("regs","regs");
x.t("regs","xl_state");
x.t("signals","persistent");
x.t("signals","conditional");
x.t("signals","state");
x.t("signals","register");
x.t("signals","works");
x.t("conditionally","assigned");
x.t("divided","constants");
x.t("adjusting","binary");
x.t("logic","mcode");
x.t("logic","refer");
x.t("logic","hence");
x.t("logic","synthesis");
x.t("logic","add");
x.t("logic","generated");
x.t("logic","math");
x.t("calculate","block");
x.t("equivalent","right");
x.t("equivalent","left");
x.t("equivalent","behavioral");
x.t("multiplication","division");
x.t("supported","mcode");
x.t("supported","vectors");
x.t("supported","functions");
x.t("supported","data");
x.t("supported","integer");
x.t("point","constants");
x.t("point","number");
x.t("point","located");
x.t("point","expanding");
x.t("point","xfix");
x.t("point","examples");
x.t("point","position");
x.t("xl_force","function");
x.t("xl_force","internal");
x.t("xl_force","arith");
x.t("error","displays");
x.t("error","state");
x.t("error","thrown");
x.t("error","from_bit");
x.t("error","message");
x.t("error","latency");
x.t("error","opcode");
x.t("error","m-code");
x.t("blocks","provide");
x.t("blocks","parameter");
x.t("blocks","mcode");
x.t("blocks","usually");
x.t("blocks","following");
x.t("blocks","using");
x.t("blocks","passing");
x.t("from_bit","to_bit");
x.t("queries","state");
x.t("ufix_4_0","binary");
x.t("undefined","operations");
x.t("m-file","matlab");
x.t("independent","inputs");
x.t("(state)","case");
x.t("operators","applied");
x.t("operators","mcode");
x.t("operators","logical");
x.t("operators","less");
x.t("operators","xl_rsh");
x.t("operators","xl_or");
x.t("operators","produce");
x.t("logical","operation");
x.t("logical","functions");
x.t("logical","operators");
x.t("logical","xor");
x.t("logical","numbers");
x.t("logical","operations");
x.t("occupies","bits");
x.t("occupies","least");
x.t("occupies","significant");
x.t("occurs","during");
x.t("occurs","values");
x.t("respectively","function");
x.t("discarded","precision");
x.t("hold","values");
x.t("next","topic");
x.t("next","state");
x.t("next","statement");
x.t("next","cycle");
x.t("din","precision");
x.t("din","persistent");
x.t("din","state");
x.t("din","input");
x.t("din","nbits");
x.t("din","reg");
x.t("din","end");
x.t("din","code");
x.t("din","depth");
x.t("din","rst");
x.t("din","following");
x.t("delay","lat");
x.t("delay","line");
x.t("delay","synthesizable");
x.t("delay","allow");
x.t("delay","combinational");
x.t("delay","blocks");
x.t("mapped","blockram");
x.t("mapped","line");
x.t("mapped","addressable");
x.t("mapped","vector");
x.t("mapped","single");
x.t("mapped","delay");
x.t("1.0","binary");
x.t("10110","double");
x.t("representation","not-a-number");
x.t("checkbox","advanced");
x.t("executing","switch/case");
x.t("executing","user-supplied");
x.t("first","example");
x.t("first","assignment");
x.t("first","check");
x.t("first","cycle");
x.t("first","input");
x.t("first","initial");
x.t("first","assigned");
x.t("first","simulation");
x.t("minimum","precision");
x.t("depend","input");
x.t("depend","value");
x.t("allowed","proto");
x.t("adjusted","needed");
x.t("throw","error");
x.t("nbits","binpt");
x.t("addrsr","contents");
x.t("addrsr","addr");
x.t("button","edit");
x.t("select","interface");
x.t("4,0","init");
x.t("options","block");
x.t("control","statement");
x.t("control","flow");
x.t("control","logic");
x.t("number","mcode");
x.t("number","binary");
x.t("number","vector");
x.t("number","bit-wise");
x.t("number","multiplied");
x.t("number","bits");
x.t("number","results");
x.t("number","toward");
x.t("number","fix_8_4");
x.t("number","zero");
x.t("number","consecutively");
x.t("number","string");
x.t("number","three");
x.t("number","input");
x.t("number","first");
x.t("number","number");
x.t("number","function");
x.t("number","return");
x.t("number","digits");
x.t("number","nan");
x.t("number","result");
x.t("number","values");
x.t("number","above");
x.t("number","print");
x.t("number","xl_state");
x.t("number","following");
x.t("number","elements");
x.t("number","using");
x.t("not-a-number","isnan");
x.t("not-a-number","scalar");
x.t("not-a-number","num2str");
x.t("not-a-number","nan");
x.t("literal","constants");
x.t("side","assignment");
x.t("initializes","state");
x.t("front","increases");
x.t("front","element");
x.t("front","end");
x.t("front","pops");
x.t("front","decreases");
x.t("gui","bind");
x.t("conversions","force");
x.t("fewer","branches");
x.t("written","function");
x.t("function","looks");
x.t("function","example");
x.t("function","parameter");
x.t("function","exist");
x.t("function","moves");
x.t("function","within");
x.t("function","xl_concat");
x.t("function","xl_not");
x.t("function","mcode");
x.t("function","having");
x.t("function","dout");
x.t("function","shows");
x.t("function","pair");
x.t("function","accum");
x.t("function","interface");
x.t("function","please");
x.t("function","calls");
x.t("function","form");
x.t("function","signature");
x.t("function","xl_nbits");
x.t("function","bitreverse");
x.t("function","invoked");
x.t("function","isnan");
x.t("function","sum");
x.t("function","converts");
x.t("function","nextstate");
x.t("function","test1");
x.t("function","xlmax");
x.t("function","myfn");
x.t("function","xl_arith");
x.t("function","matlab");
x.t("function","currentstate");
x.t("function","retrieves");
x.t("function","xl_force");
x.t("function","supported");
x.t("function","mapped");
x.t("function","delay");
x.t("function","addrsr");
x.t("function","initializes");
x.t("function","function");
x.t("function","xl_slice");
x.t("function","myadd");
x.t("function","detailed");
x.t("function","assigned");
x.t("function","xl_m_addsub");
x.t("function","sums");
x.t("function","sum4");
x.t("function","re-written");
x.t("function","accesses");
x.t("function","takes");
x.t("function","output");
x.t("function","behaves");
x.t("function","bit");
x.t("function","out1");
x.t("function","predefined");
x.t("function","xl_binpt");
x.t("function","xl_or");
x.t("function","call");
x.t("function","testdisp");
x.t("function","used");
x.t("function","following");
x.t("function","using");
x.t("function","rounding");
x.t("function","returns");
x.t("function","generates");
x.t("maximum","length");
x.t("maximum","inputs");
x.t("scalar","arrays");
x.t("scalar","value");
x.t("length","binary");
x.t("length","current");
x.t("length","vector");
x.t("length","conceptually");
x.t("length","methods");
x.t("length","error");
x.t("length","xl_state");
x.t("zero-indexed","constant");
x.t("magnitude","elements");
x.t("reg","(0)");
x.t("reg","(i)");
x.t("signal","conditional");
x.t("signal","register");
x.t("signal","regardless");
x.t("signal","assignment");
x.t("signal","connected");
x.t("signal","inferred");
x.t("signal","takes");
x.t("approach","vector");
x.t("specifies","type");
x.t("specifies","m-function");
x.t("specifies","list");
x.t("specifies","name");
x.t("straightforward","equivalent");
x.t("private","directory");
x.t("expressions","expression");
x.t("expressions","involving");
x.t("xl_slice","concatenate");
x.t("xl_slice","xl_nbits");
x.t("xl_slice","allows");
x.t("xl_slice","from_bit");
x.t("xl_slice","function");
x.t("xl_slice","msb");
x.t("xl_slice","end");
x.t("xl_slice","1:xl_nbits");
x.t("whether","number");
x.t("different","mcode");
x.t("different","parameters");
x.t("different","characteristics");
x.t("cannot","map");
x.t("cannot","empty");
x.t("may","behave");
x.t("may","find");
x.t("may","map");
x.t("may","contain");
x.t("myadd","nbits");
x.t("6.7","coef");
x.t("(-10)","type");
x.t("(-10)","disp");
x.t("inf-inf","nan");
x.t("1:n-1","reg");
x.t("editor","break");
x.t("instructs","code");
x.t("balancing","alternative");
x.t("index","xilinx");
x.t("index","range");
x.t("language","support");
x.t("language","useful");
x.t("language","constructs");
x.t("disp","displays");
x.t("disp","(a==b)");
x.t("disp","type");
x.t("disp","want");
x.t("disp","(rom)");
x.t("disp","(a)");
x.t("disp","functions");
x.t("disp","function");
x.t("disp","(-10)");
x.t("disp","disp");
x.t("disp","(x)");
x.t("disp","(10)");
x.t("disp","(dly)");
x.t("disp","num2str");
x.t("disp","hello");
x.t("disp","print");
x.t("disp","checked");
x.t("characteristics","call");
x.t("proto","persistent");
x.t("proto","dout");
x.t("proto","loop");
x.t("proto","xlsigned");
x.t("proto","din");
x.t("proto","arith");
x.t("proto","mem");
x.t("proto","zeros");
x.t("proto","xfix");
x.t("step","xlmcode_testdisp/mcode");
x.t("step","next");
x.t("step","enable");
x.t("accumulator","function");
x.t("detailed","information");
x.t("matrices","example");
x.t("incr","cnt");
x.t("ways","build");
x.t("ways","debug");
x.t("aware","every");
x.t("stateless","transition");
x.t("instead","reset");
x.t("implementing","arithmetic");
x.t("directory","matlab");
x.t("directory","directory");
x.t("directory","named");
x.t("directory","model");
x.t("internal","state");
x.t("types","makes");
x.t("types","three");
x.t("types","width");
x.t("types","switch");
x.t("types","assigned");
x.t("types","unsigned");
x.t("types","produce");
x.t("changes","state");
x.t("changes","xfix");
x.t("keyword","persistent");
x.t("(incr)","incr");
x.t("samples","function");
x.t("bind","arguments");
x.t("bind","input");
x.t("afn","persistent");
x.t("afn","en2");
x.t("afn","rst");
x.t("afn","(rst)");
x.t("ff1","saved");
x.t("ff1","persistent");
x.t("ff1","in1");
x.t("ff1","ff1");
x.t("ff1","assigned");
x.t("ff1","code");
x.t("ff1","two");
x.t("ff1","xl_state");
x.t("ordering","parameters");
x.t("ordering","correspond");
x.t("switch","statements");
x.t("switch","double");
x.t("switch","statement");
x.t("switch","currentstate");
x.t("switch","selector");
x.t("switch","constant");
x.t("switch","case");
x.t("lost","literal");
x.t("assigned","init");
x.t("assigned","once");
x.t("assigned","persistent");
x.t("assigned","evaluates");
x.t("assigned","again");
x.t("assigned","compatible");
x.t("assigned","ff1");
x.t("assigned","important");
x.t("assigned","previous");
x.t("assigned","several");
x.t("assigned","constant");
x.t("assigned","xfix");
x.t("assigned","rst");
x.t("assigned","out1");
x.t("assigned","out2");
x.t("assigned","xl_state");
x.t("omitted","default");
x.t("omitted","elements");
x.t("msb","example");
x.t("msb","indexed");
x.t("msb","xl_slice");
x.t("initial","value");
x.t("(1)","(2)");
x.t("(1)","coef");
x.t("0000.0000000","double");
x.t("added","example");
x.t("added","accomplish");
x.t("follwing","switch");
x.t("xl_m_addsub","sub");
x.t("xl_m_addsub","function");
x.t("important","note");
x.t("works","conditional");
x.t("ff2","in2");
x.t("ff2","ff2");
x.t("ff2","assigned");
x.t("ff2","end");
x.t("ff2","out2");
x.t("ff2","xl_state");
x.t("code","example");
x.t("code","fpga");
x.t("code","eliminated");
x.t("code","sequential");
x.t("code","block");
x.t("code","elimination");
x.t("code","nextstate");
x.t("code","changed");
x.t("code","illustrates");
x.t("code","segments");
x.t("code","segment");
x.t("code","function");
x.t("code","enable");
x.t("code","translated");
x.t("code","generator");
x.t("code","models");
x.t("code","examples");
x.t("code","xl_state");
x.t("code","run");
x.t("correspond","names");
x.t("end","statements");
x.t("end","available");
x.t("end","mcode");
x.t("end","sub");
x.t("end","double");
x.t("end","state");
x.t("end","type");
x.t("end","reset");
x.t("end","single");
x.t("end","isnan");
x.t("end","nextstate");
x.t("end","matlab");
x.t("end","ones");
x.t("end","error");
x.t("end","switch");
x.t("end","end");
x.t("end","enable");
x.t("end","code");
x.t("end","variable");
x.t("end","num2str");
x.t("end","acceptable");
x.t("end","nan");
x.t("end","xfix");
x.t("end","regs.push_front_pop_back");
x.t("end","m-code");
x.t("end","two");
x.t("floating-point","boolean");
x.t("floating-point","literals");
x.t("addr","din");
x.t("addr","arith");
x.t("addr","depth");
x.t("enable","printing");
x.t("enable","matlab");
x.t("enable","input");
x.t("enable","signals");
x.t("enable","signal");
x.t("enable","inferred");
x.t("executed","matlab");
x.t("executed","dead");
x.t("executed","order");
x.t("executed","occur");
x.t("reference","topic");
x.t("transition","function");
x.t("connected","evaluates");
x.t("connected","output");
x.t("connected","rst");
x.t("connected","asserted");
x.t("bitstream","mcode");
x.t("return","value");
x.t("return","xfix");
x.t("return","values");
x.t("machines","control");
x.t("primary","coding");
x.t("located","subdirectory");
x.t("located","bit");
x.t("thus","example");
x.t("thus","selector");
x.t("arith","binpt");
x.t("arith","new");
x.t("arith","argument");
x.t("arith","nbits");
x.t("assigns","element");
x.t("assigns","value");
x.t("dly.back","dly.push_front_pop_back");
x.t("bool","binary");
x.t("fully","unrolled");
x.t("sums","samples");
x.t("assignments","variables");
x.t("least","output");
x.t("least","two");
x.t("least","significant");
x.t("appear","block");
x.t("message","formatting");
x.t("message","issued");
x.t("message","abort");
x.t("known","compilation");
x.t("(x)","converts");
x.t("(x)","disp");
x.t("(x)","print");
x.t("(x)","returns");
x.t("(x)","shift");
x.t("accommodate","shifted");
x.t("given","8-bit");
x.t("broken","mcode");
x.t("sum4","(d)");
x.t("option","advanced");
x.t("option","enable");
x.t("re-written","follows");
x.t("previous","cycle");
x.t("translated","straightforward");
x.t("greater","equal");
x.t("greater","greater");
x.t("variable","available");
x.t("variable","receives");
x.t("variable","fpga");
x.t("variable","init");
x.t("variable","container's");
x.t("variable","double");
x.t("variable","declared");
x.t("variable","register");
x.t("variable","type");
x.t("variable","vector");
x.t("variable","default");
x.t("variable","non-constant");
x.t("variable","initialized");
x.t("variable","availability");
x.t("variable","specified");
x.t("variable","argument");
x.t("variable","conditionally");
x.t("variable","din");
x.t("variable","first");
x.t("variable","function");
x.t("variable","disp");
x.t("variable","ff1");
x.t("variable","assigned");
x.t("variable","ff2");
x.t("variable","enable");
x.t("variable","connected");
x.t("variable","variable");
x.t("variable","defined");
x.t("variable","xfix");
x.t("variable","values");
x.t("variable","called");
x.t("variable","xl_state");
x.t("variable","following");
x.t("variable","used");
x.t("variable","names");
x.t("variable","contains");
x.t("branches","example");
x.t("branches","mcode");
x.t("branches","conditional");
x.t("branches","reset");
x.t("branches","control");
x.t("branches","executed");
x.t("xltruncate","quantization");
x.t("xltruncate","xlround");
x.t("xltruncate","similarly");
x.t("pops","element");
x.t("printed","corresponding");
x.t("(10)","type");
x.t("(10)","disp");
x.t("accesses","unavailable");
x.t("click","apply");
x.t("consider","example");
x.t("consider","file");
x.t("consider","second");
x.t("consider","function");
x.t("consider","follwing");
x.t("consider","two");
x.t("consider","following");
x.t("less","equal");
x.t("less","branches");
x.t("less","less");
x.t("zeros","(0)");
x.t("zeros","lat");
x.t("zeros","persistent");
x.t("zeros","prec");
x.t("zeros","zero");
x.t("zeros","din");
x.t("zeros","function");
x.t("zeros","proto");
x.t("zeros","zeros");
x.t("zeros","depth");
x.t("zeros","data");
x.t("zeros","xl_state");
x.t("zeros","returns");
x.t("zeros","generates");
x.t("compared","boolean");
x.t("curly","braces");
x.t("netlist","time");
x.t("mem","(addr)");
x.t("mem","mem");
x.t("mem","xl_state");
x.t("0010.0000000","double");
x.t("(opcode)","end");
x.t("typing","variable");
x.t("constructing","state");
x.t("and/or","enable");
x.t("simulink","parameter");
x.t("simulink","interface");
x.t("simulink","time");
x.t("simulink","compiles");
x.t("simulink","simulation");
x.t("simulink","model");
x.t("concatenates","two");
x.t("latency","error");
x.t("latency","positive");
x.t("elseif","en2");
x.t("re-timing","register");
x.t("vhdl/verilog","hardware");
x.t("value","example");
x.t("value","passed");
x.t("value","persistent");
x.t("value","required");
x.t("value","double");
x.t("value","state");
x.t("value","left");
x.t("value","back");
x.t("value","element");
x.t("value","assign");
x.t("value","floating");
x.t("value","in1");
x.t("value","in2");
x.t("value","input");
x.t("value","second");
x.t("value","three");
x.t("value","depend");
x.t("value","number");
x.t("value","front");
x.t("value","function");
x.t("value","assigned");
x.t("value","variable");
x.t("value","value");
x.t("value","constant");
x.t("value","order");
x.t("value","either");
x.t("value","corresponding");
x.t("value","following");
x.t("value","operated");
x.t("value","representing");
x.t("additional","hardware");
x.t("additional","examples");
x.t("additional","elements");
x.t("named","private");
x.t("power","two");
x.t("3.345","used");
x.t("maxlen","maximum");
x.t("maxlen","length");
x.t("maxlen","returns");
x.t("idx","(idx)");
x.t("idx","val");
x.t("usage","state");
x.t("usage","disp");
x.t("unrolled","following");
x.t("figure","shows");
x.t("signed","occupies");
x.t("signed","fixed-point");
x.t("signed","unsigned");
x.t("constant","equivalently");
x.t("constant","init");
x.t("constant","provided");
x.t("constant","reset");
x.t("constant","require");
x.t("constant","array");
x.t("constant","second");
x.t("constant","expressions");
x.t("constant","xfix");
x.t("constant","propagation");
x.t("constant","rst");
x.t("constant","inputs");
x.t("several","branches");
x.t("several","xfix");
x.t("several","examples");
x.t("invocation","during");
x.t("invocation","xl_state");
x.t("1-d","array");
x.t("title","line");
x.t("(dly)","type");
x.t("(dly)","disp");
x.t("(dly)","0.000000");
x.t("(dly)","num2str");
x.t("0.000000","fpga");
x.t("0.000000","binary");
x.t("0.000000","disp");
x.t("0.000000","0.000000");
x.t("fix_11_7","binary");
x.t("fix_11_7","maxlen");
x.t("2,0","currentstate");
x.t("persistent_test02","in1");
x.t("pipeline","combinational");
x.t("delays","shift");
x.t("multiplying","equivalent");
x.t("dividing","equivalent");
x.t("generated","fpga");
x.t("generated","block's");
x.t("fixed-point","xlunsigned");
x.t("fixed-point","type");
x.t("fixed-point","xlsigned");
x.t("fixed-point","number");
x.t("fixed-point","values");
x.t("fixed-point","numbers");
x.t("num2str","converts");
x.t("num2str","(true)");
x.t("num2str","(a)");
x.t("num2str","(x)");
x.t("num2str","(opcode)");
x.t("num2str","(dly)");
x.t("num2str","opcode");
x.t("num2str","(b)");
x.t("exception","occurs");
x.t("compilation","time");
x.t("compilation","rule");
x.t("force","static");
x.t("inferred","hardware");
x.t("inferred","persistent");
x.t("inferred","reset");
x.t("inferred","need");
x.t("inferred","function");
x.t("inferred","instead");
x.t("inferred","enable");
x.t("inferred","following");
x.t("pipelining","combinational");
x.t("generator","implement");
x.t("xl_rsh","moves");
x.t("xl_rsh","xl_lsh");
x.t("xl_rsh","allow");
x.t("xl_rsh","output");
x.t("xl_rsh","xfix");
x.t("xl_rsh","slice");
x.t("abort","function");
x.t("expression","double");
x.t("expression","statement");
x.t("expression","inside");
x.t("expression","matlab");
x.t("expression","value");
x.t("expression","constant");
x.t("acceptable","boolean");
x.t("xlround","xlwrap");
x.t("xlround","xlsaturate");
x.t("xlround","rounding");
x.t("xlround","xlroundbanker");
x.t("takes","precedence");
x.t("takes","least");
x.t("takes","xfix");
x.t("takes","two");
x.t("models","4-bit");
x.t("(3)","addressable");
x.t("(3)","r.push_front_pop_back");
x.t("hello","world");
x.t("-10.0","disp");
x.t("digits","based");
x.t("variable's","register");
x.t("instruct","downstream");
x.t("output","mcode");
x.t("output","register");
x.t("output","type");
x.t("output","new");
x.t("output","adjusted");
x.t("output","port");
x.t("output","unsigned");
x.t("nan","else");
x.t("nan","obtained");
x.t("nan","function");
x.t("nan","nan");
x.t("nan","values");
x.t("nan","returns");
x.t("nan","generates");
x.t("context","demands");
x.t("sequence","bits");
x.t("depth","persistent");
x.t("depth","(addr)");
x.t("depth","nbits");
x.t("depth","proto");
x.t("dly.push_front_pop_back","(a)");
x.t("help","function");
x.t("script","need");
x.t("separate","xl_sconvert");
x.t("diagram","two");
x.t("diagram","model");
x.t("subtraction","addition");
x.t("subtraction","multiplication");
x.t("subtraction","based");
x.t("data","type");
x.t("data","types");
x.t("information","lost");
x.t("information","message");
x.t("optional","specified");
x.t("optional","input");
x.t("behaves","following");
x.t("query","method");
x.t("query","methods");
x.t("opcode","range");
x.t("opcode","error");
x.t("opcode","opcode");
x.t("facilitate","execution");
x.t("tool","implement");
x.t("tool","automatically");
x.t("expanding","xfix");
x.t("examples","left");
x.t("examples","tutorials");
x.t("examples","linked");
x.t("examples","functions");
x.t("examples","function");
x.t("examples","slice");
x.t("examples","above");
x.t("examples","using");
x.t("xfix","properties");
x.t("xfix","xlunsigned");
x.t("xfix","approximation");
x.t("xfix","create");
x.t("xfix","having");
x.t("xfix","container");
x.t("xfix","type");
x.t("xfix","calls");
x.t("xfix","xilinx");
x.t("xfix","however");
x.t("xfix","xlsigned");
x.t("xfix","conversion");
x.t("xfix","number");
x.t("xfix","conversions");
x.t("xfix","function");
x.t("xfix","proto");
x.t("xfix","changes");
x.t("xfix","value");
x.t("xfix","data");
x.t("xfix","values");
x.t("xfix","type_spec");
x.t("xfix","call");
x.t("xfix","run");
x.t("result","relational");
x.t("result","mathematically");
x.t("result","converting");
x.t("result","fix_10_0");
x.t("result","fix_8_2");
x.t("result","first");
x.t("result","function");
x.t("result","inference");
x.t("result","xl_state");
x.t("appropriate","width");
x.t("defined","xfix");
x.t("defined","using");
x.t("bit","left");
x.t("bit","width");
x.t("bit","xl_slice");
x.t("bit","index");
x.t("bit","fixed-point");
x.t("bit","bit");
x.t("bit","slice");
x.t("bit","reverse");
x.t("bit","shift");
x.t("decreases","vector");
x.t("ignores","double");
x.t("inference","reset");
x.t("values","possible");
x.t("values","relational");
x.t("values","mcode");
x.t("values","variables");
x.t("values","m-function");
x.t("values","true");
x.t("values","parameters");
x.t("values","ones");
x.t("values","error");
x.t("values","scalar");
x.t("values","bind");
x.t("values","zeros");
x.t("values","appropriate");
x.t("values","examples");
x.t("values","type_spec");
x.t("values","simulation");
x.t("values","elements");
x.t("implicitly","integers");
x.t("slice","bits");
x.t("slice","function");
x.t("case","three");
x.t("case","depend");
x.t("case","end");
x.t("case","consider");
x.t("case","case");
x.t("case","clause");
x.t("case","say");
x.t("case","din==1");
x.t("type_spec","consists");
x.t("type_spec","cell");
x.t("type_spec","known");
x.t("type_spec","variable");
x.t("type_spec","value");
x.t("xlthrowoverflow","overflow");
x.t("xlthrowoverflow","xlthrowoverflow");
x.t("unavailable","variables");
x.t("propagation","compiler");
x.t("propagation","performed");
x.t("powers","two");
x.t("m-code","example");
x.t("m-code","infers");
x.t("m-code","infer");
x.t("m-code","illustrates");
x.t("m-code","calculate");
x.t("m-code","function");
x.t("port","parameter");
x.t("port","sub");
x.t("port","ram");
x.t("port","rom");
x.t("port","code");
x.t("port","value");
x.t("port","following");
x.t("port","names");
x.t("described","below");
x.t("described","earlier");
x.t("described","xfix");
x.t("xor","xl_not");
x.t("xor","operations");
x.t("rst","init");
x.t("rst","persistent");
x.t("rst","evaluates");
x.t("rst","evaluate");
x.t("rst","rst");
x.t("above","example");
x.t("above","infers");
x.t("above","reset");
x.t("above","function");
x.t("above","code");
x.t("above","rst");
x.t("called","query");
x.t("called","update");
x.t("r.back","r.push_front_pop_back");
x.t("print","type");
x.t("print","following");
x.t("regs.push_front_pop_back","(din)");
x.t("en2","else");
x.t("en2","persistent");
x.t("simultaneous","inference");
x.t("out1","ff1");
x.t("out1","out2");
x.t("executes","m-code");
x.t("subset","matlab");
x.t("two","statements");
x.t("two","detected");
x.t("two","relational");
x.t("two","arguments");
x.t("two","ends");
x.t("two","input");
x.t("two","blocks");
x.t("two","fewer");
x.t("two","ways");
x.t("two","code");
x.t("two","branches");
x.t("two","less");
x.t("two","fixed-point");
x.t("two","separate");
x.t("done","explicitly");
x.t("done","implicitly");
x.t("sense","boolean");
x.t("integer","floating-point");
x.t("integer","literals");
x.t("predefined","matlab");
x.t("otherwise","block");
x.t("otherwise","false");
x.t("otherwise","part");
x.t("otherwise","function");
x.t("otherwise","clause");
x.t("xl_op","function");
x.t("mid","low");
x.t("persitent","xl_state");
x.t("note","inferred");
x.t("out2","ff2");
x.t("out2","persistent_test02");
x.t("out2","two");
x.t("based","function");
x.t("based","magnitude");
x.t("based","usage");
x.t("based","value");
x.t("cases","compatible");
x.t("cases","switch");
x.t("cases","cases");
x.t("fractional","quantizes");
x.t("fractional","bits");
x.t("significant","bits");
x.t("significant","bit");
x.t("val","v.push_front");
x.t("val","v.front");
x.t("val","back");
x.t("val","(idx)");
x.t("val","front");
x.t("val","assigns");
x.t("positive","end");
x.t("debug","mcode");
x.t("debug","m-function");
x.t("xl_sconvert","blocks");
x.t("xl_sconvert","din");
x.t("work","precision");
x.t("register's","reset");
x.t("register's","enable");
x.t("asserted","persistent");
x.t("asserted","assigned");
x.t("involving","addition");
x.t("xl_binpt","(x)");
x.t("xl_binpt","xfix");
x.t("xl_binpt","returns");
x.t("xl_or","xl_and");
x.t("xl_or","bit-wise");
x.t("xl_or","xl_xor");
x.t("xl_state","xlunsigned");
x.t("xl_state","mcode");
x.t("xl_state","init");
x.t("xl_state","prec");
x.t("xl_state","contents");
x.t("xl_state","3.5");
x.t("xl_state","matlab");
x.t("xl_state","ones");
x.t("xl_state","function");
x.t("xl_state","proto");
x.t("xl_state","disp");
x.t("xl_state","zeros");
x.t("xl_state","invocation");
x.t("numbers","form");
x.t("numbers","boolean");
x.t("numbers","optional");
x.t("numbers","returns");
x.t("literals","converted");
x.t("literals","automatically");
x.t("literals","assignment");
x.t("literals","supported");
x.t("call","example");
x.t("call","precision");
x.t("call","double");
x.t("call","creates");
x.t("call","conversion");
x.t("call","round");
x.t("call","xfix");
x.t("call","following");
x.t("call","used");
x.t("call","unsigned");
x.t("call","effect");
x.t("call","passing");
x.t("order","mcode");
x.t("order","conditional");
x.t("order","printing");
x.t("order","presented");
x.t("testdisp","persistent");
x.t("2.0","binary");
x.t("reverse","function");
x.t("reached","debugging");
x.t("following","properties");
x.t("following","mcode");
x.t("following","line");
x.t("following","xilinx");
x.t("following","m-function");
x.t("following","cycles");
x.t("following","methods");
x.t("following","matlab");
x.t("following","figures");
x.t("following","lines");
x.t("following","three");
x.t("following","allowed");
x.t("following","first");
x.t("following","function");
x.t("following","code");
x.t("following","figure");
x.t("following","xfix");
x.t("following","examples");
x.t("following","m-code");
x.t("following","elaborate");
x.t("simulation","time");
x.t("simulation","cycle");
x.t("simulation","matlab");
x.t("simulation","step");
x.t("simulation","code");
x.t("simulation","exception");
x.t("simulation","xl_state");
x.t("model","uses");
x.t("model","file");
x.t("model","function");
x.t("model","directory");
x.t("model","netlist");
x.t("model","delays");
x.t("model","compilation");
x.t("model","described");
x.t("model","compiled");
x.t("xlmax.m","containing");
x.t("used","convert");
x.t("used","block");
x.t("used","perform");
x.t("used","end");
x.t("used","consider");
x.t("used","context");
x.t("used","xl_state");
x.t("used","elements");
x.t("used","except");
x.t("clause","types");
x.t("clause","otherwise");
x.t("elements","vector");
x.t("elements","needed");
x.t("elements","omitted");
x.t("elements","elements");
x.t("elements","simulation");
x.t("elements","here's");
x.t("elements","specify");
x.t("xlsaturate","persistent");
x.t("xlsaturate","xlthrowoverflow");
x.t("either","xlunsigned");
x.t("to_bit","arguments");
x.t("to_bit","bit");
x.t("corresponding","block");
x.t("corresponding","variable");
x.t("except","left-hand");
x.t("say","variable");
x.t("break","points");
x.t("special","case");
x.t("run","console");
x.t("style","used");
x.t("rounded","value");
x.t("arithmetic","type");
x.t("arithmetic","third");
x.t("arithmetic","functions");
x.t("arithmetic","operators");
x.t("arithmetic","representation");
x.t("arithmetic","expressions");
x.t("arithmetic","constant");
x.t("arithmetic","operations");
x.t("containing","persistent");
x.t("containing","function");
x.t("using","mcode");
x.t("using","persistent");
x.t("using","vector");
x.t("using","behavioral");
x.t("using","matlab");
x.t("using","disp");
x.t("using","xl_m_addsub");
x.t("using","switch");
x.t("using","xltruncate");
x.t("using","curly");
x.t("using","nan");
x.t("using","xl_state");
x.t("rounding","mode");
x.t("rounding","wraps");
x.t("rounding","initial");
x.t("rounding","rounding");
x.t("similarly","three");
x.t("r.push_front_pop_back","(d)");
x.t("here's","example");
x.t("din==1","state");
x.t("din==1","nextstate");
x.t("(rst)","init");
x.t("(rst)","persistent");
x.t("blockset","mcode");
x.t("blockset","libraries");
x.t("returns","binary");
x.t("returns","vector");
x.t("returns","fixed-");
x.t("returns","true");
x.t("returns","width");
x.t("returns","number");
x.t("returns","not-a-number");
x.t("returns","maximum");
x.t("returns","zeros");
x.t("returns","value");
x.t("returns","fixed-point");
x.t("returns","xfix");
x.t("returns","port");
x.t("returns","arithmetic");
x.t("returns","1-by-n");
x.t("evaluated","simulink");
x.t("inclusively","otherwise");
x.t("fabric","distributed");
x.t("distributed","ram");
x.t("tab","mcode");
x.t("tab","block");
x.t("tab","specifies");
x.t("(b)","num2str");
x.t("feeds","back");
x.t("fsm1","(din)");
x.t("fsm1","currentstate");
x.t("levels","combinational");
x.t("alternative","approach");
x.t("accomplish","rounding");
x.t("names","matlab");
x.t("names","ordering");
x.t("limited","subset");
x.t("xl_xor","xl_not");
x.t("xl_xor","bit-wise");
x.t("xl_xor","perform");
x.t("1-by-n","vector");
x.t("operations","multiplication");
x.t("operations","respectively");
x.t("operations","data");
x.t("operations","xl_or");
x.t("operations","0.0/0.0");
x.t("performed","full");
x.t("performed","inferring");
x.t("operated","value");
x.t("world","disp");
x.t("world","num2str");
x.t("modify","script");
x.t("occur","conditional");
x.t("compiled","xlmax");
x.t("compiled","parameters");
x.t("position","mcode");
x.t("position","binary");
x.t("position","supplied");
x.t("position","quantization");
x.t("position","xl_arith");
x.t("position","zero");
x.t("position","input");
x.t("position","function");
x.t("position","arith");
x.t("position","examples");
x.t("unsigned","fixed-point");
x.t("insert","delay");
x.t("insert","disp");
x.t("effect","code");
x.t("passing","mechanism");
x.t("passing","parameters");
x.t("passing","different");
x.t("achieved","binding");
x.t("drives","register");
x.t("occasionally","may");
x.t("math","index");
x.t("user-supplied","matlab");
x.t("shift","implemented");
x.t("shift","register");
x.t("shift","left");
x.t("shift","bits");
x.t("shift","operation");
x.t("shift","xl_lsh");
x.t("shift","functions");
x.t("shift","operators");
x.t("shift","fixed-point");
x.t("shift","xl_rsh");
x.t("shift","sequence");
x.t("shift","operations");
x.t("produce","boolean");
x.t("produce","signed");
x.t("forces","output");
x.t("v.push_front_pop_back","(val)");
x.t("v.length","v.maxlen");
x.t("v.length","returns");
x.t("generates","ieee");
x.t("generates","specified");
x.t("generates","1-by-n");
x.t("(i)","end");
x.t("(i)","case");
x.t("1:xl_nbits","(d)");
x.t("representing","next");
x.t("assumed","current");
x.t("inputs","mcode");
x.t("inputs","outputs");
x.t("inputs","block");
x.t("inputs","second");
x.t("inputs","values");
x.t("specify","stateless");
x.t("specify","following");
x.t("xlroundbanker","default");
x.t("elaborate","example");
x.t("object","vector");
x.t("content","maximum");
x.t("v.pop_back","pops");
x.t("v.pop_back","v.push_front_pop_back");
x.t("v.full","v.empty");
x.t("v.full","returns");
x.t("update","method");
x.t("update","methods");
x.t("checked","advanced");
x.t("0.0/0.0","inf-inf");
x.t("binding","input");
x.t("contains","three");
x.t("resources","added");
x.t("resources","rounded");
}
