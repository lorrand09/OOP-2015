function FileData_Pairs(x)
{
x.t("active","pulse");
x.t("active","filter");
x.t("double-clicking","icon");
x.t("taps","inferred");
x.t("passed","core");
x.t("supports","xlgetreloadorder");
x.t("precision","specified");
x.t("precision","fractional");
x.t("registers","critical");
x.t("clock","rate");
x.t("clock","cycles");
x.t("clock","enable");
x.t("example","shows");
x.t("example","becomes");
x.t("interfaces","following");
x.t("possible","speed");
x.t("possible","enter");
x.t("manner","maximum");
x.t("determined","automatically");
x.t("determined","based");
x.t("below","hardware");
x.t("below","shows");
x.t("below","path");
x.t("below","enter");
x.t("below","sequence");
x.t("method","single");
x.t("method","used");
x.t("method","folding");
x.t("available","consumed");
x.t("available","mac-based");
x.t("available","transfer");
x.t("256","control");
x.t("pulse","cycle");
x.t("pulse","two");
x.t("chaining","dsp");
x.t("columns","level");
x.t("columns","applicable");
x.t("columns","column");
x.t("delimited","list");
x.t("parameter","always");
x.t("parameter","dialog");
x.t("illustrate","design");
x.t("defines","down-sampling");
x.t("defines","up-sampling");
x.t("hardware","required");
x.t("hardware","oversampling");
x.t("hardware","sampling");
x.t("abstraction","rate-propagation");
x.t("lead","inefficient");
x.t("version","data");
x.t("implement","particular");
x.t("implement","data");
x.t("implement","general");
x.t("shown","below");
x.t("shown","figure");
x.t("sub-ports","represent");
x.t("saved","performance");
x.t("applied","block");
x.t("applied","first");
x.t("every","processing");
x.t("clear","input");
x.t("5.0","fir");
x.t("refer","topic");
x.t("refer","datasheet");
x.t("refer","fir");
x.t("timing","block");
x.t("maximize","precision");
x.t("question","tuser");
x.t("description","example");
x.t("divide","without");
x.t("time-multiplexed","manner");
x.t("binary","point");
x.t("required","implement");
x.t("required","improve");
x.t("required","channel");
x.t("required","signal");
x.t("required","depending");
x.t("required","operate");
x.t("required","system");
x.t("required","connect");
x.t("required","describe");
x.t("chan_id_field","mode");
x.t("once","block");
x.t("once","configuration");
x.t("always","left");
x.t("always","takes");
x.t("source","figure");
x.t("events","reload");
x.t("action","until");
x.t("synchronization","mode");
x.t("synchronization","event");
x.t("full_precision","truncate_lsbs");
x.t("full_precision","detailed");
x.t("improve","performance");
x.t("likely","higher");
x.t("pipe","length");
x.t("axi4-stream-compliant","interface");
x.t("topic","common");
x.t("topic","axi");
x.t("handshake","abstraction");
x.t("enabled","block");
x.t("enabled","multi-column");
x.t("user","chan_id_field");
x.t("user","field");
x.t("on_vector","configuration");
x.t("field","defines");
x.t("field","user");
x.t("field","block");
x.t("field","passes");
x.t("field","user_field");
x.t("field","enables");
x.t("field","chan_id");
x.t("field","identifies");
x.t("field","least");
x.t("field","e.g");
x.t("field","configuration");
x.t("field","applicable");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("implemented","value");
x.t("until","triggered");
x.t("non_symmetric_rounding_up","symmetric_rounding_to_zero");
x.t("expense","overall");
x.t("last","sample");
x.t("last","coefficient");
x.t("last","data");
x.t("uses","required");
x.t("uses","following");
x.t("forcing","ram");
x.t("shows","output");
x.t("shows","migrate");
x.t("sequences","taken");
x.t("highly","parameterizable");
x.t("interface","refer");
x.t("interface","timing");
x.t("interface","detailed");
x.t("interface","axi");
x.t("icon","display");
x.t("icon","simulink");
x.t("provided","field");
x.t("non-symmetric","resp");
x.t("non-symmetric","symmetric");
x.t("mode","on_vector");
x.t("mode","block");
x.t("mode","recommended");
x.t("mode","value");
x.t("mode","choose");
x.t("mode","tuser");
x.t("support","device");
x.t("support","back-pressure");
x.t("register","implementation");
x.t("type","field");
x.t("type","mac");
x.t("type","single_rate");
x.t("type","specifies");
x.t("type","memory");
x.t("type","specify");
x.t("change","type");
x.t("change","interpolation");
x.t("change","implementations");
x.t("sample","rate");
x.t("sample","interleaved");
x.t("sample","period");
x.t("best","precision");
x.t("best","speed");
x.t("best","implementation");
x.t("resets","core");
x.t("migration","block");
x.t("reload_tlast","assertion");
x.t("reload_tlast","signal");
x.t("compiler","5.0");
x.t("compiler","block");
x.t("compiler","6.2");
x.t("compiler","blocks");
x.t("compiler","system");
x.t("compiler","v6.2");
x.t("vector","possible");
x.t("vector","multiple");
x.t("vector","fsel");
x.t("vector","single");
x.t("vector","number");
x.t("vector","specifies");
x.t("vector","coefficients");
x.t("response","pulse");
x.t("response","intermediate");
x.t("reloadable","fir");
x.t("reloadable","coefficients");
x.t("reloadable","coefficient");
x.t("negative_symmetric","half_band");
x.t("half_band","vector");
x.t("packets","available");
x.t("packets","packets");
x.t("packets","consumed");
x.t("left","specify");
x.t("external","source");
x.t("xilinx","fir");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("multiple","columns");
x.t("multiple","channel");
x.t("multiple","coefficient");
x.t("rate","hardware");
x.t("rate","dialog");
x.t("rate","change");
x.t("rate","determines");
x.t("rate","resp");
x.t("rate","input");
x.t("rate","chosen");
x.t("rate","produces");
x.t("rate","activates");
x.t("rate","value");
x.t("rate","(p/q)");
x.t("rate","output");
x.t("rate","specification");
x.t("rate","sample_period");
x.t("however","certain");
x.t("quite","different");
x.t("listed","following");
x.t("filters","axi4-stream-compliant");
x.t("filters","require");
x.t("channel","question");
x.t("channel","action");
x.t("channel","interface");
x.t("channel","vector");
x.t("channel","group");
x.t("channel","s_axis_data_tlast");
x.t("channel","determine");
x.t("channel","input");
x.t("channel","options");
x.t("channel","reload");
x.t("channel","configuration");
x.t("channel","output");
x.t("channel","transfer");
x.t("channel","sequence");
x.t("channel","data");
x.t("channel","tlast");
x.t("product","specification");
x.t("fdatool","block");
x.t("automatically","determined");
x.t("automatically","maximize");
x.t("automatically","suit");
x.t("automatically","coefficients");
x.t("speed","speed");
x.t("speed","filters");
x.t("speed","area");
x.t("speed","option");
x.t("speed","data");
x.t("speed","setting");
x.t("default","normally");
x.t("default","automatic");
x.t("default","unchecked");
x.t("require","chaining");
x.t("require","bits");
x.t("slots","specifies");
x.t("comma","delimited");
x.t("mac","implementations");
x.t("user-selected","chosen");
x.t("fsel","field");
x.t("fsel","used");
x.t("single","single");
x.t("single","matlab");
x.t("single","coefficient");
x.t("single","data");
x.t("differences","architectures");
x.t("details","coefficient");
x.t("certain","configurations");
x.t("certain","features");
x.t("data_tready","port");
x.t("contents","applied");
x.t("advanced","tab");
x.t("new","filter");
x.t("new","coefficients");
x.t("block","supports");
x.t("block","interfaces");
x.t("block","parameter");
x.t("block","once");
x.t("block","uses");
x.t("block","support");
x.t("block","icon");
x.t("block","multiple");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","block");
x.t("block","axi4");
x.t("block","provides");
x.t("block","parameters");
x.t("block","explained");
x.t("block","configured");
x.t("block","number");
x.t("block","interpret");
x.t("block","exposes");
x.t("block","data");
x.t("block","ignores");
x.t("block","received");
x.t("block","on_packet");
x.t("block","sysgen");
x.t("block","port");
x.t("block","note");
x.t("block","using");
x.t("block","distributed");
x.t("block","detail");
x.t("oversampling","rate");
x.t("oversampling","automatically");
x.t("oversampling","specification");
x.t("xlgetreloadorder","details");
x.t("xlgetreloadorder","function");
x.t("symmetric_rounding_to_zero","symmetric_rounding_to_infinity");
x.t("configurations","speed");
x.t("interleaved","cycle");
x.t("interleaved","data");
x.t("passes","signal");
x.t("passes","content");
x.t("choice","parameter");
x.t("choice","distributed");
x.t("datasheet","core");
x.t("care","taken");
x.t("parameterizable","area-efficient");
x.t("invoked","double-clicking");
x.t("interpolation","rate");
x.t("interpolation","decimation");
x.t("interpolation","filter");
x.t("interpolation","data");
x.t("determines","degree");
x.t("s_axis_data","channel");
x.t("list","data");
x.t("group","separate");
x.t("decimation","rate");
x.t("decimation","interpolation");
x.t("decimation","filter");
x.t("decimation","data");
x.t("parallel","filter");
x.t("parallel","path");
x.t("parallel","data");
x.t("add","coefficient");
x.t("during","reload");
x.t("config_tvalid","finally");
x.t("filter","type");
x.t("filter","rate");
x.t("filter","implementations");
x.t("filter","first");
x.t("filter","types");
x.t("filter","coefficients");
x.t("filter","architecture");
x.t("filter","configuration");
x.t("filter","process");
x.t("filter","port");
x.t("filter","specification");
x.t("filter","structure");
x.t("bits","required");
x.t("bits","field");
x.t("bits","selected");
x.t("bits","specifies");
x.t("bits","configuration");
x.t("bits","used");
x.t("bits","minimal");
x.t("check","add");
x.t("quantizing","coefficients");
x.t("quantize_only","maximize_dynamic_range");
x.t("unless","inferred");
x.t("normally","achieve");
x.t("normally","adds");
x.t("user_field","mode");
x.t("due","changes");
x.t("dsp","index");
x.t("dsp","-1l");
x.t("dsp","slice");
x.t("dsp","slices");
x.t("quantization","method");
x.t("quantization","specifies");
x.t("recommended","default");
x.t("recommended","applications");
x.t("large","high");
x.t("features","block");
x.t("specified","divide");
x.t("specified","interleaved");
x.t("specified","interpolation");
x.t("specified","decimation");
x.t("specified","filter");
x.t("specified","unless");
x.t("specified","appended");
x.t("specified","loaded");
x.t("specified","match");
x.t("specified","core");
x.t("specified","data_tdata");
x.t("channels","chan_id_field");
x.t("channels","require");
x.t("channels","processed");
x.t("channels","supported");
x.t("channels","number");
x.t("channels","by_channel");
x.t("channels","packet_framing");
x.t("processed","block");
x.t("processed","fir");
x.t("degree","parallelism");
x.t("systolic_multiply_accumulate","transpose_multiply_accumulate");
x.t("cycle","resets");
x.t("cycle","block");
x.t("cycle","data");
x.t("cycle","immediately");
x.t("num","reload");
x.t("high","clock");
x.t("high","last");
x.t("high","speed");
x.t("high","during");
x.t("high","immediately");
x.t("ram","selection");
x.t("fir","compiler");
x.t("fir","filters");
x.t("fir","filter");
x.t("fir","implementations");
x.t("fir","output");
x.t("libraries","axi4");
x.t("box","below");
x.t("box","invoked");
x.t("box","activated");
x.t("box","enter");
x.t("faster","input");
x.t("transpose_multiply_accumulate","differences");
x.t("path","specified");
x.t("path","control");
x.t("path","output");
x.t("overall","resource");
x.t("range","256");
x.t("suit","best");
x.t("data_tvalid","example");
x.t("common","options");
x.t("axi4","reloadable");
x.t("axi4","dsp");
x.t("axi4","fir");
x.t("axi4","versions");
x.t("follows","filter");
x.t("follows","optimization");
x.t("follows","configuration");
x.t("resp","n-bit");
x.t("resp","symmetric");
x.t("edit","box");
x.t("performance","pulse");
x.t("performance","likely");
x.t("performance","expense");
x.t("enables","data_tready");
x.t("multiple-columns","automatic");
x.t("exactly","due");
x.t("virtex","device");
x.t("neither","uses");
x.t("consumption","configuration");
x.t("s_axis_data_tlast","asserted");
x.t("synchronous","clear");
x.t("cycles","required");
x.t("cycles","reload_tlast");
x.t("custom","select");
x.t("preference","storage");
x.t("3,3e","dsp");
x.t("provides","users");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","choice");
x.t("parameters","parameters");
x.t("parameters","specific");
x.t("parameters","non-axi4");
x.t("parameters","used");
x.t("slower","input");
x.t("further","qualifies");
x.t("matlab","row");
x.t("appended","previous");
x.t("implementations","decimation");
x.t("implementations","large");
x.t("implementations","intermediate");
x.t("implementations","number");
x.t("implementations","value");
x.t("implementations","aresetn");
x.t("implementations","either");
x.t("place","hardware");
x.t("place","data_tdata");
x.t("loaded","external");
x.t("loaded","config_tvalid");
x.t("loaded","advance");
x.t("loaded","reload");
x.t("loaded","core");
x.t("area","speed");
x.t("area","area");
x.t("area","design");
x.t("area","option");
x.t("determine","width");
x.t("boxes","migrate");
x.t("indicate","last");
x.t("n-bit","input");
x.t("explained","topic");
x.t("explained","associated");
x.t("optimizations","made");
x.t("consumed","every");
x.t("consumed","once");
x.t("consumed","contents");
x.t("consumed","range");
x.t("system-level","parameters");
x.t("selection","either");
x.t("non-axi","reloadable");
x.t("non-axi","axi4");
x.t("loading","sequences");
x.t("sets","filter");
x.t("sets","specified");
x.t("sets","loaded");
x.t("sets","greater");
x.t("s_axis_data_tvalid","port");
x.t("optimization","goa");
x.t("critical","paths");
x.t("untouched","input");
x.t("ports","block");
x.t("ports","unique");
x.t("ports","described");
x.t("ports","based");
x.t("input","always");
x.t("input","handshake");
x.t("input","channel");
x.t("input","signals");
x.t("input","signal");
x.t("input","output");
x.t("input","port");
x.t("input","factor");
x.t("input","buffer");
x.t("earlier","versions");
x.t("width","automatically");
x.t("width","edit");
x.t("width","chan_id");
x.t("width","specifies");
x.t("width","specify");
x.t("resource","usage");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","system-level");
x.t("device","families");
x.t("device","project");
x.t("device","kintex");
x.t("chosen","automatically");
x.t("chosen","device");
x.t("second","loaded");
x.t("assertion","figure");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","fir");
x.t("logicore","logicore");
x.t("signals","shown");
x.t("signals","config_tdata_fsel");
x.t("selected","device");
x.t("selected","coefficient");
x.t("selected","case");
x.t("selected","structure");
x.t("divided","sub-ports");
x.t("activated","rounding");
x.t("mac-based","fir");
x.t("lengths","comma");
x.t("store","coefficients");
x.t("store","data");
x.t("present","preference");
x.t("present","output");
x.t("6.2","xilinx");
x.t("6.2","block");
x.t("6.2","fir");
x.t("6.2","design");
x.t("config","channel");
x.t("supported","hardware");
x.t("supported","resources");
x.t("point","location");
x.t("configured","reloadable");
x.t("configured","process");
x.t("aclken","minimum");
x.t("aclken","active-high");
x.t("registered","performance");
x.t("display","display");
x.t("display","shortened");
x.t("blocks","configured");
x.t("explanation","bits");
x.t("explanation","inter-column");
x.t("explanation","reload");
x.t("din","sample");
x.t("period","dialog");
x.t("period","case");
x.t("period","specification");
x.t("intermediate","values");
x.t("intermediate","levels");
x.t("back-pressure","supported");
x.t("back-pressure","without");
x.t("automatic","mode");
x.t("automatic","based");
x.t("next","care");
x.t("next","load");
x.t("finally","reload");
x.t("select","active");
x.t("select","method");
x.t("select","length");
x.t("select","format");
x.t("select","following");
x.t("exposed","input");
x.t("exposed","number");
x.t("fixed","fractional");
x.t("serial","implementation");
x.t("options","synchronization");
x.t("options","reloadable");
x.t("options","block");
x.t("options","num");
x.t("options","input");
x.t("options","aclken");
x.t("options","number");
x.t("options","coefficients");
x.t("options","multi-column");
x.t("options","note");
x.t("options","tab");
x.t("options","tlast");
x.t("minimum","area");
x.t("minimum","aresetn");
x.t("first","sample");
x.t("first","coefficients");
x.t("first","subsequent");
x.t("feature","enabled");
x.t("number","taps");
x.t("number","parallel");
x.t("number","bits");
x.t("number","channels");
x.t("number","sets");
x.t("number","coefficients");
x.t("number","coefficient");
x.t("number","data");
x.t("number","paths");
x.t("single_rate","data");
x.t("truncate_lsbs","non_symmetric_rounding_down");
x.t("processing","cycle");
x.t("control","signals");
x.t("control","options");
x.t("control","signal");
x.t("inter-column","pipe");
x.t("briefly","described");
x.t("length","matlab");
x.t("length","first");
x.t("length","pipeline");
x.t("maximum","possible");
x.t("maximum","channels");
x.t("signal","high");
x.t("signal","produces");
x.t("signal","output");
x.t("signal","internally");
x.t("signal","strobe");
x.t("function","xlgetreloadorder");
x.t("design","description");
x.t("design","migration");
x.t("design","however");
x.t("chan_id","field");
x.t("advance","reloaded");
x.t("inappropriate","lead");
x.t("high-performance","fir");
x.t("unique","block");
x.t("unique","coefficient");
x.t("represents","fsel");
x.t("specifies","binary");
x.t("specifies","type");
x.t("specifies","oversampling");
x.t("specifies","quantization");
x.t("specifies","number");
x.t("specifies","coefficient");
x.t("specifies","core");
x.t("specifies","individual");
x.t("impulse","response");
x.t("particular","filter");
x.t("non_symmetric_rounding_down","non_symmetric_rounding_up");
x.t("may","required");
x.t("may","identical");
x.t("may","result");
x.t("by_channel","unique");
x.t("different","non-axi");
x.t("index","xilinx");
x.t("detailed","explanation");
x.t("detailed","implementation");
x.t("detailed","information");
x.t("starting","page");
x.t("row","vector");
x.t("reduce","amount");
x.t("types","decimation");
x.t("types","fractional");
x.t("types","used");
x.t("format","maximum_possible");
x.t("match","structure");
x.t("symmetric_rounding_to_infinity","convergent_rounding_to_even");
x.t("achieve","best");
x.t("samples","coefficient");
x.t("identical","exactly");
x.t("changes","certain");
x.t("vector_framing","tlast");
x.t("expected","denote");
x.t("initial","coefficients");
x.t("-1l","fir");
x.t("-1l","-1l");
x.t("area-efficient","high-performance");
x.t("integer_coefficients","quantize_only");
x.t("datapath","advanced");
x.t("datapath","options");
x.t("datapath","output");
x.t("enable","available");
x.t("active-low","synchronous");
x.t("config_tdata_fsel","sub-field");
x.t("fully","parallel");
x.t("fully","explained");
x.t("fully","serial");
x.t("maximize_dynamic_range","coefficient");
x.t("convergent_rounding_to_odd","output");
x.t("adds","pipeline");
x.t("identifies","time-division-multiplexed");
x.t("level","pipelining");
x.t("previous","vector");
x.t("option","recommended");
x.t("option","area");
x.t("option","minimum");
x.t("option","exposes");
x.t("produces","fully");
x.t("symmetric","negative_symmetric");
x.t("symmetric","impulse");
x.t("triggered","re-configuration");
x.t("least","significant");
x.t("memory","type");
x.t("memory","options");
x.t("memory","used");
x.t("greater","refer");
x.t("coefficients","applied");
x.t("coefficients","implemented");
x.t("coefficients","best");
x.t("coefficients","quite");
x.t("coefficients","filter");
x.t("coefficients","check");
x.t("coefficients","specified");
x.t("coefficients","input");
x.t("coefficients","selected");
x.t("coefficients","number");
x.t("coefficients","datapath");
x.t("coefficients","coefficient");
x.t("coefficients","reload_tdata");
x.t("coefficients","structure");
x.t("coefficients","following");
x.t("coefficients","using");
x.t("enter","hardware");
x.t("enter","sample");
x.t("enter","coefficients");
x.t("resampling","filter");
x.t("maximum_possible","specifies");
x.t("architectures","fully");
x.t("event","refer");
x.t("e.g","channels");
x.t("families","dsp");
x.t("unchecked","data_tvalid");
x.t("ensure","following");
x.t("coefficient","type");
x.t("coefficient","vector");
x.t("coefficient","specified");
x.t("coefficient","fir");
x.t("coefficient","sets");
x.t("coefficient","width");
x.t("coefficient","options");
x.t("coefficient","reload");
x.t("coefficient","data");
x.t("coefficient","structure");
x.t("coefficient","fractional");
x.t("coefficient","used");
x.t("coefficient","buffer");
x.t("sampling","rate");
x.t("architecture","choose");
x.t("reload","channel");
x.t("reload","slots");
x.t("reload","new");
x.t("reload","ports");
x.t("reload","period");
x.t("reload","data");
x.t("made","core");
x.t("time-division-multiplexed","channel");
x.t("project","custom");
x.t("taken","place");
x.t("taken","ensure");
x.t("configuration","method");
x.t("configuration","packets");
x.t("configuration","channel");
x.t("configuration","selected");
x.t("configuration","specifies");
x.t("configuration","packet");
x.t("simulink","model");
x.t("activates","hardware");
x.t("activates","sample");
x.t("amount","hardware");
x.t("latency","datapath");
x.t("value","full_precision");
x.t("value","field");
x.t("value","provided");
x.t("value","rate");
x.t("value","decimation");
x.t("value","specified");
x.t("(p/q)","resampling");
x.t("core","time-multiplexed");
x.t("core","required");
x.t("core","response");
x.t("core","fir");
x.t("core","second");
x.t("core","reduce");
x.t("core","port");
x.t("core","[1,2,3,2,1]");
x.t("usage","default");
x.t("usage","setting");
x.t("interpret","tlast");
x.t("tready","field");
x.t("similar","block");
x.t("specific","filter");
x.t("specific","detailed");
x.t("specific","implementation");
x.t("selecting","option");
x.t("implementation","non-symmetric");
x.t("implementation","options");
x.t("implementation","appropriate");
x.t("implementation","tab");
x.t("signed","unsigned");
x.t("depending","required");
x.t("depending","coefficient");
x.t("pipeline","registers");
x.t("pipeline","stages");
x.t("aresetn","active");
x.t("aresetn","active-low");
x.t("figure","below");
x.t("generate","highly");
x.t("generator","block");
x.t("exposes","s_axis_data_tvalid");
x.t("exposes","axi");
x.t("sub-field","ports");
x.t("sub-field","port");
x.t("sub-field","names");
x.t("inferred","non-symmetric");
x.t("inferred","length");
x.t("inferred","coefficients");
x.t("process","shown");
x.t("process","single");
x.t("process","interleaved");
x.t("pipelining","required");
x.t("takes","place");
x.t("takes","priority");
x.t("represent","parallel");
x.t("represent","coefficients");
x.t("reloaded","coefficients");
x.t("separate","ports");
x.t("page","explanation");
x.t("page","detailed");
x.t("output","interpolation");
x.t("output","channels");
x.t("output","faster");
x.t("output","slower");
x.t("output","width");
x.t("output","tready");
x.t("output","data");
x.t("output","not_required");
x.t("output","simulation");
x.t("output","rounding");
x.t("output","buffer");
x.t("applicable","interpolation");
x.t("applicable","decimation");
x.t("applicable","feature");
x.t("location","coefficients");
x.t("transfer","user");
x.t("transfer","control");
x.t("sequence","events");
x.t("sequence","processed");
x.t("active-high","clock");
x.t("information","axi");
x.t("data","passed");
x.t("data","available");
x.t("data","rate");
x.t("data","channel");
x.t("data","channels");
x.t("data","path");
x.t("data","loaded");
x.t("data","indicate");
x.t("data","input");
x.t("data","samples");
x.t("data","output");
x.t("data","sheet");
x.t("data","based");
x.t("data","paths");
x.t("data","buffer");
x.t("internally","registered");
x.t("becomes","m_axis_data_tvalid");
x.t("data_tdata","input");
x.t("data_tdata","axi");
x.t("packet_framing","block");
x.t("ignores","content");
x.t("received","transaction");
x.t("result","shift");
x.t("appropriate","filter");
x.t("caution","inappropriate");
x.t("strobe","high");
x.t("down-sampling","factor");
x.t("values","produce");
x.t("re-configuration","synchronization");
x.t("case","block");
x.t("case","high");
x.t("case","structure");
x.t("on_packet","further");
x.t("slice","column");
x.t("slice","elements");
x.t("reload_tdata","input");
x.t("reload_tdata","reload_tvalid");
x.t("sysgen","generator");
x.t("described","follows");
x.t("described","next");
x.t("port","enabled");
x.t("port","earlier");
x.t("port","divided");
x.t("port","back-pressure");
x.t("port","exposed");
x.t("port","represents");
x.t("port","vector_framing");
x.t("port","called");
x.t("port","port");
x.t("port","reload_tvalid");
x.t("port","names");
x.t("specification","below");
x.t("specification","filter");
x.t("specification","select");
x.t("specification","starting");
x.t("specification","coefficient");
x.t("specification","selecting");
x.t("specification","tab");
x.t("up-sampling","factor");
x.t("called","port");
x.t("choose","systolic_multiply_accumulate");
x.t("choose","following");
x.t("structure","determined");
x.t("structure","forcing");
x.t("structure","specified");
x.t("structure","optimizations");
x.t("structure","specifies");
x.t("structure","depending");
x.t("structure","following");
x.t("structure","across");
x.t("not_required","neither");
x.t("not_required","case");
x.t("sheet","detailed");
x.t("sheet","spartan");
x.t("migrate","fir");
x.t("migrate","non-axi4");
x.t("users","generate");
x.t("integer","fixed_fractional");
x.t("note","choice");
x.t("note","data");
x.t("transaction","s_axis_data");
x.t("priority","aclken");
x.t("two","cycles");
x.t("column","lengths");
x.t("column","options");
x.t("column","configuration");
x.t("multi-column","support");
x.t("multi-column","devices");
x.t("non-axi4","fir");
x.t("non-axi4","axi4");
x.t("based","selected");
x.t("based","din");
x.t("based","initial");
x.t("based","sub-field");
x.t("factor","specified");
x.t("factor","fixed");
x.t("fractional","rate");
x.t("fractional","bits");
x.t("fractional","width");
x.t("significant","bits");
x.t("asserted","configuration");
x.t("slices","implementations");
x.t("applications","data");
x.t("sample_period","activates");
x.t("operate","maximum");
x.t("packet","consumed");
x.t("immediately","reload_tlast");
x.t("immediately","following");
x.t("following","full_precision");
x.t("following","xilinx");
x.t("following","dsp");
x.t("following","loading");
x.t("following","options");
x.t("following","integer_coefficients");
x.t("following","inferred");
x.t("following","model");
x.t("used","illustrate");
x.t("used","implement");
x.t("used","block");
x.t("used","quantizing");
x.t("used","store");
x.t("used","select");
x.t("used","process");
x.t("used","represent");
x.t("used","caution");
x.t("used","specify");
x.t("model","filter");
x.t("model","used");
x.t("rate-propagation","takes");
x.t("either","user-selected");
x.t("either","block");
x.t("either","not_required");
x.t("elements","across");
x.t("individual","column");
x.t("system","clock");
x.t("system","generator");
x.t("storage","specifies");
x.t("storage","datapath");
x.t("simulation","axi4");
x.t("simulation","non-axi");
x.t("axi","interface");
x.t("axi","fir");
x.t("axi","ports");
x.t("axi","config");
x.t("using","fdatool");
x.t("using","similar");
x.t("parallelism","rate");
x.t("parallelism","implementation");
x.t("rounding","mode");
x.t("setting","normally");
x.t("setting","may");
x.t("connect","columns");
x.t("general","storage");
x.t("reload_tvalid","next");
x.t("reload_tvalid","control");
x.t("blockset","fir");
x.t("blockset","libraries");
x.t("tab","block");
x.t("tab","follows");
x.t("tab","parameters");
x.t("tab","memory");
x.t("remainder","number");
x.t("levels","parallelism");
x.t("convergent_rounding_to_even","convergent_rounding_to_odd");
x.t("goa","specifies");
x.t("tuser","field");
x.t("tuser","select");
x.t("minimal","number");
x.t("qualifies","consumption");
x.t("across","multiple");
x.t("across","multiple-columns");
x.t("subsequent","columns");
x.t("stages","required");
x.t("distributed","may");
x.t("distributed","used");
x.t("kintex","device");
x.t("names","default");
x.t("names","sub-field");
x.t("v6.2","product");
x.t("without","port");
x.t("without","remainder");
x.t("associated","fir");
x.t("paths","filter");
x.t("paths","area");
x.t("paths","specifies");
x.t("tlast","passes");
x.t("tlast","expected");
x.t("tlast","latency");
x.t("tlast","either");
x.t("tlast","tlast");
x.t("inefficient","resource");
x.t("shortened","port");
x.t("load","new");
x.t("versions","briefly");
x.t("versions","may");
x.t("versions","core");
x.t("unsigned","quantization");
x.t("describe","channel");
x.t("m_axis_data_tvalid","parameters");
x.t("[1,2,3,2,1]","reload_tdata");
x.t("spartan","device");
x.t("fixed_fractional","rate");
x.t("produce","implementations");
x.t("shift","register");
x.t("buffer","type");
x.t("buffer","present");
x.t("specify","memory");
x.t("specify","signed");
x.t("specify","output");
x.t("specify","integer");
x.t("denote","last");
x.t("resources","saved");
x.t("higher","tuser");
x.t("content","untouched");
x.t("content","tuser");
x.t("devices","select");
x.t("folding","filter");
x.t("detail","refer");
}
