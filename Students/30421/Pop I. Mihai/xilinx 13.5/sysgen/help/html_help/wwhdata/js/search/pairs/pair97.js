function FileData_Pairs(x)
{
x.t("precision","count");
x.t("precision","cannot");
x.t("double-clicking","icon");
x.t("representable","output");
x.t("provide","load");
x.t("available","target");
x.t("available","free");
x.t("parameter","dialog");
x.t("fpga","hardware");
x.t("hardware","free");
x.t("version","data");
x.t("counters","least");
x.t("counters","limited");
x.t("implement","using");
x.t("binary","counter");
x.t("binary","point");
x.t("performs","addition");
x.t("1or","subtraction");
x.t("topic","common");
x.t("implemented","combining");
x.t("implemented","using");
x.t("implemented","fabric");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("hdl","gives");
x.t("hdl","otherwise");
x.t("downstream","logic");
x.t("area.core","parameters");
x.t("uses","xilinx");
x.t("provided","step");
x.t("icon","simulink");
x.t("basic","elements");
x.t("basic","tab");
x.t("type","down");
x.t("type","specifies");
x.t("calculations","replace");
x.t("resets","value");
x.t("pin","option");
x.t("calculation","replaces");
x.t("operates","free");
x.t("xilinx","counter");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("down","counter");
x.t("down","up/down");
x.t("down","provides");
x.t("comparator","count");
x.t("listed","following");
x.t("block's","parameters");
x.t("count","down");
x.t("count","direction");
x.t("count","value");
x.t("count","limited");
x.t("inf","denotes");
x.t("behavioral","hdl");
x.t("default","fabric");
x.t("denotes","number");
x.t("denotes","largest");
x.t("details","behavioral");
x.t("synthesis","tool");
x.t("block","parameter");
x.t("block","implemented");
x.t("block","uses");
x.t("block","operates");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","parameters");
x.t("block","explained");
x.t("block","implements");
x.t("block","output");
x.t("counter","provide");
x.t("counter","v11.0");
x.t("counter","binary");
x.t("counter","performs");
x.t("counter","implemented");
x.t("counter","calculations");
x.t("counter","type");
x.t("counter","resets");
x.t("counter","calculation");
x.t("counter","xilinx");
x.t("counter","comparator");
x.t("counter","down");
x.t("counter","count");
x.t("counter","block");
x.t("counter","counter");
x.t("counter","configured");
x.t("counter","number");
x.t("counter","explicit");
x.t("counter","value");
x.t("counter","free");
x.t("counter","implementation");
x.t("counter","output");
x.t("counter","count-limited");
x.t("counter","calculated");
x.t("counter","load");
x.t("invoked","double-clicking");
x.t("optimize","performance");
x.t("bits","block");
x.t("bits","counter");
x.t("bits","specifies");
x.t("bits","output");
x.t("dsp","-1l");
x.t("specified","precision");
x.t("specified","signed");
x.t("libraries","basic");
x.t("box","invoked");
x.t("direction","count");
x.t("direction","counter");
x.t("direction","specifies");
x.t("common","options");
x.t("follows","denotes");
x.t("follows","counter");
x.t("follows","implementation");
x.t("follows","count-limited");
x.t("performance","area.core");
x.t("virtex","device");
x.t("dsp48","available");
x.t("dsp48","dsp48");
x.t("3,3e","dsp");
x.t("up/down","counter");
x.t("up/down","selected");
x.t("parameters","implement");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","output");
x.t("parameters","used");
x.t("provides","optional");
x.t("increment","decrement");
x.t("boxes","xilinx");
x.t("explained","topic");
x.t("target","device");
x.t("input","din");
x.t("input","port");
x.t("addition","input");
x.t("addition","subtraction");
x.t("device","default");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("selected","specifying");
x.t("logic","implemented");
x.t("logic","synthesis");
x.t("logic","math");
x.t("configured","step");
x.t("configured","load");
x.t("point","block");
x.t("point","specifies");
x.t("expensive","fpga");
x.t("din","port");
x.t("options","block");
x.t("control","logic");
x.t("number","count");
x.t("number","bits");
x.t("number","free");
x.t("implements","free");
x.t("combining","free");
x.t("maximum","freedom");
x.t("evenly","divides");
x.t("specifies","block");
x.t("specifies","counter");
x.t("specifies","direction");
x.t("specifies","increment");
x.t("specifies","number");
x.t("specifies","initial");
x.t("specifies","location");
x.t("specifies","ending");
x.t("cannot","initial");
x.t("index","xilinx");
x.t("replace","addition");
x.t("step","specifies");
x.t("step","initial");
x.t("step","value");
x.t("types","counter");
x.t("initial","value");
x.t("initial","ending");
x.t("capability","available");
x.t("capability","calculated");
x.t("explicit","load");
x.t("-1l","counter");
x.t("-1l","-1l");
x.t("replaces","addition");
x.t("least","expensive");
x.t("option","block's");
x.t("divides","difference");
x.t("simulink","model");
x.t("running","counters");
x.t("running","down");
x.t("running","counter");
x.t("running","up/down");
x.t("running","count-limited");
x.t("running","load");
x.t("value","inf");
x.t("value","count");
x.t("value","input");
x.t("value","number");
x.t("value","evenly");
x.t("value","specifies");
x.t("value","step");
x.t("value","output");
x.t("core","block");
x.t("core","logic");
x.t("free","running");
x.t("signed","unsigned");
x.t("selecting","provide");
x.t("specific","basic");
x.t("specific","implementation");
x.t("largest","representable");
x.t("implementation","details");
x.t("implementation","tab");
x.t("gives","downstream");
x.t("fixed-point","number");
x.t("generator","block");
x.t("output","precision");
x.t("output","binary");
x.t("output","type");
x.t("output","count");
x.t("output","counter");
x.t("output","specified");
x.t("output","free");
x.t("output","output");
x.t("output","either");
x.t("location","binary");
x.t("specifying","direction");
x.t("count-limited","type");
x.t("count-limited","down");
x.t("count-limited","counter");
x.t("count-limited","free");
x.t("subtraction","count");
x.t("subtraction","block");
x.t("subtraction","input");
x.t("subtraction","free");
x.t("optional","input");
x.t("tool","maximum");
x.t("freedom","optimize");
x.t("data","sheet");
x.t("values","provided");
x.t("values","output");
x.t("port","1or");
x.t("port","up/down");
x.t("port","selecting");
x.t("port","output");
x.t("port","count-limited");
x.t("port","subtraction");
x.t("port","load");
x.t("port","checked");
x.t("sheet","spartan");
x.t("otherwise","core");
x.t("following","xilinx");
x.t("elements","control");
x.t("ending","value");
x.t("ending","values");
x.t("model","basic");
x.t("either","signed");
x.t("used","block");
x.t("system","generator");
x.t("calculated","follows");
x.t("using","behavioral");
x.t("using","core");
x.t("blockset","counter");
x.t("blockset","libraries");
x.t("tab","follows");
x.t("tab","parameters");
x.t("fabric","dsp48");
x.t("fabric","parameters");
x.t("kintex","device");
x.t("load","pin");
x.t("load","counter");
x.t("load","din");
x.t("load","capability");
x.t("load","output");
x.t("load","port");
x.t("limited","counters");
x.t("limited","counter");
x.t("limited","bits");
x.t("limited","up/down");
x.t("limited","types");
x.t("unsigned","initial");
x.t("unsigned","fixed-point");
x.t("spartan","device");
x.t("math","index");
x.t("difference","initial");
x.t("decrement","value");
x.t("checked","block");
}
