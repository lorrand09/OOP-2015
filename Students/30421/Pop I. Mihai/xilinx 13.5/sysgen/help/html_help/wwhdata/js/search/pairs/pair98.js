function FileData_Pairs(x)
{
x.t("registers","implemented");
x.t("precision","minimum");
x.t("precision","pinc");
x.t("precision","increased");
x.t("exploits","xtremedsp");
x.t("active","high");
x.t("active","maps");
x.t("sclr","synchronous");
x.t("double-clicking","icon");
x.t("clock","number");
x.t("clock","(mhz)");
x.t("clock","per");
x.t("provide","addition");
x.t("provide","increased");
x.t("poff_in","rdy");
x.t("poff_in","input");
x.t("poff_in","streaming");
x.t("determined","number");
x.t("determined","reg_select");
x.t("available","output");
x.t("parameter","dialog");
x.t("parameter","basic");
x.t("parameter","allows");
x.t("parameter","selection");
x.t("possible","amplitude");
x.t("below","implementation");
x.t("below","generally");
x.t("digital","synthesizer");
x.t("digital","integrator");
x.t("fpga","hardware");
x.t("fpga","families");
x.t("hardware","parameters");
x.t("hardware","resource");
x.t("hardware","following");
x.t("easy","modulation");
x.t("version","data");
x.t("sinusoidal","waveform");
x.t("waveform","architecture");
x.t("independently","configurable");
x.t("independently","configured");
x.t("independently","together");
x.t("clear","input");
x.t("half","dds");
x.t("half","full_range");
x.t("table","rfd");
x.t("table","scheme");
x.t("table","output");
x.t("create","dds");
x.t("currently","available");
x.t("currently","selected");
x.t("describes","phase");
x.t("18.18","relates");
x.t("18.18","fix");
x.t("rfd","ready");
x.t("rfd","dataflow");
x.t("rfd","port");
x.t("rfd","checked");
x.t("phase_width","phase");
x.t("(accumulator)","generates");
x.t("once","core");
x.t("negation","configurable");
x.t("always","tied");
x.t("always","ready");
x.t("time-multiplexed","channels");
x.t("time-multiplexed","dds");
x.t("various","implementation");
x.t("unit_circle","selects");
x.t("binary","range");
x.t("controlled","oscillator");
x.t("parts","dds");
x.t("parts","phase");
x.t("parts","used");
x.t("apply","poff");
x.t("consistency","logicore");
x.t("tone","produced");
x.t("optimal","performance");
x.t("(output)","port");
x.t("angles","x2pi");
x.t("angles","tab");
x.t("user","enable");
x.t("topic","common");
x.t("uses","xilinx");
x.t("uses","explicit");
x.t("uses","lookup");
x.t("implemented","fpga");
x.t("implemented","bus");
x.t("expense","increased");
x.t("outputs","negation");
x.t("outputs","channel");
x.t("outputs","latency");
x.t("outputs","belong");
x.t("xtremedsp","slices");
x.t("dialog","entry");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("field","basic");
x.t("field","activated");
x.t("field","phase");
x.t("weight","accumulator");
x.t("v4.0","system");
x.t("necessary","know");
x.t("configurable","allows");
x.t("configurable","core");
x.t("configurable","phase");
x.t("interface","consisting");
x.t("interface","port");
x.t("mode","reg_select");
x.t("mode","full_range");
x.t("support","time-multiplexed");
x.t("support","achieve");
x.t("18-bit","phase");
x.t("it\u2019s","width");
x.t("icon","simulink");
x.t("reg_select=0","pinc");
x.t("basic","tab");
x.t("spurious","free");
x.t("phase_dithering","taylor_series_corrected");
x.t("calculations","output");
x.t("sample","period");
x.t("type","choose");
x.t("pipelined","optimal");
x.t("pins","phase");
x.t("compiler","v4.0");
x.t("compiler","necessary");
x.t("compiler","channel");
x.t("compiler","block");
x.t("compiler","configured");
x.t("compiler","4.0");
x.t("compiler","core");
x.t("0.5","respectively");
x.t("reset","internal");
x.t("reset","poff");
x.t("reset","maps");
x.t("pin","selected");
x.t("xilinx","logicore");
x.t("xilinx","dds");
x.t("xilinx","blockset");
x.t("xilinx","logicores");
x.t("oscillator","(nco)");
x.t("followed","optional");
x.t("rate","core");
x.t("variants","block");
x.t("however","output");
x.t("i.e","phase_width");
x.t("listed","following");
x.t("multi-channel","mode");
x.t("multi-channel","operation");
x.t("multi-channel","capability");
x.t("channel","poff_in");
x.t("channel","currently");
x.t("channel","(output)");
x.t("channel","pin");
x.t("channel","rate");
x.t("channel","channel");
x.t("channel","sine");
x.t("channel","independent");
x.t("channel","index");
x.t("channel","dds");
x.t("channel","data");
x.t("speed","operation");
x.t("speed","dsp48");
x.t("require","larger");
x.t("validates","sine");
x.t("multiplied","radians");
x.t("consists","accumulator");
x.t("supplied","consistency");
x.t("supplied","output");
x.t("supplied","pinc_in");
x.t("phase_generator_and_sin_cos_lut","sin_cos_lut_only");
x.t("phase_generator_and_sin_cos_lut","selected");
x.t("power-of-two","amplitude");
x.t("block","active");
x.t("block","parameter");
x.t("block","uses");
x.t("block","implemented");
x.t("block","interface");
x.t("block","reset");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","follows");
x.t("block","direct");
x.t("block","parameters");
x.t("block","explained");
x.t("block","calculate");
x.t("block","diagram");
x.t("block","phase");
x.t("block","following");
x.t("block","clocked");
x.t("rdy","output");
x.t("rdy","checked");
x.t("architectural","decisions");
x.t("choice","programmable");
x.t("choice","fixed");
x.t("choice","noise");
x.t("sine/cosine","lookup");
x.t("indicates","channel");
x.t("indicates","output");
x.t("invoked","double-clicking");
x.t("time-division","multi-channel");
x.t("menu","below");
x.t("bits","addr");
x.t("entry","box");
x.t("results","less");
x.t("radians","field");
x.t("radians","channel");
x.t("dsp","index");
x.t("dsp","-1l");
x.t("overview","understand");
x.t("sine","sine");
x.t("sine","and/or");
x.t("sine","cosine");
x.t("sine","output");
x.t("sine","negates");
x.t("quarterwave","storage");
x.t("taylor","series");
x.t("(pinc)","memory");
x.t("supplying","values");
x.t("supplying","phase");
x.t("selects","maximum");
x.t("selects","exact");
x.t("x2pi","radians");
x.t("high","rfd");
x.t("high","speed");
x.t("high","indicates");
x.t("high","enables");
x.t("high","sfdr");
x.t("writing","phase");
x.t("channels","parameter");
x.t("channels","currently");
x.t("channels","time-multiplexed");
x.t("channels","channels");
x.t("channels","specified");
x.t("channels","data");
x.t("channels","rst");
x.t("cycle","18-bit");
x.t("cycle","output");
x.t("cycle","pinc_in");
x.t("relates","ranges");
x.t("specified","dialog");
x.t("specified","number");
x.t("specified","output");
x.t("requirements","system");
x.t("system_parameters","hardware_parameters");
x.t("libraries","dsp");
x.t("programmable","registers");
x.t("programmable","supplied");
x.t("programmable","parameters");
x.t("programmable","frequency");
x.t("programmable","addr");
x.t("programmable","adds");
x.t("programmable","output");
x.t("programmable","values");
x.t("programmable","phase");
x.t("programmable","streaming");
x.t("operation","block");
x.t("operation","offset");
x.t("operation","unsigned");
x.t("box","below");
x.t("box","invoked");
x.t("range","weight");
x.t("range","(db)");
x.t("common","options");
x.t("floor","sin/cos");
x.t("follows","input");
x.t("follows","configuration");
x.t("enables","write");
x.t("performance","configurable");
x.t("performance","latency");
x.t("virtex","device");
x.t("direct","digital");
x.t("part","parts");
x.t("part","sin/cos");
x.t("time-shared","data");
x.t("angle","increment");
x.t("angle","input");
x.t("angle","offset");
x.t("entered","binary");
x.t("entered","array");
x.t("entered","values");
x.t("entered","fraction");
x.t("synchronous","clear");
x.t("synchronous","reset");
x.t("accuracy","affected");
x.t("dsp48","choose");
x.t("phase_generator","half");
x.t("programmability","field");
x.t("programmability","fixed");
x.t("programmability","specifies");
x.t("3,3e","dsp");
x.t("synthesizer","commonly");
x.t("parameters","dialog");
x.t("parameters","spurious");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","phase");
x.t("parameters","used");
x.t("provides","phase");
x.t("none","phase_dithering");
x.t("none","fixed");
x.t("none","valid");
x.t("none","taylor_series_corrected");
x.t("increment","(pinc)");
x.t("increment","specified");
x.t("increment","programmability");
x.t("increment","input");
x.t("increment","fixed");
x.t("increment","memory");
x.t("increment","values");
x.t("increment","phase");
x.t("increment","fraction");
x.t("increment","offset");
x.t("amplitude","half");
x.t("amplitude","unit_circle");
x.t("amplitude","mode");
x.t("amplitude","explicit");
x.t("area","speed");
x.t("boxes","xilinx");
x.t("address","channels");
x.t("address","input");
x.t("address","select");
x.t("allows","easy");
x.t("allows","two");
x.t("allows","specify");
x.t("selection","basic");
x.t("selection","sin_cos_lut_only");
x.t("selection","specifies");
x.t("selection","choose");
x.t("produced","dds");
x.t("consumed","optional");
x.t("explained","topic");
x.t("write","operation");
x.t("write","phase_in");
x.t("write","enable");
x.t("fix","18.18");
x.t("sin_cos_lut_only","none");
x.t("sin_cos_lut_only","phase");
x.t("sin_cos_lut_only","phase_generator_only");
x.t("sets","precision");
x.t("sets","width");
x.t("sets","output");
x.t("precise","values");
x.t("optimization","goal");
x.t("fields","activated");
x.t("array","field");
x.t("array","entered");
x.t("understand","dds");
x.t("addition","phase");
x.t("input","allows");
x.t("input","ports");
x.t("input","underlying");
x.t("input","may");
x.t("input","replace");
x.t("input","addr");
x.t("input","value");
x.t("input","phase");
x.t("input","either");
x.t("ports","rdy");
x.t("ports","block");
x.t("ports","write");
x.t("ports","respectively");
x.t("logicore","version");
x.t("logicore","apply");
x.t("logicore","user");
x.t("logicore","block");
x.t("logicore","phase_out");
x.t("logicore","logicore");
x.t("logicore","dds");
x.t("logicore","reg_select");
x.t("logicore","cosine");
x.t("logicore","cores");
x.t("ufix","18.18");
x.t("relative","rate");
x.t("width","determined");
x.t("width","equivalent");
x.t("width","broadly");
x.t("width","internal");
x.t("width","allowable");
x.t("phase_out","appears");
x.t("resolution","sets");
x.t("resolution","(hz)");
x.t("resource","noise");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("sinusoids","digital");
x.t("signals","address");
x.t("functions","dds");
x.t("selected","none");
x.t("selected","memory");
x.t("selected","dds");
x.t("selected","configuration");
x.t("selected","reg_select");
x.t("selected","output");
x.t("selected","port");
x.t("divided","number");
x.t("supplies","phase");
x.t("present","xilinx");
x.t("effective","clock");
x.t("auto","area");
x.t("auto","distributed_rom");
x.t("auto","dds");
x.t("auto","configuration");
x.t("sine_and_cosine","polarity");
x.t("activated","parameter");
x.t("activated","phase_generator_and_sin_cos_lut");
x.t("supported","independently");
x.t("configured","provide");
x.t("configured","multi-channel");
x.t("configured","sin_cos_lut_only");
x.t("configured","either");
x.t("frequency","block");
x.t("frequency","entered");
x.t("frequency","relative");
x.t("frequency","input");
x.t("frequency","resolution");
x.t("frequency","fixed");
x.t("frequency","cannot");
x.t("frequency","memory");
x.t("frequency","core");
x.t("frequency","fraction");
x.t("frequency","tab");
x.t("separately","instantiated");
x.t("equivalent","frequency");
x.t("equivalent","sfdr");
x.t("calculate","sine");
x.t("independent","frequency");
x.t("independent","offset");
x.t("mapped","lookup");
x.t("know","block");
x.t("respectively","programmable");
x.t("respectively","case");
x.t("transforms","phase");
x.t("1.0","-0.5");
x.t("calculating","phase");
x.t("(db)","targeted");
x.t("period","specified");
x.t("period","checked");
x.t("fixed","programmable");
x.t("fixed","dds");
x.t("fixed","ratio");
x.t("adjusted","once");
x.t("select","writing");
x.t("select","following");
x.t("appears","phase");
x.t("appears","phase_generator_only");
x.t("options","parameter");
x.t("options","field");
x.t("options","block");
x.t("options","selection");
x.t("options","auto");
x.t("options","noise");
x.t("options","memory");
x.t("affects","effective");
x.t("targeted","purity");
x.t("minimum","phase");
x.t("written","determined");
x.t("written","multi-channel");
x.t("presence","outputs");
x.t("underlying","logicore");
x.t("underlying","core");
x.t("number","it\u2019s");
x.t("number","bits");
x.t("number","channels");
x.t("control","signal");
x.t("cost","less");
x.t("broadly","equivalent");
x.t("pulldown","menu");
x.t("commonly","called");
x.t("design","used");
x.t("signal","present");
x.t("signal","created");
x.t("tied","vcc");
x.t("shaping","hardware");
x.t("shaping","output");
x.t("shaping","choose");
x.t("shaping","phase_generator_only");
x.t("function","(s)");
x.t("maximum","possible");
x.t("maximum","performance");
x.t("specifies","channel");
x.t("specifies","frequency");
x.t("specifies","function");
x.t("specifies","phase");
x.t("whether","data");
x.t("cannot","adjusted");
x.t("sfdr","expense");
x.t("sfdr","high");
x.t("sfdr","sets");
x.t("may","unsigned");
x.t("phase_in","used");
x.t("index","xilinx");
x.t("index","indicates");
x.t("dither","generator");
x.t("accumulator","followed");
x.t("accumulator","i.e");
x.t("correction","exploits");
x.t("-0.5","=phase");
x.t("replace","phase");
x.t("numerically","controlled");
x.t("achieve","high");
x.t("achieve","maximum");
x.t("types","ufix");
x.t("internal","bus");
x.t("internal","phase");
x.t("internal","memories");
x.t("samples","valid");
x.t("capability","time-division");
x.t("capability","supported");
x.t("noise","floor");
x.t("noise","shaping");
x.t("explicit","sample");
x.t("explicit","period");
x.t("completeness","dds");
x.t("-1l","-1l");
x.t("-1l","dds");
x.t("addr","channels");
x.t("addr","specifies");
x.t("addr","bus");
x.t("addr","reg_select");
x.t("enable","active");
x.t("enable","block");
x.t("accumulators","less");
x.t("(poff)","memory");
x.t("distributed_rom","block_rom");
x.t("fully","pipelined");
x.t("adds","channel");
x.t("lut","part");
x.t("lut","transforms");
x.t("lut","optional");
x.t("lut","sin/cos");
x.t("memory","reg_select=0");
x.t("memory","type");
x.t("memory","programmable");
x.t("memory","write");
x.t("memory","input");
x.t("memory","selected");
x.t("memory","written");
x.t("memory","number");
x.t("memory","memory");
x.t("memory","and/or");
x.t("memory","usage");
x.t("memory","phase");
x.t("ready","active");
x.t("ready","data");
x.t("option","selected");
x.t("exact","power-of-two");
x.t("4.0","uses");
x.t("4.0","xilinx");
x.t("4.0","block");
x.t("4.0","dds");
x.t("together","select");
x.t("together","optional");
x.t("embedded","design");
x.t("families","support");
x.t("memmories","reset");
x.t("frequencies","(mhz)");
x.t("dds","rfd");
x.t("dds","always");
x.t("dds","support");
x.t("dds","compiler");
x.t("dds","supplied");
x.t("dds","rdy");
x.t("dds","sets");
x.t("dds","affects");
x.t("dds","capability");
x.t("dds","fully");
x.t("dds","instantiated");
x.t("dds","precedes");
x.t("dds","output");
x.t("dds","phase_output");
x.t("architecture","overview");
x.t("and/or","programmable");
x.t("and/or","cosine");
x.t("poff","memory");
x.t("poff","values");
x.t("poff","pinc");
x.t("less","hardware");
x.t("less","precise");
x.t("less","pipeline");
x.t("less","resources");
x.t("modulation","dds");
x.t("simulink","model");
x.t("configuration","options");
x.t("instantiated","separately");
x.t("instantiated","together");
x.t("polarity","negative");
x.t("latency","sine/cosine");
x.t("latency","options");
x.t("latency","pulldown");
x.t("scheme","generate");
x.t("core","configured");
x.t("core","embedded");
x.t("core","core");
x.t("core","customized");
x.t("core","clocked");
x.t("core","consist");
x.t("main","parts");
x.t("usage","achieved");
x.t("value","describes");
x.t("value","maps");
x.t("bus","interface");
x.t("bus","data");
x.t("bus","used");
x.t("bus","widths");
x.t("signed","purely");
x.t("signed","fractional");
x.t("dataflow","control");
x.t("specific","basic");
x.t("free","dynamic");
x.t("implementation","options");
x.t("implementation","decisions");
x.t("implementation","tab");
x.t("pipeline","stages");
x.t("generate","sinusoids");
x.t("generator","create");
x.t("generator","consists");
x.t("generator","block");
x.t("generator","part");
x.t("generator","input");
x.t("generator","configured");
x.t("generator","output");
x.t("generator","phase");
x.t("making","architectural");
x.t("precedes","sine");
x.t("valid","rfd");
x.t("valid","choice");
x.t("valid","options");
x.t("(s)","block");
x.t("output","precision");
x.t("output","sinusoidal");
x.t("output","sine");
x.t("output","accuracy");
x.t("output","phase_generator");
x.t("output","amplitude");
x.t("output","selection");
x.t("output","ports");
x.t("output","width");
x.t("output","frequency");
x.t("output","underlying");
x.t("output","samples");
x.t("output","frequencies");
x.t("output","value");
x.t("output","data");
x.t("output","optional");
x.t("output","efficient");
x.t("output","phase");
x.t("output","port");
x.t("output","negative");
x.t("diagram","dds");
x.t("consisting","addr");
x.t("reg_select","address");
x.t("reg_select","poff");
x.t("reg_select","specifying");
x.t("reg_select","data");
x.t("reg_select","port");
x.t("specifying","whether");
x.t("cosine","outputs");
x.t("cosine","sine_and_cosine");
x.t("cosine","output");
x.t("cosine","cosine");
x.t("cosine","port");
x.t("cosine","negates");
x.t("purely","fractional");
x.t("context","dds");
x.t("purposes","making");
x.t("dynamic","range");
x.t("larger","accumulators");
x.t("sin/cos","lut");
x.t("optional","pins");
x.t("optional","variants");
x.t("optional","taylor");
x.t("optional","dither");
x.t("optional","adder");
x.t("optional","port");
x.t("data","active");
x.t("data","time-shared");
x.t("data","input");
x.t("data","signals");
x.t("data","written");
x.t("data","ready");
x.t("data","bus");
x.t("data","pinc_in");
x.t("data","phase");
x.t("data","port");
x.t("data","sheet");
x.t("customized","precision");
x.t("customized","frequency");
x.t("customized","phase");
x.t("goal","choose");
x.t("adder","provide");
x.t("pinc_in","poff_in");
x.t("pinc_in","streaming");
x.t("schemes","presence");
x.t("values","field");
x.t("values","require");
x.t("values","multiplied");
x.t("values","channel");
x.t("values","programmable");
x.t("values","entered");
x.t("values","precise");
x.t("values","cost");
x.t("case","phase");
x.t("cores","optional");
x.t("(mhz)","channel");
x.t("(mhz)","specifies");
x.t("called","numerically");
x.t("phase","calculations");
x.t("phase","angle");
x.t("phase","entered");
x.t("phase","increment");
x.t("phase","input");
x.t("phase","width");
x.t("phase","mapped");
x.t("phase","signal");
x.t("phase","types");
x.t("phase","generator");
x.t("phase","fraction");
x.t("phase","offset");
x.t("phase","checked");
x.t("efficient","memory");
x.t("port","always");
x.t("port","outputs");
x.t("port","validates");
x.t("port","functions");
x.t("port","appears");
x.t("port","underlying");
x.t("port","completeness");
x.t("port","value");
x.t("port","output");
x.t("port","used");
x.t("port","qualifies");
x.t("maps","sclr");
x.t("maps","sine");
x.t("maps","cosine");
x.t("maps","port");
x.t("rst","synchronous");
x.t("decisions","frequency");
x.t("decisions","calculating");
x.t("choose","system_parameters");
x.t("choose","none");
x.t("choose","auto");
x.t("choose","minimal");
x.t("sheet","spartan");
x.t("two","parts");
x.t("two","main");
x.t("fraction","rate");
x.t("fraction","supplied");
x.t("fraction","cycle");
x.t("=phase","0.5");
x.t("=phase","1.0");
x.t("offset","independently");
x.t("offset","angles");
x.t("offset","programmable");
x.t("offset","programmability");
x.t("offset","entered");
x.t("offset","parameters");
x.t("offset","none");
x.t("offset","input");
x.t("offset","frequency");
x.t("offset","fixed");
x.t("offset","(poff)");
x.t("offset","memory");
x.t("offset","core");
x.t("offset","values");
x.t("offset","phase");
x.t("offset","fraction");
x.t("slices","fpga");
x.t("slices","used");
x.t("fractional","quantity");
x.t("created","phase");
x.t("vcc","channel");
x.t("phase_generator_only","selected");
x.t("phase_generator_only","option");
x.t("phase_generator_only","system");
x.t("following","xilinx");
x.t("following","phase_generator_and_sin_cos_lut");
x.t("following","block");
x.t("following","fields");
x.t("used","independently");
x.t("used","block");
x.t("used","supplying");
x.t("used","address");
x.t("used","achieve");
x.t("used","dds");
x.t("used","conjunction");
x.t("either","fixed");
x.t("either","unsigned");
x.t("storage","schemes");
x.t("model","basic");
x.t("system","clock");
x.t("system","requirements");
x.t("system","parameters");
x.t("system","generator");
x.t("hardware_parameters","system");
x.t("phase_output","port");
x.t("lookup","table");
x.t("conjunction","sin/cos");
x.t("using","optional");
x.t("using","halfwave");
x.t("halfwave","quarterwave");
x.t("pinc","memory");
x.t("pinc","memmories");
x.t("pinc","poff");
x.t("streaming","choice");
x.t("streaming","input");
x.t("blockset","libraries");
x.t("blockset","dds");
x.t("series","correction");
x.t("per","channel");
x.t("tab","parameter");
x.t("tab","hardware");
x.t("tab","sine");
x.t("tab","follows");
x.t("tab","parameters");
x.t("tab","fixed");
x.t("tab","implementation");
x.t("tab","phase");
x.t("tab","system");
x.t("(hz)","sets");
x.t("taylor_series_corrected","auto");
x.t("taylor_series_corrected","valid");
x.t("allowable","however");
x.t("negates","sine");
x.t("negates","cosine");
x.t("full_range","selects");
x.t("full_range","amplitude");
x.t("minimal","maximal");
x.t("stages","latency");
x.t("qualifies","channel");
x.t("kintex","device");
x.t("ranges","=phase");
x.t("block_rom","optimization");
x.t("(nco)","block");
x.t("achieved","using");
x.t("unsigned","number");
x.t("unsigned","signed");
x.t("clocked","divided");
x.t("clocked","purposes");
x.t("clocked","per");
x.t("memories","block");
x.t("purity","tone");
x.t("maximal","xtremedsp");
x.t("maximal","maximal");
x.t("spartan","device");
x.t("generates","phase");
x.t("increased","sfdr");
x.t("increased","noise");
x.t("increased","using");
x.t("affected","choice");
x.t("integrator","(accumulator)");
x.t("consist","two");
x.t("quantity","supplying");
x.t("quantity","provides");
x.t("quantity","supplies");
x.t("logicores","context");
x.t("ratio","system");
x.t("widths","various");
x.t("negative","sine");
x.t("negative","cosine");
x.t("checked","dds");
x.t("specify","less");
x.t("generally","results");
x.t("resources","consumed");
x.t("belong","output");
}
