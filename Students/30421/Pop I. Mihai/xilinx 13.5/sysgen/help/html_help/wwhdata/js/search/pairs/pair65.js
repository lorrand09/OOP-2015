function FileData_Pairs(x)
{
x.t("example","xflow");
x.t("example","design");
x.t("included","resulting");
x.t("included","bitstream");
x.t("included","module");
x.t("clock","clock");
x.t("clock","wrapper");
x.t("clock","signals");
x.t("clock","enable");
x.t("nbdbuild","map");
x.t("active","software");
x.t("bmm","file");
x.t("placed","design's");
x.t("placed","routed");
x.t("below","may");
x.t("token","dialog");
x.t("provide","later");
x.t("fpga","part");
x.t("fpga","platform");
x.t("fpga","bit");
x.t("synplify","pro");
x.t("defines","various");
x.t("defines","command");
x.t("fast_runtime.opt","high_effort.opt");
x.t("hardware","co-simulation");
x.t("hardware","design");
x.t("shown","below");
x.t("files","default");
x.t("files","settings");
x.t("files","edit");
x.t("files","base");
x.t("files","search");
x.t("files","top-level");
x.t("files","design");
x.t("files","specifies");
x.t("files","located");
x.t("files","e.g");
x.t("files","include");
x.t("files","additional");
x.t("files","implementation");
x.t("files","along");
x.t("files","using");
x.t("files","associated");
x.t("implement","flow");
x.t("implement","options");
x.t("implement","configure");
x.t("ngc","placed");
x.t("ngc","xst");
x.t("ngc","search");
x.t("ngc","specifies");
x.t("create","fpga");
x.t("create","options");
x.t("tree","files");
x.t("refer","compilation");
x.t("alternate","clock");
x.t("co-simulation","command");
x.t("co-simulation","targets");
x.t("ise","software");
x.t("wrapper","example");
x.t("wrapper","hdl");
x.t("wrapper","file");
x.t("wrapper","allows");
x.t("wrapper","logic");
x.t("wrapper","level");
x.t("various","flows");
x.t("responsible","compiling");
x.t("responsible","driving");
x.t("summary","implementation");
x.t("performs","following");
x.t("components","used");
x.t("derived","portion");
x.t("topic","information");
x.t("creates","back-annotated");
x.t("dialog","box");
x.t("hdl","components");
x.t("hdl","file");
x.t("hdl","netlist");
x.t("hdl","system");
x.t("edif","synplify");
x.t("edif","ngc");
x.t("uses","multiple");
x.t("uses","xflow");
x.t("uses","balanced.opt");
x.t("line","options");
x.t("line","tool");
x.t("field","specify");
x.t("program","compilation");
x.t("later","back-annotated");
x.t("necessary","create");
x.t("necessary","produce");
x.t("provided","target");
x.t("look","additional");
x.t("supply","clock");
x.t("interface","note");
x.t("type","default");
x.t("type","allows");
x.t("type","netlist");
x.t("type","runs");
x.t("type","system");
x.t("lower-level","netlist");
x.t("xilinx\\data","directory");
x.t("synthesized","netlist");
x.t("xst","depends");
x.t("trace","design");
x.t("trace","specifies");
x.t("xilinx","ise");
x.t("xilinx","configuration");
x.t("execution","xflow");
x.t("multiple","clock");
x.t("multiple","flows");
x.t("microblaze","processor");
x.t("inside","imported");
x.t("default","files");
x.t("default","options");
x.t("default","system");
x.t("constraint","files");
x.t("synthesis","results");
x.t("synthesis","tool");
x.t("compiling","synthesis");
x.t("want","supply");
x.t("want","options");
x.t("access","additional");
x.t("sitting","system");
x.t("updates","resulting");
x.t("command","line");
x.t("command","compile");
x.t("command","order");
x.t("includes","several");
x.t("placer","effort");
x.t("block","imported");
x.t("block","software");
x.t("failures","during");
x.t("file","summary");
x.t("file","edif");
x.t("file","specified");
x.t("file","suitable");
x.t("file","declares");
x.t("file","produced");
x.t("file","input");
x.t("file","performing");
x.t("file","configuration");
x.t("file","include");
x.t("file","named");
x.t("file","implementation");
x.t("file","bit_file");
x.t("file","generated");
x.t("file","above");
x.t("file","created");
x.t("file","system");
x.t("file","used");
x.t("file","using");
x.t("file","bmm_file");
x.t("combines","synthesis");
x.t("clicking","settings");
x.t("during","software");
x.t("during","bitstream");
x.t("during","compilation");
x.t("issued","system");
x.t("results","topic");
x.t("results","core");
x.t("results","case");
x.t("mport","top-level");
x.t("depends","synthesis");
x.t("xflow","defines");
x.t("xflow","options");
x.t("xflow","broken");
x.t("xflow","option");
x.t("xflow","run");
x.t("xflow","used");
x.t("xflow","produce");
x.t("left-clicking","compilation");
x.t("constraints","files");
x.t("desired","settings");
x.t("desired","output");
x.t("specified","top-");
x.t("specified","compilation");
x.t("specified","specify");
x.t("processor","block");
x.t("processor","netlisted");
x.t("imported","edk");
x.t("suitable","fpga");
x.t("box","parameters");
x.t("box","allows");
x.t("box","bitstream");
x.t("box","netlists");
x.t("box","include");
x.t("box","selecting");
x.t("settings","dialog");
x.t("settings","differ");
x.t("settings","button");
x.t("settings","may");
x.t("settings","bitstream");
x.t("settings","specific");
x.t("path","additional");
x.t("name","alternate");
x.t("name","location");
x.t("resulting","bitstream");
x.t("tasks","combines");
x.t("edit","default");
x.t("edit","fields");
x.t("enables","edit");
x.t("previously","synthesized");
x.t("re-compiling","edk");
x.t("bitstreams","perform");
x.t("part","selected");
x.t("declares","programs");
x.t("base","directory");
x.t("component","refer");
x.t("board-specific","hardware");
x.t("perform","bitstream");
x.t("imported_edk_project.bmm","system");
x.t("parameters","specific");
x.t(".ucf",".xcf");
x.t("top-","level");
x.t("back-annotated","bmm");
x.t("pro","ngc");
x.t("place","clock");
x.t("determine","sequence");
x.t("allows","compile");
x.t("allows","substitute");
x.t("allows","specify");
x.t("map","par");
x.t("search","path");
x.t("targets","configuration");
x.t("data2bram","utility");
x.t("pathname","imported");
x.t("pathname","back-annotated");
x.t("pathname","sysgen");
x.t("produced","sysgen");
x.t("target","re-compiling");
x.t("target","directory");
x.t("target","configuration");
x.t("target","case");
x.t("target","system");
x.t("programs","inside");
x.t("programs","imported");
x.t("programs","resulting");
x.t("programs","bitstreams");
x.t("programs","xlprocblockcallbacks");
x.t("programs","run");
x.t("programs","succeeds");
x.t("programs","modify");
x.t("programs","update");
x.t("fields","top-level");
x.t("copies","netlist");
x.t("xlprocblockcallbacks","updatebitstream");
x.t("chosen","compilation");
x.t("flow","defines");
x.t("flow","responsible");
x.t("flow","performs");
x.t("flow","type");
x.t("flow","sometimes");
x.t("flow","types");
x.t("flow","bitgen.opt");
x.t("input","xflow");
x.t("three","commonly");
x.t("differ","e.g");
x.t("xmp_file","pathname");
x.t("xmp_file","bit_file");
x.t("selected","fpga");
x.t("selected","synthesis");
x.t("selected","compilation");
x.t("selected","system");
x.t("bitgen","necessary");
x.t("signals","board-specific");
x.t("signals","design");
x.t("high_effort.opt","note");
x.t("sometimes","may");
x.t("logic","place");
x.t("error","warning");
x.t("checkbox","enables");
x.t("invokes","data2bram");
x.t("select","bitstream");
x.t("options","files");
x.t("options","provided");
x.t("options","file");
x.t("options","used");
x.t("button","bitstream");
x.t("top-level","hdl");
x.t("top-level","netlist");
x.t("top-level","itself");
x.t("top-level","including");
x.t("control","system");
x.t("_cw.v","used");
x.t("design","included");
x.t("design","responsible");
x.t("design","derived");
x.t("design","uses");
x.t("design","interface");
x.t("design","xilinx");
x.t("design","microblaze");
x.t("design","during");
x.t("design","selected");
x.t("design","sometimes");
x.t("design","_cw.v");
x.t("design","particular");
x.t("design","_cw.vhd");
x.t("design","_cw.bit");
x.t("design","runs");
x.t("design","instantiates");
x.t("design","edk");
x.t("design","compiled");
x.t("commonly","used");
x.t("effort","level");
x.t("(bitgen)","specifies");
x.t("updatebitstream","xmp_file");
x.t("may","create");
x.t("may","want");
x.t("may","access");
x.t("may","select");
x.t("may","choose");
x.t("particular","flow");
x.t("particular","order");
x.t("software","tree");
x.t("software","program");
x.t("software","includes");
x.t("software","programs");
x.t("specifies","name");
x.t("specifies","options");
x.t("specifies","directory");
x.t(".xcf",".ncf");
x.t("driving","clock");
x.t("types","bitstream");
x.t("types","separate");
x.t("compile","active");
x.t("compile","design");
x.t("compile","software");
x.t("directory","xilinx");
x.t("directory","specified");
x.t("directory","three");
x.t("directory","design");
x.t("directory","directory");
x.t("directory","system");
x.t("_cw.vhd","design");
x.t("achieve","desired");
x.t("_cw.bit","placed");
x.t("bitstream","shown");
x.t("bitstream","execution");
x.t("bitstream","file");
x.t("bitstream","settings");
x.t("bitstream","target");
x.t("bitstream","selected");
x.t("bitstream","properly");
x.t("bitstream","implementation");
x.t("bitstream","compilation");
x.t("bitstream","generation");
x.t("bitstream","note");
x.t("bitstream","system");
x.t("bitstream","compiled");
x.t("steps","during");
x.t("par","trace");
x.t("par","default");
x.t("enable","signals");
x.t("design's","target");
x.t("fully","elaborated");
x.t("located","xilinx\\data");
x.t("level","component");
x.t("level","top-level");
x.t("level","par");
x.t("level","netlist");
x.t("produces","clock");
x.t("produces","bitstream");
x.t("performing","following");
x.t("broken","two");
x.t("option","files");
x.t(".ncf","implementation");
x.t("message","issued");
x.t("e.g","edif");
x.t("e.g",".ucf");
x.t("e.g","bitgen");
x.t("e.g","specify");
x.t("e.g","edn");
x.t("netlists","constraints");
x.t("netlists","black");
x.t("encounters","failures");
x.t("netlist","included");
x.t("netlist","files");
x.t("netlist","field");
x.t("netlist","type");
x.t("netlist","constraint");
x.t("netlist","file");
x.t("netlist","allows");
x.t("netlist","design");
x.t("netlist","e.g");
x.t("netlist","output");
x.t("netlist","larger");
x.t("netlist","system");
x.t("routed","ncd");
x.t("project","file");
x.t("project","compilation");
x.t("project","shared");
x.t("project","following");
x.t("project","contains");
x.t("tries","compile");
x.t("configuration","flow");
x.t("configuration","options");
x.t("configuration","bitstream");
x.t("configuration","implementation");
x.t("configuration","phase");
x.t("include","during");
x.t("include","mport");
x.t("include","desired");
x.t("include","compiled");
x.t("include","balanced.opt");
x.t("named","imported_edk_project.bmm");
x.t("named","design");
x.t("named","imported_edk_project_bd.bmm");
x.t("tools","necessary");
x.t("tools","xilinx");
x.t("tools","e.g");
x.t("core","netlists");
x.t("ngdbuild","runs");
x.t("additional","settings");
x.t("additional","netlist");
x.t("additional","compilation");
x.t(".edf",".ngc");
x.t("selecting","checkbox");
x.t("selecting","bitstream");
x.t("implementation","flow");
x.t("implementation","options");
x.t("implementation","directory");
x.t("implementation","configuration");
x.t("implementation","phase");
x.t("several","example");
x.t("specific","bitstream");
x.t("bit_file","pathname");
x.t("bit_file","bmm_file");
x.t("compilation","active");
x.t("compilation","type");
x.t("compilation","clicking");
x.t("compilation","results");
x.t("compilation","left-clicking");
x.t("compilation","imported");
x.t("compilation","settings");
x.t("compilation","target");
x.t("compilation","types");
x.t("compilation","bitstream");
x.t("compilation","selecting");
x.t("compilation","runs");
x.t("compilation","note");
x.t("compilation","submenu");
x.t("compilation","typically");
x.t("compilation","system");
x.t("compilation","generates");
x.t("generator","clock");
x.t("generator","token");
x.t("generator","hardware");
x.t("generator","implement");
x.t("generator","creates");
x.t("generator","dialog");
x.t("generator","uses");
x.t("generator","look");
x.t("generator","updates");
x.t("generator","copies");
x.t("generator","invokes");
x.t("generator","design");
x.t("generator","bitstream");
x.t("generator","produces");
x.t("generator","encounters");
x.t("generator","tries");
x.t("generator","configuration");
x.t("generator","compilation");
x.t("generator","copy");
x.t("generator","portion");
x.t("import","top-level");
x.t("generated","during");
x.t("runs","xflow");
x.t("runs","map");
x.t("runs","selected");
x.t("runs","tools");
x.t("substitute","clock");
x.t("netlisted","included");
x.t("output","results");
x.t("output","e.g");
x.t("ncd","file");
x.t("black","box");
x.t("separate","xflow");
x.t("larger","design");
x.t("location","top-level");
x.t("along","top-level");
x.t("platform","xflow");
x.t("sequence","programs");
x.t("tool","xflow");
x.t("tool","chosen");
x.t("tool","netlist");
x.t("tool","produce");
x.t("module","may");
x.t("information","clock");
x.t("configure","design");
x.t("bit","file");
x.t("shared","memories");
x.t("case","hardware");
x.t("case","may");
x.t("generation","xflow");
x.t("utility","include");
x.t("choose","import");
x.t("phase","nbdbuild");
x.t("phase","(bitgen)");
x.t("sysgen","during");
x.t("sysgen","bitstream");
x.t("above","command");
x.t("two","flows");
x.t("note","hdl");
x.t("note","default");
x.t("note","name");
x.t("note","error");
x.t("submenu","control");
x.t("itself","previously");
x.t("copy","netlist");
x.t("typically","multiple");
x.t("order","achieve");
x.t("order","configuration");
x.t("order","update");
x.t("created","system");
x.t("imported_edk_project_bd.bmm","provide");
x.t("system","generator");
x.t("following","command");
x.t("following","tasks");
x.t("following","steps");
x.t("run","design");
x.t("run","particular");
x.t("run","tools");
x.t("run","order");
x.t("used","implement");
x.t("used","during");
x.t("used","top-level");
x.t("used","configuration");
x.t("used","tools");
x.t("used","implementation");
x.t("using","fully");
x.t("using","ngdbuild");
x.t(".ngc","constraints");
x.t("warning","message");
x.t("portion","design");
x.t("instantiates","system");
x.t("succeeds","system");
x.t("associated","xflow");
x.t("edk","processor");
x.t("edk","project");
x.t("modify","software");
x.t("compiled","software");
x.t("compiled","system");
x.t("including","top-level");
x.t("memories","sitting");
x.t("generates","hdl");
x.t("produce","lower-level");
x.t("produce","configuration");
x.t("bitgen.opt","file");
x.t("flows","determine");
x.t("flows","implementation");
x.t("flows","run");
x.t("elaborated","ncd");
x.t("balanced.opt","fast_runtime.opt");
x.t("balanced.opt","file");
x.t("specify","alternate");
x.t("specify","options");
x.t("specify","top-level");
x.t("specify","directory");
x.t("specify","higher");
x.t("higher","placer");
x.t("edn",".edf");
x.t("update","bitstream");
x.t("update","system");
x.t("bmm_file","pathname");
x.t("bmm_file","xmp_file");
x.t("contains","bmm");
}
