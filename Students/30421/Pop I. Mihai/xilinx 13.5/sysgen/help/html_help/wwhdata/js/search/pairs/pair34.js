function FileData_Pairs(x)
{
x.t("interfaces","allow");
x.t("multi-clock","designs");
x.t("multi-clock","design");
x.t("multi-clock","system");
x.t("clock","example");
x.t("clock","normalized");
x.t("clock","source");
x.t("clock","wrapper");
x.t("clock","domains");
x.t("clock","fir");
x.t("clock","enables");
x.t("clock","clkfx");
x.t("clock","lines");
x.t("clock","ports");
x.t("clock","input");
x.t("clock","designs");
x.t("clock","period");
x.t("clock","domain");
x.t("clock","may");
x.t("clock","important");
x.t("clock","enable");
x.t("clock","connected");
x.t("clock","multiplier-accumulator");
x.t("clock","sources");
x.t("clock","islands");
x.t("clock","rates");
x.t("clock","probes");
x.t("clock","----------------------------------------------------------------------");
x.t("clock","asynchronous");
x.t("clock","applications");
x.t("clock","driver");
x.t("clock","inputs");
x.t("example","example");
x.t("example","dcm");
x.t("example","implement");
x.t("example","describes");
x.t("example","uses");
x.t("example","shows");
x.t("example","provided");
x.t("example","top");
x.t("example","demonstrates");
x.t("example","partition");
x.t("example","domain");
x.t("example","top-level");
x.t("example","communicate");
x.t("example","may");
x.t("example","interpolating");
x.t("example","vhdl");
x.t("example","previous");
x.t("example","making");
x.t("example","output");
x.t("example","call");
x.t("registers","microprocessor");
x.t("registers","synchronous");
x.t("four","samples");
x.t("four","output");
x.t("dcm","example");
x.t("dcm","clock");
x.t("dcm","reset");
x.t("dcm","connects");
x.t("dcm","component");
x.t("dcm","wire");
x.t("dcm","multiplies");
x.t("dcm","namely");
x.t("dcm","generate");
x.t("dcm","two");
x.t("dcm","synopsys");
x.t("dcm","generates");
x.t("dcm","attributes");
x.t("partitioning","partitioning");
x.t("partitioning","multiple-clock");
x.t("partitioning","design");
x.t("partitioning","specifically");
x.t("happen","simultaneously");
x.t("(middle)","creates");
x.t("included","top-level");
x.t("included","netlist");
x.t("ieee","library");
x.t("ieee.std_logic_1164.all","unisim.vcomponents.all");
x.t("label","low");
x.t("label","false");
x.t("label","true");
x.t("label","attribute");
x.t("label","signal");
x.t("clkfx_divide_generic","synopsys");
x.t("possible","clock");
x.t("possible","explicitly");
x.t("possible","however");
x.t("possible","rate");
x.t("possible","avoid");
x.t("possible","answer");
x.t("possible","connect");
x.t("provide","i/o");
x.t("method","symbol-rate");
x.t("available","xilinx");
x.t("library","ieee");
x.t("library","unisim");
x.t("library","shared");
x.t("parameter","dialog");
x.t("parameter","fifo");
x.t("manner","unsafe");
x.t("metastability-","reducing");
x.t("below","shows");
x.t("below","illustrates");
x.t("below","note");
x.t("token","parameter");
x.t("token","dialog");
x.t("token","top");
x.t("token","sets");
x.t("token","ss_clk_domaina");
x.t("normalized","simulink");
x.t("66.7","mhz");
x.t("suffixes","subsystem");
x.t("suffixes","above");
x.t("structural","top_wrapper");
x.t("dll_frequency_mode","string");
x.t("dll_frequency_mode","frequency_mode");
x.t("dll_frequency_mode","dcm0");
x.t("hardware","pitfalls");
x.t("hardware","description");
x.t("hardware","uses");
x.t("hardware","last");
x.t("hardware","realizations");
x.t("hardware","resource");
x.t("hardware","design");
x.t("hardware","usage");
x.t("hardware","implementation");
x.t("hardware","generated");
x.t("hardware","shared");
x.t("hardware","generation");
x.t("hardware","operate");
x.t("hardware","used");
x.t("hardware","using");
x.t("hardware","generates");
x.t("microprocessor","processor");
x.t("fpga","clock");
x.t("fpga","device");
x.t("fpga","design");
x.t("advantages","partitioning");
x.t("abstraction","level");
x.t("simultaneously","example");
x.t("efficiently","mapped");
x.t("right","excluding");
x.t("defines","fpga");
x.t("defines","hdl");
x.t("clkfb","clk0buf");
x.t("clkfb","std_logic");
x.t("locked","std_logic");
x.t("locked","intlock");
x.t("drive","two");
x.t("implement","multi-clock");
x.t("implement","multiple");
x.t("implement","advanced");
x.t("implement","designs");
x.t("within","single");
x.t("within","individual");
x.t("needs","symbols");
x.t("cross-domain","transfers");
x.t("clear","synchronous");
x.t("resides","domain");
x.t("resides","different");
x.t("pitfalls","well-understood");
x.t("shown","output");
x.t("shown","bold");
x.t("shown","two");
x.t("half","memory");
x.t("half","simulate");
x.t("files","store");
x.t("files","directory");
x.t("files","include");
x.t("files","black");
x.t("files","note");
x.t("describes","implement");
x.t("describes","multiple");
x.t("timing","clocking");
x.t("timing","constraints");
x.t("timing","problems");
x.t("create","four");
x.t("create","new");
x.t("create","black-box");
x.t("create","top-level");
x.t("preferable","instances");
x.t("well-understood","netlisting");
x.t("ngc","files");
x.t("ngc","file");
x.t("ngc","netlist");
x.t("refer","topic");
x.t("refer","domains");
x.t("visualize","model's");
x.t("visualize","output");
x.t("description","language");
x.t("source","possible");
x.t("source","multirate");
x.t("source","per");
x.t("divide","design");
x.t("once","multiple");
x.t("once","island");
x.t("once","design");
x.t("gated","clocks");
x.t("wrapper","multi-clock");
x.t("wrapper","example");
x.t("wrapper","layer");
x.t("wrapper","uses");
x.t("wrapper","includes");
x.t("wrapper","instantiating");
x.t("wrapper","decide");
x.t("wrapper","logic");
x.t("wrapper","instantiate");
x.t("wrapper","instantiates");
x.t("layer","logic");
x.t("layer","design");
x.t("required","multirate");
x.t("required","system");
x.t("four-cycle","shift");
x.t("cross","clock");
x.t("cross","domains");
x.t("synchronization","flops");
x.t("components","step-by-step");
x.t("components","automatically");
x.t("few","cycles");
x.t("derived","clock");
x.t("derived","e.g");
x.t("derived","system");
x.t("topic","describes");
x.t("topic","timing");
x.t("topic","multiple");
x.t("topic","generated");
x.t("methodologies","information");
x.t("partitioned","xilinx");
x.t("creates","four");
x.t("creates","hdl");
x.t("creates","top-level");
x.t("double","clicking");
x.t("top_wrapper","--------------------------------------");
x.t("top_wrapper","architecture");
x.t("top_wrapper","case");
x.t("top_wrapper","port");
x.t("clkout_phase_shift","string");
x.t("startup_wait","string");
x.t("startup_wait","dcm0");
x.t("generating","multiple");
x.t("uses","dcm");
x.t("uses","multiple");
x.t("uses","single");
x.t("uses","design");
x.t("uses","two");
x.t("handled","metastable-safe");
x.t("handled","using");
x.t("last","method");
x.t("outputs","clock");
x.t("outputs","dcm");
x.t("aspect","fpga");
x.t("transfers","pair");
x.t("transfers","well-defined");
x.t("transfers","technique");
x.t("pair","resides");
x.t("pair","xilinx");
x.t("pair","synthesize");
x.t("pair","shared");
x.t("pair","fifo");
x.t("implemented","hardware");
x.t("implemented","embedded");
x.t("implemented","using");
x.t("shows","design");
x.t("shows","two-domain");
x.t("hdl","wrapper");
x.t("hdl","file");
x.t("hdl","component");
x.t("hdl","top-level");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("provided","below");
x.t("provided","help");
x.t("highly","parallel");
x.t("support","clock");
x.t("support","designs");
x.t("physical","clock");
x.t("physical","connection");
x.t("errors","include");
x.t("necessary","cross");
x.t("necessary","ensure");
x.t("register","pair");
x.t("register","put");
x.t("register","gateway");
x.t("register","domain");
x.t("register","may");
x.t("register","used");
x.t("interface","implemented");
x.t("interface","multiple");
x.t("interface","first");
x.t("press","simulink");
x.t("press","generate");
x.t("leave","part");
x.t("look","top-level");
x.t("look","generated");
x.t("clkfx180","std_logic");
x.t("clarify","topics");
x.t("sample","rate");
x.t("sample","period");
x.t("sample","different");
x.t("sample","rates");
x.t("sample","output");
x.t("sample","per");
x.t("times","during");
x.t("times","faster");
x.t("best","single");
x.t("best","high-bandwidth");
x.t("circuitry","example");
x.t("circuitry","creating");
x.t("circuitry","instantiate");
x.t("circuitry","e.g");
x.t("complexities","involved");
x.t("resets","system");
x.t("unsafe","requires");
x.t("change","directory");
x.t("open","multiple");
x.t("open","scope");
x.t("open","two_async_clks.vhd");
x.t("open","system");
x.t("open","two_async_clks");
x.t("fact","two");
x.t("hierarchy","support");
x.t("hierarchy","partition");
x.t("hierarchy","used");
x.t("hierarchy","using");
x.t("external","hardware");
x.t("external","unit");
x.t("calculation","sample");
x.t("explicitly","clear");
x.t("reset","four-cycle");
x.t("reset","few");
x.t("reset","often");
x.t("sequential","data");
x.t("time","domain");
x.t("time","scale");
x.t("time","model");
x.t("left","excluding");
x.t("calls","netlister");
x.t("wired","respective");
x.t("wired","together");
x.t("hierarchical","construction");
x.t("hence","different");
x.t("buffered","outputs");
x.t("multiple","clock");
x.t("multiple","distinct");
x.t("multiple","domains");
x.t("multiple","cycle-true");
x.t("multiple","synchronous");
x.t("multiple","brams");
x.t("multiple","subsystem");
x.t("multiple","clocks");
x.t("multiple","asynchronous");
x.t("xilinx","multiple");
x.t("xilinx","dual-port");
x.t("xilinx","core");
x.t("xilinx","dual");
x.t("xilinx","shared");
x.t("xilinx","blockset");
x.t("xilinx","fifo");
x.t("however","system");
x.t("rate","highly");
x.t("rate","optimize");
x.t("rate","cycle");
x.t("rate","fir");
x.t("rate","creating");
x.t("rate","slow");
x.t("rate","fast");
x.t("rate","different");
x.t("rate","several");
x.t("rate","perhaps");
x.t("i.e","gated");
x.t("i.e","frequency");
x.t("whenever","necessary");
x.t("inside","multiple");
x.t("inside","ss_clk_domaina");
x.t("inside","ss_clk_domainb");
x.t("connection","shown");
x.t("connection","implicitly");
x.t("100mhz","simplify");
x.t("clkdv","std_logic");
x.t("clkdv","clkdvunbuf");
x.t("simulating","netlisting");
x.t("step-by-step","example");
x.t("listed","above");
x.t("gate","slower");
x.t("increases","power");
x.t("accurately","produce");
x.t("put","domain");
x.t("default","time");
x.t("default","directory");
x.t("automatically","included");
x.t("automatically","putting");
x.t("original","design");
x.t("text","editor");
x.t("text","two");
x.t("distinct","clock");
x.t("distinct","clocks");
x.t("advanced","clocking");
x.t("clocking","circuitry");
x.t("clocking","terminology");
x.t("clocking","systems");
x.t("clocking","strategies");
x.t("clocking","general");
x.t("single","clock");
x.t("single","hdl");
x.t("single","flop");
x.t("single","design");
x.t("single","system");
x.t("want","familiarize");
x.t("speaking","approach");
x.t("translate","design");
x.t("access","common");
x.t("start","button");
x.t("synthesis","clock");
x.t("synthesis","tool");
x.t("new","top-level");
x.t("low","attribute");
x.t("low","duty_cycle_correction");
x.t("--------------------------------------------------------------------","dcm");
x.t("--------------------------------------------------------------------","flop1");
x.t("discussions","following");
x.t("block","(middle)");
x.t("block","included");
x.t("block","resides");
x.t("block","components");
x.t("block","support");
x.t("block","calls");
x.t("block","step-by-step");
x.t("block","put");
x.t("block","configurations");
x.t("block","ram");
x.t("block","resulting");
x.t("block","produced");
x.t("block","wire");
x.t("block","may");
x.t("block","memory");
x.t("block","finished");
x.t("block","netlist");
x.t("block","generate");
x.t("block","diagram");
x.t("block","----------------------------------------------------------------------");
x.t("block","two");
x.t("block","used");
x.t("block","two_async_clks");
x.t("block","contains");
x.t("care","taken");
x.t("semaphores","multiple-bit");
x.t("semaphores","logic");
x.t("black-box","netlist");
x.t("command","window");
x.t("includes","clocking");
x.t("includes","two");
x.t("top","level");
x.t("configurations","look");
x.t("-------","top_wrapper.vhd");
x.t("clk90","std_logic");
x.t("clkin_period","string");
x.t("clkin_period","dcm0");
x.t("bufgs","dcm");
x.t("need","provide");
x.t("need","feed");
x.t("need","re-synchronize");
x.t("able","read");
x.t("able","simulate");
x.t("converter","running");
x.t("converter","(dac)");
x.t("interpolation","creates");
x.t("file","creates");
x.t("file","text");
x.t("file","invokes");
x.t("file","domain");
x.t("file","named");
x.t("file","using");
x.t("clicking","multiple");
x.t("clarity","provided");
x.t("status","std_ulogic_vector");
x.t("benefit","multiple");
x.t("parallel","implementation");
x.t("during","hardware");
x.t("during","calculation");
x.t("during","simulation");
x.t("optimize","hardware");
x.t("multiple-domain","design");
x.t("complete","multi-clock");
x.t("complete","worthwhile");
x.t("ss_clk_domaina_cw_clk","clk0buf");
x.t("ss_clk_domaina_cw_clk","std_logic");
x.t("presented","extended");
x.t("interfacing","different");
x.t("filter","needs");
x.t("filter","sample");
x.t("filter","filter");
x.t("filter","may");
x.t("filter","gets");
x.t("results","timing");
x.t("results","design's");
x.t("high-bandwidth","sequential");
x.t("domains","available");
x.t("domains","manner");
x.t("domains","refer");
x.t("domains","best");
x.t("domains","multiple");
x.t("domains","simulating");
x.t("domains","interfacing");
x.t("domains","employing");
x.t("domains","well-defined");
x.t("domains","logic");
x.t("domains","respectively");
x.t("domains","split");
x.t("domains","important");
x.t("domains","dealing");
x.t("domains","together");
x.t("domains","high-speed");
x.t("domains","tool");
x.t("domains","internally");
x.t("domains","sysgen");
x.t("domains","giving");
x.t("domains","system");
x.t("domains","using");
x.t("large","hardware");
x.t("large","memories");
x.t("units","fir");
x.t("15ns","i.e");
x.t("false","attribute");
x.t("wiring","multiple");
x.t("bridges","begin");
x.t("bridges","communicate");
x.t("processor","block");
x.t("processor","able");
x.t("cycle","create");
x.t("cycle","accuracy");
x.t("cycle","scenario");
x.t("requirements","employed");
x.t("constraints","synchronous");
x.t("constraints","information");
x.t("ram","care");
x.t("ram","true");
x.t("ram","core");
x.t("true","attribute");
x.t("true","dual-port");
x.t("true","clkdv_divide");
x.t("synchronously","domain");
x.t("requires","metastability-");
x.t("delivered","ngc");
x.t("via","shared");
x.t("directly","names");
x.t("clkfx_divide","clkfx_divide_generic");
x.t("clkfx_divide","string");
x.t("clkfx_divide","dcm0");
x.t("clkfx_divide","integer");
x.t("clk2x","clk2xunbuf");
x.t("clk2x","std_logic");
x.t("------------------------------------------------------------","sysgen");
x.t("------------------------------------------------------------","two_async_clks");
x.t("cycle-true","islands");
x.t("cycle-true","sense");
x.t("cycle-true","drives");
x.t("in-depth","topic");
x.t("common","address");
x.t("common","design");
x.t("common","application");
x.t("fir","filter");
x.t("symbols","perform");
x.t("creating","sample");
x.t("creating","top-level");
x.t("creating","multicycle");
x.t("slow","fir");
x.t("faster","sample");
x.t("realizations","advantages");
x.t("name","parameter");
x.t("name","shared");
x.t("name","therefore");
x.t("name","bram_iface");
x.t("flop","note");
x.t("demonstrates","xilinx");
x.t("box","double");
x.t("box","default");
x.t("box","ss_clk_domaina");
x.t("box","indicating");
x.t("suitable","target");
x.t("resulting","system");
x.t("connects","two");
x.t("clk2x180","std_logic");
x.t("enables","implement");
x.t("enables","derived");
x.t("enables","gate");
x.t("enables","inferred");
x.t("enables","_ce");
x.t("constructed","using");
x.t("gateway","register");
x.t("gateway","blocks");
x.t("gateway","shared");
x.t("to/from","register");
x.t("10ns","i.e");
x.t("ss_clk_domaina_cw.ngc","ss_clk_domainb_cw.ngc");
x.t("tasks","minimum");
x.t("translate_on","port");
x.t("synchronous","clock");
x.t("synchronous","single");
x.t("synchronous","logic");
x.t("synchronous","islands");
x.t("synchronous","system");
x.t("perform","interpolation");
x.t("perform","following");
x.t("consumption","may");
x.t("avoid","dealing");
x.t("accuracy","preserved");
x.t("construction","design");
x.t("buried","least");
x.t("component","dcm");
x.t("component","defines");
x.t("component","multiple");
x.t("component","component");
x.t("component","--------------------------------------");
x.t("component","logic");
x.t("component","verilog");
x.t("component","instantiate");
x.t("component","include");
x.t("component","bufg");
x.t("component","declaration");
x.t("component","exposes");
x.t("component","generate");
x.t("component","separate");
x.t("component","along");
x.t("component","called");
x.t("component","port");
x.t("component","following");
x.t("component","two_async_clks");
x.t("part","synthesis");
x.t("dual_port_block_memory_virtex2_6_1_ef64ec122427b7be.edn","core");
x.t("clkfx_multiply","string");
x.t("clkfx_multiply","clkfx_multiply_generic");
x.t("clkfx_multiply","dcm0");
x.t("clkfx_multiply","integer");
x.t("cycles","programming");
x.t("slower","circuitry");
x.t("provides","hardware");
x.t("provides","several");
x.t("multiple-bit","transfers");
x.t("illustrates","concept");
x.t("window","change");
x.t("window","save");
x.t("clkfx","------------------------------------------------------------");
x.t("clkfx","configured");
x.t("clkfx","std_logic");
x.t("clkfx","clk0");
x.t("clkfx","clkfxunbuf");
x.t("boolean","true");
x.t("standard","system");
x.t("transferring","data");
x.t("brams","register");
x.t("matlab","command");
x.t("matlab","window");
x.t("determine","output");
x.t("boxes","inside");
x.t("boxes","wires");
x.t("worthwhile","look");
x.t("instantiating","system");
x.t("generic","clkout_phase_shift");
x.t("generic","map");
x.t("clkfxbuf","--------------------------------------------------------------------");
x.t("clkfxbuf","std_logic");
x.t("clkfxbuf","dout_b");
x.t("partition","design");
x.t("partition","system");
x.t("fast","alternative");
x.t("away","block");
x.t("matched","pair");
x.t("writes","samples");
x.t("writes","memory");
x.t("writes","read");
x.t("address","happen");
x.t("address","space");
x.t("allows","shared");
x.t("respective","subsystem");
x.t("respective","subsystems");
x.t("wires","together");
x.t("produced","design");
x.t("decide","create");
x.t("map","dll_frequency_mode");
x.t("map","din_a");
x.t("map","ff1");
x.t("map","ff2");
x.t("map","ff3");
x.t("map","clk0unbuf");
x.t("map","supersedes");
x.t("map","clk");
x.t("map","clkfxunbuf");
x.t("map","clkin");
x.t("--------------------------------------","dcm");
x.t("--------------------------------------","component");
x.t("--------------------------------------","attribute");
x.t("--------------------------------------","sysgen");
x.t("allow","implement");
x.t("write","registers");
x.t("write","ram");
x.t("write","address");
x.t("local","clock");
x.t("precise","sample");
x.t("lines","clock");
x.t("lines","abstracted");
x.t("lines","main");
x.t("linked","name");
x.t("sets","system");
x.t("ss_clk_domaina","resides");
x.t("ss_clk_domaina","wired");
x.t("ss_clk_domaina","ss_clk_domainb");
x.t("ss_clk_domaina","samples");
x.t("ss_clk_domaina","subsystem");
x.t("wire","system");
x.t("wire","subsystems");
x.t("target","directory");
x.t("fields","once");
x.t("string","low");
x.t("string","attribute");
x.t("string","fixed");
x.t("employing","high-speed");
x.t("input","clock");
x.t("input","ss_clk_domainb");
x.t("input","connected");
x.t("input","sources");
x.t("input","subsystem");
x.t("input","symbol");
x.t("resource","fpga");
x.t("resource","requirements");
x.t("multiplies","sample-rate");
x.t("device","operating");
x.t("well-defined","handled");
x.t("well-defined","system");
x.t("problems","inferred");
x.t("three","block");
x.t("three","blocks");
x.t("width","synthesize");
x.t("width","depth");
x.t("flip-flops","1-bit");
x.t("concept","putting");
x.t("relative","design");
x.t("ss_clk_domainb","open");
x.t("ss_clk_domainb","blocks");
x.t("ss_clk_domainb","samples");
x.t("ss_clk_domainb","include");
x.t("ss_clk_domainb","subsystem");
x.t("ss_clk_domainb","note");
x.t("ss_clk_domainb","subsystems");
x.t("second","clock");
x.t("earlier","claimed");
x.t("ports","shown");
x.t("ports","multiple");
x.t("ports","named");
x.t("ports","subsystem");
x.t("ports","port");
x.t("interesting","things");
x.t("attribute","dll_frequency_mode");
x.t("attribute","startup_wait");
x.t("attribute","clkin_period");
x.t("attribute","clkfx_divide");
x.t("attribute","clkfx_multiply");
x.t("attribute","duty_cycle_correction");
x.t("attribute","clkdv_divide");
x.t("designs","clock");
x.t("designs","wiring");
x.t("designs","may");
x.t("designs","include");
x.t("designs","requiring");
x.t("designs","driven");
x.t("designs","system");
x.t("designs","crossing");
x.t("multiple-clock","design");
x.t("multiple-clock","sources");
x.t("techniques","continuing");
x.t("yourself","standard");
x.t("lastly","example");
x.t("island's","half");
x.t("signals","shown");
x.t("simplify","sample");
x.t("begin","dcm0");
x.t("begin","using");
x.t("store","netlist");
x.t("psincdec","std_logic");
x.t("psincdec","psen");
x.t("fds","port");
x.t("blocks","cross");
x.t("blocks","implemented");
x.t("blocks","xilinx");
x.t("blocks","inside");
x.t("blocks","access");
x.t("blocks","buried");
x.t("blocks","transferring");
x.t("blocks","linked");
x.t("blocks","may");
x.t("blocks","subsystem");
x.t("blocks","moved");
x.t("blocks","two");
x.t("blocks","used");
x.t("blocks","system");
x.t("blocks","distributed");
x.t("blocks","safest");
x.t("blocks","specify");
x.t("logic","create");
x.t("logic","required");
x.t("logic","ensure");
x.t("logic","e.g");
x.t("logic","using");
x.t("logic","associated");
x.t("metastable-safe","blocks");
x.t("choosing","subsystem");
x.t("notice","port");
x.t("notice","clk_a");
x.t("frequency","66.7");
x.t("frequency","100mhz");
x.t("frequency","input");
x.t("frequency","phase");
x.t("display","message");
x.t("ss_clk_domainb_cw_clk","clkfxbuf");
x.t("ss_clk_domainb_cw_clk","std_logic");
x.t("configured","twice");
x.t("intermediate","sample");
x.t("intermediate","amount");
x.t("drawback","technique");
x.t("island","ss_clk_domaina");
x.t("island","model");
x.t("island","faithful");
x.t("island","filled");
x.t("involved","asynchronous");
x.t("mapped","across");
x.t("period","clock");
x.t("period","15ns");
x.t("period","10ns");
x.t("period","value");
x.t("period","gives");
x.t("period","values");
x.t("invokes","xilinx");
x.t("respectively","blocks");
x.t("downto","din_b");
x.t("downto","dout_a");
x.t("downto","dout_b");
x.t("downto","ss_clk_domaina_cw_ce");
x.t("downto","end");
x.t("hold","dcm");
x.t("unit","example");
x.t("unit","need");
x.t("unit","filter");
x.t("domain","partitioning");
x.t("domain","possible");
x.t("domain","right");
x.t("domain","register");
x.t("domain","left");
x.t("domain","ram");
x.t("domain","bridges");
x.t("domain","writes");
x.t("domain","ss_clk_domaina");
x.t("domain","ss_clk_domainb");
x.t("domain","blocks");
x.t("domain","written");
x.t("domain","may");
x.t("domain","grouped");
x.t("domain","subsystem");
x.t("domain","read");
x.t("domain","good");
x.t("domain","high-speed");
x.t("domain","asynchronous");
x.t("domain","note");
x.t("domain","sample-rate");
x.t("domain","reading");
x.t("means","dcm");
x.t("means","semaphores");
x.t("non-clock","lines");
x.t("latches","latches");
x.t("latches","generated");
x.t("split","matched");
x.t("top-level","wrapper");
x.t("top-level","hdl");
x.t("top-level","block");
x.t("top-level","component");
x.t("top-level","ports");
x.t("top-level","vhdl");
x.t("top-level","port");
x.t("top-level","two_async_clks");
x.t("space","during");
x.t("space","two");
x.t("button","may");
x.t("button","simulate");
x.t("clearly","two");
x.t("allowed","treating");
x.t("first","component");
x.t("minimum","instantiate");
x.t("fixed","dll_frequency_mode");
x.t("clk2xunbuf","clkfx");
x.t("clk2xunbuf","std_logic");
x.t("number","clock");
x.t("broadly","speaking");
x.t("communicate","clock");
x.t("communicate","via");
x.t("communicate","islands");
x.t("processing","clock");
x.t("processing","preferable");
x.t("processing","unit");
x.t("written","register");
x.t("written","fifo");
x.t("zoom","detailed");
x.t("unisim","ieee.std_logic_1164.all");
x.t("design","included");
x.t("design","example");
x.t("design","dcm");
x.t("design","hardware");
x.t("design","visualize");
x.t("design","partitioned");
x.t("design","uses");
x.t("design","errors");
x.t("design","open");
x.t("design","hierarchy");
x.t("design","multiple");
x.t("design","includes");
x.t("design","perform");
x.t("design","matlab");
x.t("design","width");
x.t("design","blocks");
x.t("design","top-level");
x.t("design","scope");
x.t("design","environment");
x.t("design","least");
x.t("design","several");
x.t("design","netlisted");
x.t("design","diagram");
x.t("design","along");
x.t("design","practice");
x.t("design","----------------------------------------------------------------------");
x.t("design","called");
x.t("design","two");
x.t("design","system");
x.t("design","corresponding");
x.t("design","using");
x.t("design","portions");
x.t("continuing","example");
x.t("approach","clock");
x.t("approach","following");
x.t("technique","increases");
x.t("technique","used");
x.t("clears","asynchronous");
x.t("/sysgen/examples/multiple_clocks/","open");
x.t("sinusoid","input");
x.t("normalizing","clock");
x.t("indicating","generation");
x.t("namely","clk0");
x.t("signal","clkfxbuf");
x.t("signal","clk2xunbuf");
x.t("signal","clk0buf");
x.t("signal","ff1");
x.t("signal","clk0unbuf");
x.t("signal","clkfxunbuf");
x.t("signal","clkdvunbuf");
x.t("signal","dcm_rst");
x.t("signal","intlock");
x.t("signal","clkdvbuf");
x.t("may","possible");
x.t("may","leave");
x.t("may","want");
x.t("may","need");
x.t("may","write");
x.t("may","employ");
x.t("may","reused");
x.t("may","variable");
x.t("may","valid");
x.t("may","read");
x.t("may","data");
x.t("may","used");
x.t("may","difficult");
x.t("may","modify");
x.t("may","clocked");
x.t("combination","distinct");
x.t("different","clock");
x.t("different","input");
x.t("different","domain");
x.t("different","frequencies");
x.t("different","simulink");
x.t("different","periods");
x.t("different","pieces");
x.t("different","clocks");
x.t("different","system");
x.t("recovery","unit");
x.t("notion","bit");
x.t("software","simulations");
x.t("share","address");
x.t("reads","samples");
x.t("ss_clk_domainb_cw.ngc","files");
x.t("editor","component");
x.t("din_a","din_a");
x.t("din_a","dout_a");
x.t("din_a","din_b");
x.t("din_a","std_logic_vector");
x.t("deletions","made");
x.t("clk0buf","std_logic");
x.t("clk0buf","dssen");
x.t("clk0buf","bufg_clkfx");
x.t("clk0buf","ss_clk_domainb_cw_ce");
x.t("clkfx_multiply_generic","clkfx_divide");
x.t("interpolating","fir");
x.t("scenario","takes");
x.t("detailed","view");
x.t("verilog","module");
x.t("language","fields");
x.t("din_b","din_b");
x.t("din_b","ss_clk_domaina_cw_ce");
x.t("din_b","std_logic_vector");
x.t("std_logic","clkfb");
x.t("std_logic","locked");
x.t("std_logic","clkfx180");
x.t("std_logic","clkdv");
x.t("std_logic","clk90");
x.t("std_logic","status");
x.t("std_logic","ss_clk_domaina_cw_clk");
x.t("std_logic","clk2x");
x.t("std_logic","clk2x180");
x.t("std_logic","clkfx");
x.t("std_logic","psincdec");
x.t("std_logic","ss_clk_domainb_cw_clk");
x.t("std_logic","signal");
x.t("std_logic","din_a");
x.t("std_logic","dout_a");
x.t("std_logic","std_logic");
x.t("std_logic","end");
x.t("std_logic","psclk");
x.t("std_logic","psdone");
x.t("std_logic","clk0");
x.t("std_logic","dssen");
x.t("std_logic","clk270");
x.t("std_logic","ss_clk_domainb_cw_ce");
x.t("std_logic","psen");
x.t("std_logic","----------------------------------------------------------------------");
x.t("std_logic","rst");
x.t("std_logic","clk180");
x.t("dout_a","appear");
x.t("dout_a","taken");
x.t("dout_a","std_logic_vector");
x.t("twice","frequency");
x.t("duty_cycle_correction","boolean");
x.t("duty_cycle_correction","string");
x.t("duty_cycle_correction","dcm0");
x.t("clkdv_divide_generic","clkfx_multiply");
x.t("samples","input");
x.t("samples","island's");
x.t("samples","sinusoid");
x.t("samples","saw-tooth");
x.t("samples","fed");
x.t("samples","opposite");
x.t("abstracted","away");
x.t("directory","inside");
x.t("directory","ss_clk_domaina_cw.ngc");
x.t("directory","choosing");
x.t("directory","netlist");
x.t("directory","dual");
x.t("directory","following");
x.t("dout_b","dout_b");
x.t("dout_b","end");
x.t("dout_b","std_logic_vector");
x.t("things","notice");
x.t("---------","library");
x.t("---------","top");
x.t("---------","begin");
x.t("ff1","ff2");
x.t("ff1","clk");
x.t("ff1","flop2");
x.t("employ","combination");
x.t("important","aspect");
x.t("important","application");
x.t("grouped","together");
x.t("necessarily","cycle-true");
x.t("works","refer");
x.t("scope","visualize");
x.t("scope","clearly");
x.t("scope","two");
x.t("individually","ngc");
x.t("vhdl","synthesis");
x.t("vhdl","component");
x.t("vhdl","top-level");
x.t("ff2","ff3");
x.t("ff2","clk");
x.t("ff2","flop3");
x.t("enable","logic");
x.t("enable","result");
x.t("end","structural");
x.t("end","top_wrapper");
x.t("end","component");
x.t("end","model");
x.t("end","two_async_clks");
x.t("reduces","risk");
x.t("halves","connection");
x.t("halves","shared");
x.t("wave","input");
x.t("model's","behavior");
x.t("mhz","defined");
x.t("ss_clk_domaina_cw_ce","ss_clk_domaina_cw_clk");
x.t("ss_clk_domaina_cw_ce","std_logic");
x.t("ff3","ff4");
x.t("ff3","clk");
x.t("ff3","flop4");
x.t("connected","clkfx");
x.t("connected","clk0");
x.t("feed","data");
x.t("multiplier-accumulator","units");
x.t("reused","several");
x.t("dealing","different");
x.t("dealing","asynchronous");
x.t("level","wrapper");
x.t("level","hierarchy");
x.t("level","consider");
x.t("level","system");
x.t("level","instantiates");
x.t("often","results");
x.t("design's","target");
x.t("instantiate","clocking");
x.t("instantiate","top-level");
x.t("instantiate","system");
x.t("instantiate","entity");
x.t("ff4","------------------------------------------------------------");
x.t("ff4","std_logic");
x.t("ff4","dcm_rst");
x.t("memory","interfaces");
x.t("memory","library");
x.t("memory","once");
x.t("memory","implemented");
x.t("memory","register");
x.t("memory","interface");
x.t("memory","block");
x.t("memory","name");
x.t("memory","blocks");
x.t("memory","reads");
x.t("memory","halves");
x.t("memory","core");
x.t("memory","location");
x.t("memory","cores");
x.t("memory","based");
x.t("memory","fifo");
x.t("memory","object");
x.t("environment","topic");
x.t("extended","system");
x.t("familiarize","yourself");
x.t("least","time");
x.t("least","level");
x.t("least","amount");
x.t("operating","highest");
x.t("domain-crossing","blocks");
x.t("message","box");
x.t("appear","top-level");
x.t("previous","topic");
x.t("given","gateway");
x.t("psclk","std_logic");
x.t("psclk","rst");
x.t("psdone","std_logic");
x.t("together","single");
x.t("together","translated");
x.t("together","simulink");
x.t("together","using");
x.t("embedded","xilinx");
x.t("ensure","clock");
x.t("ensure","large");
x.t("ensure","two");
x.t("variable","width");
x.t("translated","hardware");
x.t("saw-tooth","wave");
x.t("effectively","defined");
x.t("finished","running");
x.t("e.g","dcm");
x.t("e.g","ss_clk_domaina");
x.t("e.g","din_a");
x.t("clk0","dcm");
x.t("clk0","clkfx");
x.t("clk0","frequency");
x.t("clk0","std_logic");
x.t("clk0","clk0unbuf");
x.t("frequencies","two");
x.t("symbol-rate","clock");
x.t("taken","directly");
x.t("taken","means");
x.t("netlist","files");
x.t("netlist","press");
x.t("netlist","file");
x.t("netlist","complete");
x.t("netlist","delivered");
x.t("netlist","constraints");
x.t("netlist","directory");
x.t("netlist","two");
x.t("netlist","subsystems");
x.t("consider","subsystem");
x.t("consider","clocks");
x.t("yield","different");
x.t("pick","suitable");
x.t("made","clarity");
x.t("architecture","structural");
x.t("sources","multi-clock");
x.t("sources","complexities");
x.t("sources","multiple");
x.t("sources","constructed");
x.t("sources","island");
x.t("sources","broadly");
x.t("sources","may");
x.t("dac","sample");
x.t("amount","hardware");
x.t("instances","may");
x.t("specifically","design");
x.t("simulink","start");
x.t("simulink","able");
x.t("simulink","subsystem");
x.t("simulink","system");
x.t("simulink","behavior");
x.t("include","clock");
x.t("include","gated");
x.t("include","circuitry");
x.t("include","logic");
x.t("include","edk");
x.t("dual-port","block");
x.t("dual-port","domain");
x.t("bufg","port");
x.t("translate_off","generic");
x.t("generator's","shared");
x.t("netlisting","multiple");
x.t("similar","techniques");
x.t("terminology","implementation");
x.t("running","precise");
x.t("running","display");
x.t("(dac)","clocked");
x.t("usage","general");
x.t("power","consumption");
x.t("core","provides");
x.t("core","ensure");
x.t("core","netlist");
x.t("core","generator");
x.t("core","information");
x.t("core","two");
x.t("core","using");
x.t("core","fifo");
x.t("1-bit","to/from");
x.t("named","dual_port_block_memory_virtex2_6_1_ef64ec122427b7be.edn");
x.t("named","ss_clk_domaina");
x.t("named","subsystems");
x.t("value","sec");
x.t("main","clock");
x.t("dssen","psincdec");
x.t("dssen","std_logic");
x.t("islands","example");
x.t("islands","abstraction");
x.t("islands","once");
x.t("islands","sample");
x.t("islands","xilinx");
x.t("islands","distinct");
x.t("islands","cycle-true");
x.t("islands","lastly");
x.t("islands","necessarily");
x.t("islands","end");
x.t("islands","asynchronous");
x.t("implementation","methodologies");
x.t("implementation","large");
x.t("implementation","shared");
x.t("several","times");
x.t("several","interesting");
x.t("several","blocks");
x.t("several","rates");
x.t("several","subsystems");
x.t("synthesize","single");
x.t("synthesize","flip-flops");
x.t("periods","respective");
x.t("periods","allowed");
x.t("periods","yield");
x.t("periods","phase");
x.t("gives","simulink");
x.t("declaration","--------------------------------------");
x.t("clk0unbuf","clk2x");
x.t("clk0unbuf","clk0buf");
x.t("clk0unbuf","std_logic");
x.t("frequency_mode","clkdv_divide");
x.t("generator","token");
x.t("generator","implement");
x.t("generator","generating");
x.t("generator","uses");
x.t("generator","dialog");
x.t("generator","accurately");
x.t("generator","clocking");
x.t("generator","discussions");
x.t("generator","block");
x.t("generator","domains");
x.t("generator","synchronous");
x.t("generator","component");
x.t("generator","designs");
x.t("generator","top-level");
x.t("generator","design");
x.t("generator","reduces");
x.t("generator","simulink");
x.t("generator","core");
x.t("generator","inferred");
x.t("generator","shared");
x.t("generator","model");
x.t("generator","following");
x.t("generator","translates");
x.t("generator","produce");
x.t("subsystem","defines");
x.t("subsystem","fpga");
x.t("subsystem","ngc");
x.t("subsystem","necessary");
x.t("subsystem","hierarchy");
x.t("subsystem","multiple-domain");
x.t("subsystem","writes");
x.t("subsystem","individually");
x.t("subsystem","e.g");
x.t("subsystem","netlist");
x.t("subsystem","generator");
x.t("subsystem","operate");
x.t("subsystem","system");
x.t("subsystem","names");
x.t("subsystem","subsystems");
x.t("subsystem","completely");
x.t("rates","example");
x.t("rates","sample");
x.t("rates","may");
x.t("perhaps","means");
x.t("generated","automatically");
x.t("generated","results");
x.t("generated","island");
x.t("generated","system");
x.t("generated","using");
x.t("inferred","during");
x.t("inferred","latches");
x.t("inferred","port");
x.t("inferred","names");
x.t("putting","suffixes");
x.t("putting","domain-crossing");
x.t("temporary","directory");
x.t("view","notice");
x.t("claimed","system");
x.t("exposes","two");
x.t("generate","circuitry");
x.t("generate","multiple");
x.t("generate","button");
x.t("generate","two");
x.t("supersedes","system");
x.t("making","top-level");
x.t("clk270","std_logic");
x.t("bufg_clkfx","bufg");
x.t("programming","--------------------------------------------------------------------");
x.t("although","example");
x.t("although","system");
x.t("read","synchronously");
x.t("read","write");
x.t("read","may");
x.t("read","two");
x.t("takes","intermediate");
x.t("systems","result");
x.t("simulations","hardware");
x.t("valid","shared");
x.t("netlisted","system");
x.t("ss_clk_domainb_cw_ce","ss_clk_domainb_cw_clk");
x.t("ss_clk_domainb_cw_ce","std_logic");
x.t("dcm0","label");
x.t("dcm0","dcm");
x.t("help","clarify");
x.t("pieces","external");
x.t("clock/data","recovery");
x.t("output","hence");
x.t("output","signals");
x.t("output","samples");
x.t("output","scope");
x.t("output","requiring");
x.t("output","created");
x.t("good","fpga");
x.t("separate","wrapper");
x.t("separate","domains");
x.t("separate","system");
x.t("diagram","below");
x.t("diagram","cross-domain");
x.t("diagram","physical");
x.t("location","time");
x.t("black","boxes");
x.t("depth","memory");
x.t("bold","text");
x.t("along","dcm");
x.t("along","wrapper");
x.t("information","works");
x.t("information","corresponding");
x.t("information","covered");
x.t("data","transfers");
x.t("data","external");
x.t("data","local");
x.t("data","read");
x.t("data","clock/data");
x.t("data","across");
x.t("data","digital-to-analog");
x.t("data","inputs");
x.t("high-speed","clock");
x.t("high-speed","processing");
x.t("tool","hardware");
x.t("tool","provides");
x.t("dual","port");
x.t("ise_design_suite_tree","/sysgen/examples/multiple_clocks/");
x.t("internally","synchronous");
x.t("treating","subsystems");
x.t("module","instantiates");
x.t("clk","clkfb");
x.t("clk","std_logic");
x.t("clk","ff1");
x.t("clk","ff2");
x.t("clk","ff3");
x.t("clk","ff4");
x.t("psen","std_logic");
x.t("psen","psclk");
x.t("clocks","clock");
x.t("clocks","possible");
x.t("clocks","hardware");
x.t("clocks","required");
x.t("clocks","derived");
x.t("clocks","generating");
x.t("clocks","different");
x.t("clocks","consider");
x.t("clocks","inferred");
x.t("clocks","although");
x.t("clocks","clocks");
x.t("clocks","defined");
x.t("clocks","asynchronous");
x.t("clocks","system");
x.t("clocks","used");
x.t("clocks","using");
x.t("clocks","clk_a");
x.t("clocks","concepts");
x.t("shared","memory");
x.t("shared","memories");
x.t("multirate","design");
x.t("fed","dac");
x.t("fed","digital-to-analog");
x.t("employed","sample");
x.t("practice","resource");
x.t("result","separate");
x.t("result","discrepancies");
x.t("bit","cycle");
x.t("two-domain","design");
x.t("save","temporary");
x.t("defined","fact");
x.t("defined","normalizing");
x.t("defined","two");
x.t("defined","system");
x.t("moved","respective");
x.t("opposite","halves");
x.t("probes","ss_clk_domaina");
x.t("two_async_clks.vhd","file");
x.t("----------------------------------------------------------------------","-------");
x.t("----------------------------------------------------------------------","---------");
x.t("std_ulogic_vector","downto");
x.t("asynchronous","clock");
x.t("asynchronous","resets");
x.t("asynchronous","reset");
x.t("asynchronous","clocking");
x.t("asynchronous","relative");
x.t("asynchronous","clears");
x.t("asynchronous","islands");
x.t("asynchronous","data");
x.t("asynchronous","clocks");
x.t("application","multiple");
x.t("re-synchronize","data");
x.t("highest","possible");
x.t("case","synchronous");
x.t("case","vhdl");
x.t("generation","possible");
x.t("generation","complete");
x.t("easiest-to-use","three");
x.t("implicitly","defined");
x.t("scale","difficult");
x.t("answer","hierarchical");
x.t("values","model");
x.t("values","used");
x.t("cores","clock");
x.t("clkfxunbuf","clkdv");
x.t("clkfxunbuf","clkfxbuf");
x.t("clkfxunbuf","std_logic");
x.t("above","generated");
x.t("above","although");
x.t("risk","users");
x.t("port","interface");
x.t("port","block");
x.t("port","map");
x.t("port","din_a");
x.t("port","std_logic");
x.t("port","memory");
x.t("port","clk");
x.t("port","mapping");
x.t("port","names");
x.t("port","clkin");
x.t("reducing","synchronization");
x.t("phase","earlier");
x.t("phase","input");
x.t("called","top_wrapper");
x.t("called","two_async_clks");
x.t("_clk","suffixes");
x.t("sysgen","block");
x.t("sysgen","component");
x.t("sysgen","design");
x.t("sysgen","model");
x.t("rst","std_logic");
x.t("rst","dcm_rst");
x.t("bufg_clk0","bufg");
x.t("topics","listed");
x.t("topics","applications");
x.t("two","clock");
x.t("two","ngc");
x.t("two","buffered");
x.t("two","bufgs");
x.t("two","synchronous");
x.t("two","writes");
x.t("two","blocks");
x.t("two","zoom");
x.t("two","different");
x.t("two","clocks");
x.t("two","shared");
x.t("two","subsystems");
x.t("requiring","number");
x.t("requiring","least");
x.t("sense","hardware");
x.t("manifold","physical");
x.t("users","perpetrate");
x.t("note","ngc");
x.t("note","wrapper");
x.t("note","multiple");
x.t("note","top-level");
x.t("note","diagram");
x.t("note","crossing");
x.t("std_logic_vector","downto");
x.t("integer","clkfx_divide");
x.t("integer","synopsys");
x.t("strategies","completely");
x.t("applications","benefit");
x.t("applications","common");
x.t("multicycle","paths");
x.t("sec","ss_clk_domainb");
x.t("sec","two");
x.t("based","values");
x.t("driven","single");
x.t("driven","distinct");
x.t("driven","multiple-clock");
x.t("driven","different");
x.t("call","subsystems");
x.t("operate","clock");
x.t("operate","second");
x.t("operate","different");
x.t("preserved","within");
x.t("perpetrate","common");
x.t("giving","ss_clk_domaina");
x.t("created","example");
x.t("synopsys","translate_on");
x.t("synopsys","translate_off");
x.t("clkdv_divide","string");
x.t("clkdv_divide","clkdv_divide_generic");
x.t("clkdv_divide","dcm0");
x.t("clkdv_divide","real");
x.t("real","clkfx_multiply");
x.t("clkdvunbuf","locked");
x.t("clkdvunbuf","std_logic");
x.t("dcm_rst","std_logic");
x.t("dcm_rst","ff2");
x.t("dcm_rst","clk0");
x.t("intlock","std_logic");
x.t("intlock","bufg_clk0");
x.t("mapping","clock");
x.t("system","clock");
x.t("system","period");
x.t("system","generator's");
x.t("system","periods");
x.t("system","generator");
x.t("system","clocks");
x.t("following","example");
x.t("following","divide");
x.t("following","creates");
x.t("following","tasks");
x.t("following","ise_design_suite_tree");
x.t("following","topics");
x.t("model","clock");
x.t("model","component");
x.t("model","matlab");
x.t("model","notion");
x.t("model","effectively");
x.t("model","pick");
x.t("model","two");
x.t("model","entity");
x.t("model","containing");
x.t("used","example");
x.t("used","hardware");
x.t("used","drive");
x.t("used","cross");
x.t("used","whenever");
x.t("used","original");
x.t("used","translate");
x.t("used","bridges");
x.t("used","partition");
x.t("used","intermediate");
x.t("used","hold");
x.t("used","communicate");
x.t("used","netlist");
x.t("used","shared");
x.t("individual","synchronous");
x.t("simulation","note");
x.t("translates","design");
x.t("corresponding","clock");
x.t("corresponding","subsystems");
x.t("entity","top_wrapper");
x.t("entity","two_async_clks");
x.t("using","clock");
x.t("using","pair");
x.t("using","hierarchy");
x.t("using","xilinx");
x.t("using","multiple");
x.t("using","similar");
x.t("using","shared");
x.t("using","asynchronous");
x.t("using","system");
x.t("using","ideal");
x.t("using","fifo");
x.t("using","subsystems");
x.t("general","best");
x.t("general","system");
x.t("portions","handled");
x.t("symbol","rate");
x.t("symbol","output");
x.t("symbol","data");
x.t("difficult","route");
x.t("difficult","distinguish");
x.t("containing","synchronous");
x.t("connect","non-clock");
x.t("unisim.vcomponents.all","entity");
x.t("flop1","fds");
x.t("i/o","registers");
x.t("alternative","approach");
x.t("per","cycle");
x.t("per","design");
x.t("sample-rate","clock");
x.t("route","high-speed");
x.t("faithful","simulink");
x.t("ideal","clock");
x.t("blockset","domains");
x.t("across","clock");
x.t("across","multiple");
x.t("excluding","fifo");
x.t("instantiates","three");
x.t("instantiates","subsystem");
x.t("instantiates","sysgen");
x.t("two_async_clks","top-level");
x.t("two_async_clks","deletions");
x.t("two_async_clks","several");
x.t("two_async_clks","port");
x.t("two_async_clks","two");
x.t("two_async_clks","model");
x.t("two_async_clks","two_async_clks");
x.t("distributed","block");
x.t("_ce","_clk");
x.t("clk180","std_logic");
x.t("flop2","port");
x.t("covered","in-depth");
x.t("paths","drawback");
x.t("associated","clock");
x.t("associated","distinct");
x.t("associated","subsystem");
x.t("behavior","press");
x.t("behavior","island");
x.t("simulate","design");
x.t("crossing","clock");
x.t("crossing","domains");
x.t("fifo","implemented");
x.t("fifo","put");
x.t("fifo","block");
x.t("fifo","gateway");
x.t("fifo","blocks");
x.t("fifo","generator");
x.t("member","pair");
x.t("flops","semaphores");
x.t("edk","processor");
x.t("therefore","share");
x.t("merged","block");
x.t("filled","half");
x.t("driver","components");
x.t("modify","top-level");
x.t("names","dout_a");
x.t("names","given");
x.t("names","clocks");
x.t("flop3","port");
x.t("memories","efficiently");
x.t("memories","cross");
x.t("digital-to-analog","converter");
x.t("clocked","sample");
x.t("clocked","rate");
x.t("clocked","several");
x.t("clocked","symbol");
x.t("drives","islands");
x.t("discrepancies","software");
x.t("bram_iface","allows");
x.t("clkin","std_logic");
x.t("clkin","clk");
x.t("clkdvbuf","std_logic");
x.t("flop4","port");
x.t("completely","within");
x.t("completely","separate");
x.t("subsystems","example");
x.t("subsystems","derived");
x.t("subsystems","open");
x.t("subsystems","wired");
x.t("subsystems","determine");
x.t("subsystems","ss_clk_domaina");
x.t("subsystems","different");
x.t("subsystems","together");
x.t("subsystems","simulink");
x.t("subsystems","named");
x.t("subsystems","separate");
x.t("subsystems","asynchronous");
x.t("subsystems","case");
x.t("subsystems","manifold");
x.t("subsystems","driven");
x.t("subsystems","system");
x.t("subsystems","merged");
x.t("subsystems","comprise");
x.t("produce","timing");
x.t("produce","core");
x.t("safest","easiest-to-use");
x.t("reading","data");
x.t("comprise","clock");
x.t("netlister","create");
x.t("clk_a","clk_b");
x.t("generates","subsystem");
x.t("generates","two");
x.t("shift","register");
x.t("concepts","presented");
x.t("gets","symbol");
x.t("inputs","outputs");
x.t("inputs","i.e");
x.t("inputs","system");
x.t("object","name");
x.t("object","member");
x.t("contains","multiple");
x.t("specify","shared");
x.t("clk_b","default");
x.t("clk_b","different");
x.t("distinguish","two");
x.t("top_wrapper.vhd","example");
x.t("attributes","--------------------------------------");
}
