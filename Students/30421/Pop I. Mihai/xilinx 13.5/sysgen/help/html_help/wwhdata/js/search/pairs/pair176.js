function FileData_Pairs(x)
{
x.t("precision","input");
x.t("equal","size");
x.t("equal","number");
x.t("double-clicking","icon");
x.t("modes","explained");
x.t("possible","implementations");
x.t("below","based");
x.t("provide","valid");
x.t("parameter","dialog");
x.t("pattern","entered");
x.t("pattern","matlab");
x.t("pattern","specifies");
x.t("pattern","optional");
x.t("pattern","establishes");
x.t("every","input");
x.t("divide","size");
x.t("always","equal");
x.t("topic","common");
x.t("outputs","slower");
x.t("outputs","ranging");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("interface","block");
x.t("mode","best");
x.t("mode","behaviors");
x.t("illustrated","help");
x.t("icon","simulink");
x.t("state","output");
x.t("basic","elements");
x.t("type","precision");
x.t("type","bool");
x.t("best","illustrated");
x.t("time","division");
x.t("(vout)","valid");
x.t("vector","containing");
x.t("xilinx","time");
x.t("xilinx","blockset");
x.t("multiple","outputs");
x.t("multiple","channel");
x.t("multiple","output");
x.t("rate","multiple");
x.t("rate","single");
x.t("rate","block");
x.t("down","sampling");
x.t("division","demultiplexer");
x.t("listed","following");
x.t("channel","mode");
x.t("channel","rate");
x.t("channel","single");
x.t("channel","implementation");
x.t("channel","behavior");
x.t("single","multiple");
x.t("single","channel");
x.t("block","parameter");
x.t("block","interface");
x.t("block","multiple");
x.t("block","listed");
x.t("block","single");
x.t("block","frame");
x.t("block","accepts");
x.t("block","parameters");
x.t("block","explained");
x.t("block","data");
x.t("block","optional");
x.t("block","two");
x.t("frame","every");
x.t("frame","frame");
x.t("frame","vout");
x.t("frame","sampled");
x.t("frame","evenly");
x.t("frame","sampling");
x.t("frame","value");
x.t("frame","position");
x.t("size","input");
x.t("size","serial");
x.t("indicates","input");
x.t("invoked","double-clicking");
x.t("presented","output");
x.t("presented","corresponding");
x.t("vout","vin");
x.t("vout","port");
x.t("accepts","input");
x.t("demultiplexer","time");
x.t("demultiplexer","xilinx");
x.t("demultiplexer","block");
x.t("demultiplexer","optional");
x.t("demultiplexer","behavior");
x.t("libraries","basic");
x.t("box","invoked");
x.t("common","options");
x.t("(vin)","output-valid");
x.t("sampled","presented");
x.t("sampled","data");
x.t("entered","first");
x.t("qualify","every");
x.t("part","serial");
x.t("slower","rate");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("implementations","single");
x.t("matlab","vector");
x.t("output-valid","port");
x.t("explained","topic");
x.t("explained","above");
x.t("allows","qualify");
x.t("input","frame");
x.t("input","value");
x.t("input","output");
x.t("input","data");
x.t("input","values");
x.t("input","serially");
x.t("input","port");
x.t("ports","equal");
x.t("ports","type");
x.t("ports","allowed");
x.t("ports","vin");
x.t("ports","valid");
x.t("ports","arithmetic");
x.t("second","input");
x.t("input-valid","port");
x.t("selected","demultiplexer");
x.t("behaviors","modes");
x.t("allowed","length");
x.t("first","second");
x.t("serial","input");
x.t("options","block");
x.t("number","frame");
x.t("number","correspond");
x.t("number","data");
x.t("number","values");
x.t("vin","vout");
x.t("vin","port");
x.t("length","frame");
x.t("length","input");
x.t("evenly","divide");
x.t("specifies","size");
x.t("specifies","demultiplexer");
x.t("index","xilinx");
x.t("presents","multiple");
x.t("marks","state");
x.t("correspond","downsampling");
x.t("bool","block");
x.t("sampling","pattern");
x.t("sampling","factor");
x.t("qualified","using");
x.t("simulink","model");
x.t("value","part");
x.t("value","qualified");
x.t("value","downsampled");
x.t("implementation","time");
x.t("implementation","multiple");
x.t("implementation","down");
x.t("implementation","single");
x.t("implementation","number");
x.t("implementation","specifies");
x.t("figure","below");
x.t("specific","block");
x.t("valid","parameters");
x.t("valid","ports");
x.t("valid","input");
x.t("valid","port");
x.t("output","rate");
x.t("output","channel");
x.t("output","ports");
x.t("output","valid");
x.t("output","data");
x.t("output","port");
x.t("help","figure");
x.t("data","outputs");
x.t("data","channel");
x.t("data","frame");
x.t("data","input");
x.t("data","value");
x.t("data","valid");
x.t("data","output");
x.t("data","port");
x.t("optional","input");
x.t("optional","input-valid");
x.t("optional","valid");
x.t("optional","data");
x.t("downsampled","presented");
x.t("downsampled","number");
x.t("values","every");
x.t("values","sampled");
x.t("serially","presents");
x.t("port","time");
x.t("port","(vout)");
x.t("port","multiple");
x.t("port","block");
x.t("port","(vin)");
x.t("port","allows");
x.t("port","selected");
x.t("port","marks");
x.t("port","optional");
x.t("port","user-configurable");
x.t("above","provide");
x.t("two","possible");
x.t("downsampling","factor");
x.t("factor","always");
x.t("factor","behavior");
x.t("based","frame");
x.t("following","xilinx");
x.t("elements","index");
x.t("user-configurable","number");
x.t("corresponding","output");
x.t("model","parameters");
x.t("either","single");
x.t("used","block");
x.t("arithmetic","type");
x.t("using","optional");
x.t("containing","implementation");
x.t("blockset","time");
x.t("blockset","libraries");
x.t("behavior","demultiplexer");
x.t("behavior","either");
x.t("position","indicates");
x.t("ranging","data");
x.t("establishes","length");
}
