function FileData_Pairs(x)
{
x.t("passed","hardware");
x.t("double-clicking","icon");
x.t("clock","source");
x.t("clock","mode");
x.t("clock","programmed");
x.t("clock","cycle");
x.t("clock","allows");
x.t("clock","frequency");
x.t("clock","sources");
x.t("clock","case");
x.t("interfaces","combinational");
x.t("library","created");
x.t("stepped","clock");
x.t("stepped","free");
x.t("available","programmable");
x.t("below","mhz");
x.t("parameter","automatically");
x.t("parameter","location");
x.t("hardware","co-simulation");
x.t("hardware","block");
x.t("hardware","during");
x.t("hardware","instead");
x.t("hardware","drives");
x.t("fpga","configuration");
x.t("fpga","implementation");
x.t("co-simulation","hardware");
x.t("co-simulation","fpga");
x.t("co-simulation","xtremedsp");
x.t("co-simulation","xilinx");
x.t("co-simulation","block's");
x.t("co-simulation","default");
x.t("co-simulation","new");
x.t("co-simulation","block");
x.t("co-simulation","during");
x.t("installed","bus");
x.t("source","ensures");
x.t("source","may");
x.t("ensures","behavior");
x.t("xtremedsp","hardware");
x.t("xtremedsp","co-simulation");
x.t("xtremedsp","kit");
x.t("xtremedsp","development");
x.t("dialog","box");
x.t("interface","co-simulation");
x.t("icon","simulink");
x.t("necessary","direct");
x.t("necessary","board");
x.t("mode","selected");
x.t("points","appropriate");
x.t("originated","sometimes");
x.t("originated","except");
x.t("vary","model");
x.t("basic","tab");
x.t("programmed","run");
x.t("time","clock");
x.t("time","simulink");
x.t("xilinx","xtremedsp");
x.t("oscillator","listed");
x.t("oscillator","note");
x.t("multiple","xtremedsp");
x.t("original","model");
x.t("block's","output");
x.t("automatically","points");
x.t("automatically","opens");
x.t("listed","below");
x.t("default","value");
x.t("require","direct");
x.t("new","library");
x.t("new","co-simulation");
x.t("conversely","data");
x.t("single","stepped");
x.t("single","stepping");
x.t("card","hardware");
x.t("card","number");
x.t("block","passed");
x.t("block","vary");
x.t("block","automatically");
x.t("block","require");
x.t("block","conversely");
x.t("block","block");
x.t("block","parameters");
x.t("block","input");
x.t("block","reads");
x.t("block","step");
x.t("block","e.g");
x.t("block","instantiated");
x.t("block","interacts");
x.t("block","behaves");
x.t("block","communicates");
x.t("block","used");
x.t("top","level");
x.t("care","specify");
x.t("boards","installed");
x.t("invoked","double-clicking");
x.t("file","xtremedsp");
x.t("file","need");
x.t("file","changes");
x.t("need","adjust");
x.t("during","simulink");
x.t("during","compilation");
x.t("during","simulation");
x.t("nearest","valid");
x.t("exceed","maximum");
x.t("unless","multiple");
x.t("kit","card");
x.t("kit","boards");
x.t("kit","board");
x.t("kit","blockset");
x.t("processed","hardware");
x.t("cycle","time");
x.t("cycle","step");
x.t("cycle","accurate");
x.t("box","invoked");
x.t("box","allows");
x.t("programmable","oscillator");
x.t("path","input");
x.t("path","sometimes");
x.t("path","design");
x.t("path","output");
x.t("name","specifies");
x.t("exactly","subsystem");
x.t("gateway","names");
x.t("follows","clock");
x.t("corresponds","duration");
x.t("custom","xtremedsp");
x.t("direct","combinational");
x.t("direct","feedback");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("un-checking","box");
x.t("place","simulink");
x.t("allows","block");
x.t("allows","choose");
x.t("allows","feedback");
x.t("33.33","mhz");
x.t("wire","connecting");
x.t("adjust","parameter");
x.t("input","ports");
x.t("input","output");
x.t("input","port");
x.t("ports","block");
x.t("ports","interpreted");
x.t("ports","match");
x.t("addition","block");
x.t("combinational","path");
x.t("combinational","feedback");
x.t("selected","clock");
x.t("selected","may");
x.t("sometimes","necessary");
x.t("sometimes","single");
x.t("frequency","available");
x.t("frequency","exceed");
x.t("frequency","model's");
x.t("frequency","free");
x.t("frequency","(mhz)");
x.t("frequency","rounded");
x.t("select","single");
x.t("select","pci");
x.t("connecting","output");
x.t("written","input");
x.t("number","specifies");
x.t("interpreted","simulink");
x.t("stepping","necessary");
x.t("maximum","operating");
x.t("design","bitstream");
x.t("design","include");
x.t("software","port");
x.t("reads","appropriate");
x.t("may","select");
x.t("may","specify");
x.t("specifies","co-simulation");
x.t("specifies","index");
x.t("instead","software");
x.t("step","corresponds");
x.t("step","board");
x.t("index","xtremedsp");
x.t("match","gateway");
x.t("opens","configures");
x.t("closes","development");
x.t("steps","closes");
x.t("model's","fpga");
x.t("mhz","card");
x.t("mhz","33.33");
x.t("mhz","mhz");
x.t("mhz","100");
x.t("mhz","120");
x.t("mhz","66.66");
x.t("bitstream","name");
x.t("level","original");
x.t("pci","usb");
x.t("asynchronously","simulink");
x.t("operating","frequency");
x.t("operating","frequencies");
x.t("100","mhz");
x.t("given","block");
x.t("frequencies","programmable");
x.t("e.g","wire");
x.t("compared","simulation");
x.t("simulink","addition");
x.t("simulink","subsystem");
x.t("simulink","simulation");
x.t("simulink","model");
x.t("simulink","using");
x.t("board","clock");
x.t("board","new");
x.t("board","block");
x.t("board","during");
x.t("board","operate");
x.t("board","run");
x.t("sources","selecting");
x.t("include","combinational");
x.t("configuration","file");
x.t("instantiated","during");
x.t("interacts","xtremedsp");
x.t("configures","steps");
x.t("running","clock");
x.t("value","used");
x.t("specific","basic");
x.t("free","running");
x.t("selecting","single");
x.t("implementation","valid");
x.t("bus","allows");
x.t("usb","interfaces");
x.t("subsystem","originated");
x.t("subsystem","top");
x.t("subsystem","compiled");
x.t("compilation","parameter");
x.t("read","co-simulation");
x.t("valid","frequency");
x.t("valid","operating");
x.t("output","ports");
x.t("output","input");
x.t("output","port");
x.t("location","configuration");
x.t("behaves","exactly");
x.t("data","processed");
x.t("data","written");
x.t("data","read");
x.t("appropriate","configuration");
x.t("appropriate","values");
x.t("bit","cycle");
x.t("120","mhz");
x.t("values","hardware");
x.t("case","board");
x.t("(mhz)","free");
x.t("port","hardware");
x.t("port","interface");
x.t("port","block");
x.t("port","un-checking");
x.t("port","input");
x.t("port","design");
x.t("port","given");
x.t("port","output");
x.t("port","names");
x.t("choose","interface");
x.t("feedback","path");
x.t("note","care");
x.t("66.66","mhz");
x.t("created","contains");
x.t("accurate","compared");
x.t("operate","asynchronously");
x.t("communicates","xtremedsp");
x.t("used","unless");
x.t("used","place");
x.t("simulation","block");
x.t("simulation","selected");
x.t("simulation","frequency");
x.t("simulation","may");
x.t("simulation","data");
x.t("simulation","bit");
x.t("simulation","simulation");
x.t("simulation","behavior");
x.t("except","simulation");
x.t("model","hardware");
x.t("model","basic");
x.t("model","compiled");
x.t("run","during");
x.t("run","free");
x.t("rounded","nearest");
x.t("duration","time");
x.t("using","clock");
x.t("blockset","xtremedsp");
x.t("development","kit");
x.t("tab","follows");
x.t("tab","parameters");
x.t("names","subsystem");
x.t("names","port");
x.t("behavior","co-simulation");
x.t("behavior","subsystem");
x.t("compiled","co-simulation");
x.t("compiled","xtremedsp");
x.t("drives","output");
x.t("contains","custom");
x.t("specify","frequency");
x.t("specify","operating");
}
