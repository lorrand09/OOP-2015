function FileData_Pairs(x)
{
x.t("precision","full");
x.t("precision","empty");
x.t("precision","output");
x.t("precision","optional");
x.t("double-clicking","icon");
x.t("example","precision");
x.t("registers","zynq-7000");
x.t("available","empty");
x.t("available","fifo");
x.t("provide","reset");
x.t("provide","almost");
x.t("provide","enable");
x.t("provide","data");
x.t("provide","percent");
x.t("parameter","dialog");
x.t("fpga","built-in");
x.t("version","data");
x.t("full","signal");
x.t("full","represented");
x.t("full","output");
x.t("full","optional");
x.t("full","port");
x.t("full","using");
x.t("low-latency","access");
x.t("(ae)","port");
x.t("built-in","fifos");
x.t("built-in","fifo");
x.t("user-specified","precision");
x.t("table","provides");
x.t("binary","point");
x.t("always","top");
x.t("ability","look-ahead");
x.t("0.0","0.5");
x.t("optimal","configuration");
x.t("topic","common");
x.t("dout","order");
x.t("implemented","using");
x.t("locations","remain");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("uses","following");
x.t("icon","simulink");
x.t("mode","first");
x.t("mode","first-word");
x.t("basic","tab");
x.t("type","block");
x.t("0.5","latter");
x.t("reset","port");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("xilinx","fifo");
x.t("listed","following");
x.t("queue","values");
x.t("automatically","output");
x.t("require","low-latency");
x.t("require","throttling");
x.t("count","port");
x.t("default","backward");
x.t("access","data");
x.t("contents","data");
x.t("turned","default");
x.t("block","provide");
x.t("block","parameter");
x.t("block","uses");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","indicates");
x.t("block","ram");
x.t("block","parameters");
x.t("block","provides");
x.t("block","explained");
x.t("block","implements");
x.t("block","implementation");
x.t("data-input","port");
x.t("fall","fifo");
x.t("top","word");
x.t("backward","compatibility");
x.t("indicates","percentage");
x.t("invoked","double-clicking");
x.t("add","reset");
x.t("add","almost");
x.t("add","enable");
x.t("add","data");
x.t("add","percent");
x.t("8.3","floating-");
x.t("presented","module's");
x.t("bits","precision");
x.t("reasons","provide");
x.t("dsp","-1l");
x.t("via","data");
x.t("ram","srl");
x.t("ram","distributed");
x.t("ram","shift");
x.t("built","block");
x.t("primitives","arranged");
x.t("requirements","parameters");
x.t("libraries","control");
x.t("box","invoked");
x.t("operation","data");
x.t("stored","range");
x.t("range","16-64k");
x.t("common","options");
x.t("performance","options");
x.t("virtex","device");
x.t("3,3e","dsp");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("provides","ability");
x.t("provides","number");
x.t("provides","best-use");
x.t("useful","applications");
x.t("standard","mode");
x.t("standard","fifo");
x.t("boxes","xilinx");
x.t("explained","topic");
x.t("empty","(ae)");
x.t("empty","block");
x.t("empty","memory");
x.t("empty","output");
x.t("empty","port");
x.t("write-enable","input");
x.t("input","asserting");
x.t("input","port");
x.t("remain","module's");
x.t("width","full");
x.t("width","depth");
x.t("ports","provide");
x.t("virtex-5","fpga");
x.t("arranged","optimal");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("virtex-6","virtex-5");
x.t("selected","width");
x.t("logic","floating-point");
x.t("falls","fifo");
x.t("point","operator");
x.t("point","unsigned");
x.t("next","available");
x.t("next","word");
x.t("percent_full","output");
x.t("fwft","useful");
x.t("throttling","based");
x.t("fifos","built");
x.t("fifos","memory");
x.t("unused","locations");
x.t("options","block");
x.t("options","standard");
x.t("first","word");
x.t("feature","provides");
x.t("appears","automatically");
x.t("control","logic");
x.t("written","next");
x.t("written","fifo");
x.t("srl","built-in");
x.t("look-ahead","next");
x.t("number","words");
x.t("implements","fifos");
x.t("implements","fifo");
x.t("signal","specifies");
x.t("indicating","fifo");
x.t("design","requirements");
x.t("specifies","number");
x.t("specifies","bit");
x.t("words","stored");
x.t("words","fifo");
x.t("index","xilinx");
x.t("almost","empty");
x.t("internal","memory");
x.t("floating-","point");
x.t("-1l","-1l");
x.t("-1l","fifo");
x.t("floating-point","memory");
x.t("enable","port");
x.t("thus","example");
x.t("memory","type");
x.t("memory","queue");
x.t("memory","primitives");
x.t("memory","percent_full");
x.t("memory","index");
x.t("memory","location");
x.t("16-64k","bits");
x.t("least","full");
x.t("zynq-7000","series");
x.t("read-enable","input");
x.t("simulink","model");
x.t("(fwft)","mode");
x.t("configuration","based");
x.t("represented","user-specified");
x.t("first-word","fall-through");
x.t("specific","basic");
x.t("specific","design");
x.t("compatibility","reasons");
x.t("implementation","tab");
x.t("generator","block");
x.t("generator","8.3");
x.t("asserting","read-enable");
x.t("read","operation");
x.t("read","depth");
x.t("read","fifo");
x.t("word","available");
x.t("word","fall");
x.t("word","falls");
x.t("word","thus");
x.t("latter","indicating");
x.t("location","write-enable");
x.t("output","always");
x.t("output","fwft");
x.t("output","port");
x.t("output","two");
x.t("fall-through","feature");
x.t("fall-through","(fwft)");
x.t("depth","specifies");
x.t("depth","fifo");
x.t("data","available");
x.t("data","count");
x.t("data","read");
x.t("data","output");
x.t("data","sheet");
x.t("data","applications");
x.t("issuing","read");
x.t("optional","ports");
x.t("optional","port");
x.t("bit","width");
x.t("values","0.0");
x.t("values","presented");
x.t("best-use","recommendations");
x.t("recommendations","specific");
x.t("port","binary");
x.t("port","dout");
x.t("port","turned");
x.t("port","block");
x.t("port","indicates");
x.t("port","add");
x.t("port","written");
x.t("port","data");
x.t("port","asserted");
x.t("sheet","spartan");
x.t("percentage","fifo");
x.t("two","values");
x.t("asserted","unused");
x.t("asserted","fifo");
x.t("applications","require");
x.t("based","contents");
x.t("based","selected");
x.t("module's","data-input");
x.t("module's","internal");
x.t("order","written");
x.t("operate","standard");
x.t("operate","first-word");
x.t("following","table");
x.t("following","xilinx");
x.t("model","basic");
x.t("percent","full");
x.t("used","block");
x.t("system","generator");
x.t("using","user-specified");
x.t("using","block");
x.t("v6.0","v6.0");
x.t("blockset","libraries");
x.t("blockset","fifo");
x.t("distributed","ram");
x.t("tab","performance");
x.t("tab","parameters");
x.t("tab","memory");
x.t("series","virtex-6");
x.t("kintex","device");
x.t("fifo","provide");
x.t("fifo","full");
x.t("fifo","implemented");
x.t("fifo","xilinx");
x.t("fifo","block");
x.t("fifo","via");
x.t("fifo","empty");
x.t("fifo","first");
x.t("fifo","appears");
x.t("fifo","memory");
x.t("fifo","least");
x.t("fifo","generator");
x.t("fifo","operate");
x.t("fifo","following");
x.t("fifo","fifo");
x.t("fifo","without");
x.t("without","issuing");
x.t("operator","v6.0");
x.t("unsigned","output");
x.t("spartan","device");
x.t("shift","registers");
}
