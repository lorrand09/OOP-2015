function FileData_Pairs(x)
{
x.t("double-clicking","icon");
x.t("precision","parameter");
x.t("precision","full");
x.t("precision","option");
x.t("precision","signed");
x.t("precision","fixed-point");
x.t("precision","represent");
x.t("overflow","refer");
x.t("overflow","quantization");
x.t("registers","placed");
x.t("registers","added");
x.t("registers","used");
x.t("example","latency");
x.t("equal","optimum");
x.t("parameter","dialog");
x.t("parameter","allows");
x.t("provide","enable");
x.t("placed","rounding/saturation");
x.t("placed","pipeline");
x.t("placed","rounding");
x.t("possible","xtremedsp");
x.t("defines","number");
x.t("version","data");
x.t("full","precision");
x.t("full","block");
x.t("sufficient","precision");
x.t("refer","section");
x.t("delayed","saturation");
x.t("v11.2","v11.2");
x.t("v11.2","floating-");
x.t("always","full");
x.t("binary","point");
x.t("don\u2019t","need");
x.t("directs","block");
x.t("user","data");
x.t("user","defined");
x.t("topic","common");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("uses","sufficient");
x.t("uses","following");
x.t("until","optimum");
x.t("hdl","gives");
x.t("hdl","otherwise");
x.t("implemented","using");
x.t("downstream","logic");
x.t("field","specifies");
x.t("xtremedsp","slice");
x.t("icon","simulink");
x.t("register","placed");
x.t("provided","least");
x.t("basic","tab");
x.t("sample","periods");
x.t("saturation","logic");
x.t("saturation","rounding");
x.t("type","multiplier");
x.t("type","select");
x.t("type","embedded");
x.t("xilinx","mult");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("total","bits");
x.t("however","data");
x.t("listed","following");
x.t("product","data");
x.t("block's","output");
x.t("require","additional");
x.t("behavioral","hdl");
x.t("speed","parameters");
x.t("speed","area");
x.t("checks","latency");
x.t("synthesis","tool");
x.t("block","parameter");
x.t("block","uses");
x.t("block","implemented");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","parameters");
x.t("block","optimized");
x.t("block","explained");
x.t("block","implements");
x.t("invoked","double-clicking");
x.t("need","full");
x.t("optimize","speed");
x.t("optimize","performance");
x.t("bits","user-defined");
x.t("bits","specifies");
x.t("bits","and/or");
x.t("quantization","overflow");
x.t("quantization","refer");
x.t("quantization","optional");
x.t("rounding/saturation","selected");
x.t("rounding/saturation","logic");
x.t("dsp","-1l");
x.t("test","optimum");
x.t("test","imply");
x.t("libraries","math");
x.t("box","invoked");
x.t("common","options");
x.t("mult","xilinx");
x.t("mult","block");
x.t("mult","mult");
x.t("mult","multiplier");
x.t("follows","precision");
x.t("follows","behavioral");
x.t("performance","area");
x.t("virtex","device");
x.t("dsp48","type");
x.t("3,3e","dsp");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","optimize");
x.t("parameters","specific");
x.t("parameters","used");
x.t("floating","point");
x.t("reduced","number");
x.t("zero","least");
x.t("further","registers");
x.t("area","directs");
x.t("area","embedded");
x.t("area","core");
x.t("optimized","speed");
x.t("optimized","either");
x.t("boxes","xilinx");
x.t("allows","specify");
x.t("multipliers","field");
x.t("produced","optimized");
x.t("explained","topic");
x.t("multiplier","v11.2");
x.t("multiplier","saturation");
x.t("multiplier","target");
x.t("multiplier","latency");
x.t("multiplier","computes");
x.t("target","device");
x.t("input","ports");
x.t("ports","producing");
x.t("three","selected");
x.t("device","test");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("selected","user");
x.t("selected","rounding/saturation");
x.t("selected","first");
x.t("point","fixed-point");
x.t("point","output");
x.t("point","operator");
x.t("point","position");
x.t("error","user");
x.t("logic","registers");
x.t("logic","however");
x.t("logic","synthesis");
x.t("logic","first");
x.t("logic","two");
x.t("first","register");
x.t("first","additional");
x.t("select","require");
x.t("options","block");
x.t("number","sample");
x.t("number","total");
x.t("number","bits");
x.t("number","number");
x.t("number","bit");
x.t("number","unsigned");
x.t("implements","multiplier");
x.t("maximum","freedom");
x.t("length","latency");
x.t("user-defined","precision");
x.t("specifies","possible");
x.t("specifies","bit");
x.t("index","xilinx");
x.t("section","overflow");
x.t("types","multiplier");
x.t("floating-","point");
x.t("added","core");
x.t("-1l","mult");
x.t("-1l","-1l");
x.t("floating-point","index");
x.t("enable","port");
x.t("option","allows");
x.t("least","equal");
x.t("least","significant");
x.t("embedded","multipliers");
x.t("embedded","multiplier");
x.t("and/or","fractional");
x.t("optimum","pipeline");
x.t("optimum","pipelining");
x.t("simulink","model");
x.t("latency","defines");
x.t("latency","provided");
x.t("latency","three");
x.t("latency","values");
x.t("latency","distributed");
x.t("additional","registers");
x.t("additional","saturation/rounding");
x.t("core","example");
x.t("core","registers");
x.t("core","until");
x.t("core","block");
x.t("core","parameters");
x.t("core","produced");
x.t("core","implementation");
x.t("specific","basic");
x.t("specific","implementation");
x.t("signed","complement");
x.t("signed","comp");
x.t("periods","block's");
x.t("pipeline","length");
x.t("pipeline","core");
x.t("pipeline","saturation/rounding");
x.t("implementation","tab");
x.t("gives","downstream");
x.t("fixed-point","precision");
x.t("fixed-point","output");
x.t("fixed-point","arithmetic");
x.t("pipelining","checks");
x.t("pipelining","reached");
x.t("generator","block");
x.t("computes","product");
x.t("represent","result");
x.t("output","precision");
x.t("output","delayed");
x.t("output","always");
x.t("output","quantization");
x.t("output","number");
x.t("output","signed");
x.t("output","port");
x.t("output","unsigned");
x.t("location","binary");
x.t("data","type");
x.t("data","types");
x.t("data","sheet");
x.t("data","two");
x.t("optional","port");
x.t("tool","maximum");
x.t("freedom","optimize");
x.t("result","output");
x.t("result","without");
x.t("defined","don\u2019t");
x.t("bit","binary");
x.t("bit","zero");
x.t("bit","location");
x.t("slice","dsp48");
x.t("values","pass");
x.t("port","provide");
x.t("port","block");
x.t("port","latency");
x.t("sheet","spartan");
x.t("two","registers");
x.t("two","input");
x.t("otherwise","core");
x.t("fractional","bits");
x.t("significant","bit");
x.t("imply","core");
x.t("complement","number");
x.t("reached","further");
x.t("following","xilinx");
x.t("model","basic");
x.t("used","block");
x.t("used","pipeline");
x.t("either","speed");
x.t("system","generator");
x.t("arithmetic","floating");
x.t("rounding","user");
x.t("rounding","saturation");
x.t("rounding","selected");
x.t("using","behavioral");
x.t("v6.0","v6.0");
x.t("blockset","libraries");
x.t("blockset","mult");
x.t("tab","follows");
x.t("tab","parameters");
x.t("distributed","pipeline");
x.t("saturation/rounding","logic");
x.t("pass","test");
x.t("kintex","device");
x.t("without","error");
x.t("operator","v6.0");
x.t("unsigned","number");
x.t("unsigned","output");
x.t("position","binary");
x.t("spartan","device");
x.t("math","floating-point");
x.t("producing","result");
x.t("specify","reduced");
x.t("specify","output");
x.t("comp","output");
}
