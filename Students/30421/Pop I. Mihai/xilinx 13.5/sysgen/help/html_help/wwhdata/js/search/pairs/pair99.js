function FileData_Pairs(x)
{
x.t("interfaces","virtex-6");
x.t("interfaces","following");
x.t("precision","minimum");
x.t("precision","pinc");
x.t("precision","increased");
x.t("exploits","xtremedsp");
x.t("double-clicking","icon");
x.t("clock","number");
x.t("clock","enable");
x.t("clock","(mhz)");
x.t("clock","per");
x.t("registers","core");
x.t("active","pulse");
x.t("active","high");
x.t("synchronized","cycle");
x.t("supports","backpressure");
x.t("example","shows");
x.t("available","block");
x.t("available","allows");
x.t("available","individually");
x.t("available","port");
x.t("available","tlast");
x.t("combined","via");
x.t("provide","addition");
x.t("below","configuration");
x.t("below","axi");
x.t("below","generally");
x.t("parameter","dialog");
x.t("parameter","allows");
x.t("parameter","selection");
x.t("possible","amplitude");
x.t("pulse","cycle");
x.t("pulse","two");
x.t("determined","control");
x.t("indicator","output");
x.t("illustrate","design");
x.t("digital","synthesizer");
x.t("fpga","hardware");
x.t("fpga","families");
x.t("hardware","parameters");
x.t("hardware","resource");
x.t("hardware","following");
x.t("drive","input");
x.t("version","data");
x.t("5.0","xilinx");
x.t("5.0","block");
x.t("5.0","design");
x.t("5.0","dds");
x.t("sinusoidal","waveforms");
x.t("independently","configurable");
x.t("independently","configured");
x.t("independently","together");
x.t("independently","negated");
x.t("look-up","table");
x.t("subfield-ports","phase");
x.t("half","dds");
x.t("half","full_range");
x.t("clear","input");
x.t("intended","service");
x.t("accompany","datastream");
x.t("full","axi");
x.t("applied","channel");
x.t("shown","simulation");
x.t("table","below");
x.t("table","aclken");
x.t("table","phase");
x.t("table","efficient");
x.t("refer","topic");
x.t("refer","datasheet");
x.t("create","dds");
x.t("question","pinc");
x.t("question","tuser");
x.t("phase_width","phase");
x.t("description","example");
x.t("once","core");
x.t("time-multiplexed","channels");
x.t("time-multiplexed","dds");
x.t("various","implementation");
x.t("unit_circle","selects");
x.t("always","takes");
x.t("required","channel");
x.t("required","signal");
x.t("required","depending");
x.t("required","describe");
x.t("chan_id_field","mode");
x.t("binary","range");
x.t("parts","available");
x.t("parts","dds");
x.t("parts","phase");
x.t("parts","used");
x.t("subfield","input");
x.t("n_cos_lut","programmable");
x.t("s_axis_phase_tdata_phase_in","available");
x.t("tone","produced");
x.t("optimal","performance");
x.t("synchronization","mode");
x.t("angles","x2pi");
x.t("angles","tab");
x.t("topic","common");
x.t("topic","axi");
x.t("(aclken)","pin");
x.t("enabled","control");
x.t("enabled","dds");
x.t("handshake","protocol");
x.t("user","chan_id_field");
x.t("user","field");
x.t("on_vector","mode");
x.t("implemented","fpga");
x.t("implemented","phase_in");
x.t("field","chan_id_field");
x.t("field","subfield");
x.t("field","user");
x.t("field","conveyed");
x.t("field","basic");
x.t("field","passes");
x.t("field","determines");
x.t("field","input");
x.t("field","width");
x.t("field","activated");
x.t("field","chan_id");
x.t("field","identifies");
x.t("field","least");
x.t("field","e.g");
x.t("field","phase");
x.t("outputs","latency");
x.t("outputs","valid");
x.t("outputs","using");
x.t("xtremedsp","slices");
x.t("dialog","entry");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("uses","required");
x.t("uses","xilinx");
x.t("uses","explicit");
x.t("last","time-division");
x.t("last","packet_framing");
x.t("weight","accumulator");
x.t("shows","migrate");
x.t("(slave)","used");
x.t("interface","detailed");
x.t("interface","architecture");
x.t("necessary","know");
x.t("configurable","allows");
x.t("configurable","phase");
x.t("support","full");
x.t("support","time-multiplexed");
x.t("support","achieve");
x.t("icon","display");
x.t("icon","simulink");
x.t("mode","available");
x.t("mode","on_vector");
x.t("mode","block");
x.t("mode","targeted");
x.t("mode","re-configuration");
x.t("mode","full_range");
x.t("mode","tuser");
x.t("mode","tlast");
x.t("conveyed","input");
x.t("s_axis_config_tdata_pinc","programmable");
x.t("basic","tab");
x.t("spurious","free");
x.t("phase_dithering","taylor_series_corrected");
x.t("calculations","output");
x.t("type","choose");
x.t("pipelined","optimal");
x.t("resets","core");
x.t("sample","period");
x.t("migration","block");
x.t("compiler","5.0");
x.t("compiler","necessary");
x.t("compiler","block");
x.t("compiler","v5.0");
x.t("compiler","4.0");
x.t("compiler","core");
x.t("compiler","system");
x.t("pin","core");
x.t("response","pulse");
x.t("vector","framing");
x.t("hence","support");
x.t("packets","implied");
x.t("xilinx","logicore");
x.t("xilinx","dds");
x.t("xilinx","blockset");
x.t("followed","optional");
x.t("however","output");
x.t("however","propagation");
x.t("trigger","adoption");
x.t("trigger","re-configuration");
x.t("implied","input");
x.t("i.e","phase_width");
x.t("listed","following");
x.t("multi-channel","capability");
x.t("channel","question");
x.t("channel","trigger");
x.t("channel","new");
x.t("channel","opposed");
x.t("channel","channels");
x.t("channel","transformed");
x.t("channel","determine");
x.t("channel","config");
x.t("channel","independent");
x.t("channel","fixed");
x.t("channel","options");
x.t("channel","tdata");
x.t("channel","dds");
x.t("channel","tready");
x.t("channel","dynamic");
x.t("channel","output");
x.t("channel","transfer");
x.t("channel","data");
x.t("channel","note");
x.t("channel","starts");
x.t("channel","streaming");
x.t("channel","tlast");
x.t("speed","operation");
x.t("speed","dsp48");
x.t("s_axis_phase_tdata_pinc","streaming");
x.t("require","bits");
x.t("require","larger");
x.t("multiplied","channel");
x.t("multiplied","radians");
x.t("default","unselected");
x.t("consists","accumulator");
x.t("consists","phase");
x.t("phase_generator_and_sin_cos_lut","selected");
x.t("phase_generator_and_sin_cos_lut","phase_generator_only");
x.t("power-of-two","amplitude");
x.t("denotes","last");
x.t("new","cycle");
x.t("new","configuration");
x.t("advanced","tab");
x.t("certain","features");
x.t("data_tready","(slave)");
x.t("block","interfaces");
x.t("block","parameter");
x.t("block","implemented");
x.t("block","uses");
x.t("block","icon");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","sine");
x.t("block","axi4");
x.t("block","parameters");
x.t("block","explained");
x.t("block","implements");
x.t("block","may");
x.t("block","polarity");
x.t("block","depending");
x.t("block","diagram");
x.t("block","cosine");
x.t("block","ignores");
x.t("block","described");
x.t("block","phase");
x.t("block","following");
x.t("block","using");
x.t("block","clocked");
x.t("block","detail");
x.t("axi4-stream","compliant");
x.t("compliant","interfaces");
x.t("architectural","decisions");
x.t("choice","programmable");
x.t("choice","fixed");
x.t("choice","noise");
x.t("sine/cosine","lookup");
x.t("passes","content");
x.t("datasheet","core");
x.t("rdy","output");
x.t("invoked","double-clicking");
x.t("mode.thismode","intended");
x.t("determines","width");
x.t("time-division","multi-channel");
x.t("time-division","multiplied");
x.t("menu","below");
x.t("results","less");
x.t("entry","box");
x.t("opposed","axi");
x.t("user_field","mode");
x.t("bits","required");
x.t("bits","user");
x.t("bits","minimal");
x.t("radians","field");
x.t("radians","channel");
x.t("due","changes");
x.t("dsp","index");
x.t("dsp","-1l");
x.t("overview","understand");
x.t("sine","place");
x.t("sine","cosine");
x.t("sine","output");
x.t("sine","negates");
x.t("exploiting","symmetry");
x.t("taylor","series");
x.t("selects","maximum");
x.t("selects","exact");
x.t("x2pi","radians");
x.t("features","block");
x.t("high","outputs");
x.t("high","speed");
x.t("high","performance");
x.t("high","sfdr");
x.t("via","input");
x.t("via","config");
x.t("via","core");
x.t("channels","available");
x.t("channels","parameter");
x.t("channels","time-multiplexed");
x.t("channels","user");
x.t("channels","require");
x.t("channels","denotes");
x.t("channels","channels");
x.t("channels","vector_framing");
x.t("channels","whole");
x.t("channels","latency");
x.t("channels","tready");
x.t("channels","on_packet");
x.t("requirements","system");
x.t("specified","dialog");
x.t("specified","output");
x.t("system_parameters","hardware_parameters");
x.t("cycle","resets");
x.t("cycle","time-division-multiplexed");
x.t("cycle","immediately");
x.t("unselected","full");
x.t("libraries","axi4");
x.t("programmable","s_axis_config_tdata_pinc");
x.t("programmable","advanced");
x.t("programmable","via");
x.t("programmable","neither");
x.t("programmable","config");
x.t("programmable","adds");
x.t("programmable","output");
x.t("programmable","values");
x.t("programmable","phase");
x.t("programmable","streaming");
x.t("programmable","s_axis_config_tdata_poff");
x.t("(s_axis_phase_tdata)","subfield");
x.t("operation","axi");
x.t("box","below");
x.t("box","invoked");
x.t("range","weight");
x.t("range","(db)");
x.t("name","port");
x.t("common","options");
x.t("path","control");
x.t("data_tvalid","output");
x.t("data_tvalid","(master)");
x.t("axi4","dsp");
x.t("axi4","dds");
x.t("axi4","versions");
x.t("performance","pulse");
x.t("performance","configurable");
x.t("performance","optimized");
x.t("performance","latency");
x.t("conversion","parts");
x.t("follows","configuration");
x.t("enables","clock");
x.t("exactly","due");
x.t("virtex","device");
x.t("direct","digital");
x.t("part","parts");
x.t("part","sin/cos");
x.t("neither","above");
x.t("neither","pinc");
x.t("programmability","field");
x.t("programmability","fixed");
x.t("programmability","specifies");
x.t("programmability","option");
x.t("programmability","phase");
x.t("accuracy","affected");
x.t("dsp48","choose");
x.t("phase_generator","half");
x.t("synchronous","clear");
x.t("cycles","required");
x.t("entered","binary");
x.t("entered","array");
x.t("entered","values");
x.t("angle","increment");
x.t("angle","offset");
x.t("3,3e","dsp");
x.t("synthesizer","compiler");
x.t("parameters","dialog");
x.t("parameters","spurious");
x.t("parameters","block");
x.t("parameters","parameters");
x.t("parameters","non-axi");
x.t("parameters","specific");
x.t("parameters","phase");
x.t("parameters","used");
x.t("none","phase_dithering");
x.t("none","sin_cos_lut_only");
x.t("none","fixed");
x.t("none","valid");
x.t("none","taylor_series_corrected");
x.t("replaced","data_tvalid");
x.t("optimized","phase");
x.t("increment","specified");
x.t("increment","programmability");
x.t("increment","fixed");
x.t("increment","values");
x.t("increment","offset");
x.t("transformed","sine");
x.t("place","sine");
x.t("place","cosine");
x.t("amplitude","half");
x.t("amplitude","unit_circle");
x.t("amplitude","mode");
x.t("amplitude","implementation");
x.t("area","speed");
x.t("determine","width");
x.t("boxes","migrate");
x.t("allows","re-configuration");
x.t("allows","two");
x.t("allows","specify");
x.t("selection","basic");
x.t("selection","sin_cos_lut_only");
x.t("selection","sine_and_cosine");
x.t("selection","choose");
x.t("produced","dds");
x.t("consumed","control");
x.t("adoption","new");
x.t("explained","topic");
x.t("non-axi","axi4");
x.t("non-axi","dds");
x.t("sin_cos_lut_only","none");
x.t("sin_cos_lut_only","configuration");
x.t("sin_cos_lut_only","system");
x.t("sets","precision");
x.t("sets","width");
x.t("sets","output");
x.t("precise","values");
x.t("optimization","goal");
x.t("untouched","input");
x.t("untouched","dds");
x.t("fields","activated");
x.t("array","field");
x.t("array","entered");
x.t("understand","dds");
x.t("addition","phase");
x.t("input","question");
x.t("input","always");
x.t("input","via");
x.t("input","ports");
x.t("input","slave");
x.t("input","output");
x.t("input","data");
x.t("input","phase");
x.t("input","port");
x.t("input","tlast");
x.t("ports","block");
x.t("ports","unique");
x.t("width","field");
x.t("width","equivalent");
x.t("width","broadly");
x.t("width","chan_id");
x.t("width","internal");
x.t("width","bit");
x.t("width","allowable");
x.t("resolution","sets");
x.t("resolution","(hz)");
x.t("resource","noise");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","dds");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("virtex-6","spartan-6");
x.t("selected","available");
x.t("selected","programmable");
x.t("selected","none");
x.t("selected","different");
x.t("selected","configuration");
x.t("selected","output");
x.t("selected","streaming");
x.t("effective","clock");
x.t("auto","area");
x.t("auto","distributed_rom");
x.t("auto","dds");
x.t("auto","configuration");
x.t("sine_and_cosine","place");
x.t("signals","active");
x.t("signals","accompany");
x.t("signals","rdy");
x.t("signals","phase");
x.t("signals","versions");
x.t("activated","parameter");
x.t("activated","phase_generator_and_sin_cos_lut");
x.t("virtex-7","kintex-7");
x.t("supported","independently");
x.t("configured","independently");
x.t("configured","sine");
x.t("configured","sin/cos");
x.t("configured","phase");
x.t("configured","either");
x.t("config","channel");
x.t("frequency","block");
x.t("frequency","entered");
x.t("frequency","resolution");
x.t("frequency","fixed");
x.t("frequency","core");
x.t("frequency","tab");
x.t("symmetry","sinusoid");
x.t("separately","instantiated");
x.t("equivalent","frequency");
x.t("equivalent","sfdr");
x.t("aclken","enables");
x.t("aclken","minimum");
x.t("registered","performance");
x.t("datastream","application");
x.t("independent","frequency");
x.t("independent","offset");
x.t("display","display");
x.t("display","shortened");
x.t("know","block");
x.t("(quadrature)","output");
x.t("calculating","phase");
x.t("(db)","targeted");
x.t("period","specified");
x.t("period","explicit");
x.t("period","checked");
x.t("back-pressure","input");
x.t("delay","block");
x.t("delay","may");
x.t("fixed","programmable");
x.t("fixed","none");
x.t("fixed","fixed");
x.t("fixed","dds");
x.t("fixed","ratio");
x.t("adjusted","once");
x.t("options","parameter");
x.t("options","synchronization");
x.t("options","field");
x.t("options","block");
x.t("options","selection");
x.t("options","input");
x.t("options","selected");
x.t("options","auto");
x.t("options","select");
x.t("options","noise");
x.t("options","memory");
x.t("options","phase");
x.t("options","not_required");
x.t("options","tab");
x.t("options","tlast");
x.t("select","following");
x.t("affects","effective");
x.t("targeted","case");
x.t("targeted","purity");
x.t("minimum","aresetn");
x.t("minimum","phase");
x.t("appears","input");
x.t("number","bits");
x.t("number","channels");
x.t("cost","less");
x.t("broadly","equivalent");
x.t("pulldown","menu");
x.t("control","signals");
x.t("control","signal");
x.t("control","datapath");
x.t("implements","high");
x.t("sinusoid","conversion");
x.t("sinusoid","waveforms");
x.t("sinusoid","circuits");
x.t("waveforms","core");
x.t("waveforms","applications");
x.t("design","description");
x.t("design","migration");
x.t("design","programmable");
x.t("design","cases");
x.t("design","applications");
x.t("signal","shown");
x.t("signal","data_tready");
x.t("signal","mode.thismode");
x.t("signal","replaced");
x.t("signal","input");
x.t("signal","aresetn");
x.t("signal","internally");
x.t("programmabilty","options");
x.t("shaping","hardware");
x.t("shaping","output");
x.t("shaping","choose");
x.t("shaping","phase_generator_only");
x.t("maximum","possible");
x.t("maximum","performance");
x.t("chan_id","field");
x.t("cannot","adjusted");
x.t("phase_in","field");
x.t("phase_in","signal");
x.t("may","required");
x.t("may","configured");
x.t("may","delay");
x.t("may","identical");
x.t("sfdr","high");
x.t("sfdr","sets");
x.t("unique","block");
x.t("increment/offset","programmabilty");
x.t("different","subfield-ports");
x.t("specifies","frequency");
x.t("specifies","phase");
x.t("index","xilinx");
x.t("detailed","information");
x.t("dither","generator");
x.t("accumulator","followed");
x.t("accumulator","i.e");
x.t("correction","exploits");
x.t("achieve","high");
x.t("achieve","maximum");
x.t("internal","bus");
x.t("internal","phase");
x.t("variant","vector");
x.t("identical","exactly");
x.t("changes","certain");
x.t("individually","combined");
x.t("capability","time-division");
x.t("capability","supported");
x.t("tdata","field");
x.t("tdata","dds");
x.t("tdata","port");
x.t("noise","shaping");
x.t("explicit","sample");
x.t("explicit","period");
x.t("vector_framing","mode");
x.t("-1l","-1l");
x.t("-1l","dds");
x.t("accumulators","less");
x.t("enable","(aclken)");
x.t("active-low","synchronous");
x.t("datapath","input");
x.t("whole","supports");
x.t("connected","constant");
x.t("phase_generator_and_si","n_cos_lut");
x.t("distributed_rom","block_rom");
x.t("fully","pipelined");
x.t("framing","option");
x.t("framing","tlast");
x.t("identifies","time-division-multiplexed");
x.t("adds","channel");
x.t("lut","part");
x.t("lut","configured");
x.t("memory","type");
x.t("memory","usage");
x.t("option","default");
x.t("option","selected");
x.t("option","option");
x.t("option","phase");
x.t("option","tlast");
x.t("exact","power-of-two");
x.t("least","significant");
x.t("together","select");
x.t("together","optional");
x.t("embedded","design");
x.t("families","support");
x.t("e.g","channels");
x.t("frequencies","(mhz)");
x.t("4.0","dds");
x.t("dds","support");
x.t("dds","compiler");
x.t("dds","channel");
x.t("dds","consists");
x.t("dds","channels");
x.t("dds","direct");
x.t("dds","sets");
x.t("dds","configured");
x.t("dds","config");
x.t("dds","affects");
x.t("dds","options");
x.t("dds","capability");
x.t("dds","fully");
x.t("dds","instantiated");
x.t("dds","interpret");
x.t("dds","precedes");
x.t("dds","output");
x.t("dds","config_triggered");
x.t("dds","phase_output");
x.t("architecture","overview");
x.t("poff","programmable");
x.t("poff","selected");
x.t("poff","values");
x.t("poff","streaming");
x.t("less","hardware");
x.t("less","precise");
x.t("less","pipeline");
x.t("less","resources");
x.t("time-division-multiplexed","channel");
x.t("time-division-multiplexed","channels");
x.t("time-division-multiplexed","dds");
x.t("displayed","block");
x.t("slave","tvalid");
x.t("spartan-6","virtex-7");
x.t("sources","sinusoidal");
x.t("negated","precision");
x.t("configuration","input");
x.t("configuration","options");
x.t("configuration","option");
x.t("configuration","data");
x.t("simulink","model");
x.t("instantiated","separately");
x.t("instantiated","together");
x.t("polarity","negative");
x.t("latency","sine/cosine");
x.t("latency","options");
x.t("latency","pulldown");
x.t("latency","tdata");
x.t("core","registers");
x.t("core","refer");
x.t("core","enabled");
x.t("core","response");
x.t("core","may");
x.t("core","embedded");
x.t("core","sources");
x.t("core","core");
x.t("core","data");
x.t("core","customized");
x.t("core","consist");
x.t("main","parts");
x.t("usage","achieved");
x.t("interpret","tlast");
x.t("tready","determined");
x.t("tready","hence");
x.t("tready","selected");
x.t("tready","output");
x.t("similar","block");
x.t("similar","data");
x.t("depending","configuration");
x.t("depending","specific");
x.t("specific","basic");
x.t("specific","design");
x.t("free","dynamic");
x.t("bus","widths");
x.t("implementation","options");
x.t("implementation","decisions");
x.t("implementation","tab");
x.t("pipeline","stages");
x.t("aresetn","active");
x.t("aresetn","active-low");
x.t("ease","system");
x.t("constant","xilinx");
x.t("generator","create");
x.t("generator","implemented");
x.t("generator","consists");
x.t("generator","block");
x.t("generator","part");
x.t("generator","input");
x.t("generator","sin/cos");
x.t("generator","phase");
x.t("making","architectural");
x.t("precedes","sine");
x.t("valid","however");
x.t("valid","choice");
x.t("valid","options");
x.t("takes","priority");
x.t("diagram","dds");
x.t("dynamic","via");
x.t("dynamic","range");
x.t("output","precision");
x.t("output","channels");
x.t("output","accuracy");
x.t("output","phase_generator");
x.t("output","amplitude");
x.t("output","selection");
x.t("output","untouched");
x.t("output","width");
x.t("output","frequency");
x.t("output","(quadrature)");
x.t("output","signal");
x.t("output","may");
x.t("output","frequencies");
x.t("output","tready");
x.t("output","cosine");
x.t("output","output");
x.t("output","port");
x.t("output","phase");
x.t("output","not_required");
x.t("output","negative");
x.t("cosine","outputs");
x.t("cosine","place");
x.t("cosine","output");
x.t("cosine","negates");
x.t("purposes","making");
x.t("larger","accumulators");
x.t("transfer","last");
x.t("transfer","user_field");
x.t("inherent","back-pressure");
x.t("sin/cos","lut");
x.t("sin/cos","lookup");
x.t("information","axi");
x.t("optional","taylor");
x.t("optional","dither");
x.t("optional","adder");
x.t("internally","registered");
x.t("config_triggered","enhanced");
x.t("data","available");
x.t("data","applied");
x.t("data","path");
x.t("data","input");
x.t("data","config");
x.t("data","output");
x.t("data","sheet");
x.t("data","paths");
x.t("customized","cannot");
x.t("customized","phase");
x.t("goal","choose");
x.t("packet_framing","mode");
x.t("ignores","content");
x.t("bit","field");
x.t("generation","phase");
x.t("adder","provide");
x.t("(mhz)","channel");
x.t("(mhz)","specifies");
x.t("values","field");
x.t("values","require");
x.t("values","multiplied");
x.t("values","channel");
x.t("values","entered");
x.t("values","precise");
x.t("values","cost");
x.t("application","dds");
x.t("re-configuration","synchronized");
x.t("re-configuration","mode");
x.t("re-configuration","data");
x.t("on_packet","mode");
x.t("case","associated");
x.t("propagation","delay");
x.t("tvalid","signal");
x.t("phase","calculations");
x.t("phase","channel");
x.t("phase","angle");
x.t("phase","increment");
x.t("phase","width");
x.t("phase","sinusoid");
x.t("phase","increment/offset");
x.t("phase","generator");
x.t("phase","output");
x.t("phase","generation");
x.t("phase","offset");
x.t("phase","checked");
x.t("port","s_axis_phase_tdata_phase_in");
x.t("port","block");
x.t("port","(s_axis_phase_tdata)");
x.t("port","option");
x.t("port","displayed");
x.t("port","output");
x.t("port","sin/cos");
x.t("port","phase_generator_only");
x.t("port","names");
x.t("efficient","memory");
x.t("described","table");
x.t("decisions","frequency");
x.t("decisions","calculating");
x.t("choose","system_parameters");
x.t("choose","none");
x.t("choose","auto");
x.t("choose","minimal");
x.t("not_required","mode");
x.t("not_required","neither");
x.t("above","uses");
x.t("migrate","non-axi");
x.t("migrate","dds");
x.t("sheet","spartan");
x.t("two","parts");
x.t("two","cycles");
x.t("two","control");
x.t("two","main");
x.t("note","dds");
x.t("priority","aclken");
x.t("enhanced","variant");
x.t("protocol","inherent");
x.t("applications","data_tvalid");
x.t("applications","dds");
x.t("offset","independently");
x.t("offset","angles");
x.t("offset","programmability");
x.t("offset","entered");
x.t("offset","parameters");
x.t("offset","none");
x.t("offset","core");
x.t("offset","values");
x.t("slices","fpga");
x.t("slices","used");
x.t("cases","signals");
x.t("significant","bits");
x.t("phase_generator_only","sin_cos_lut_only");
x.t("phase_generator_only","selected");
x.t("phase_generator_only","phase_generator_and_si");
x.t("immediately","following");
x.t("packet","framing");
x.t("following","xilinx");
x.t("following","phase_generator_and_sin_cos_lut");
x.t("following","block");
x.t("following","fields");
x.t("following","options");
x.t("following","explicit");
x.t("following","model");
x.t("used","illustrate");
x.t("used","drive");
x.t("used","independently");
x.t("used","block");
x.t("used","achieve");
x.t("used","connected");
x.t("used","denote");
x.t("either","fixed");
x.t("model","basic");
x.t("model","used");
x.t("system","clock");
x.t("system","requirements");
x.t("system","parameters");
x.t("system","design");
x.t("system","generator");
x.t("hardware_parameters","system");
x.t("phase_output","port");
x.t("service","ease");
x.t("starts","new");
x.t("simulation","two");
x.t("(master)","used");
x.t("lookup","table");
x.t("lookup","phase_in");
x.t("lookup","phase");
x.t("axi","handshake");
x.t("axi","interface");
x.t("axi","channel");
x.t("axi","name");
x.t("axi","ports");
x.t("pinc","poff");
x.t("streaming","s_axis_phase_tdata_pinc");
x.t("streaming","choice");
x.t("streaming","neither");
x.t("streaming","input");
x.t("streaming","dds");
x.t("streaming","s_axis_phase_tdata_poff");
x.t("using","look-up");
x.t("using","similar");
x.t("using","optional");
x.t("blockset","libraries");
x.t("blockset","dds");
x.t("kintex-7","devices");
x.t("series","correction");
x.t("s_axis_config_tdata_poff","streaming");
x.t("tab","parameter");
x.t("tab","hardware");
x.t("tab","block");
x.t("tab","follows");
x.t("tab","parameters");
x.t("tab","fixed");
x.t("tab","implementation");
x.t("tab","phase");
x.t("tab","system");
x.t("tab","axi");
x.t("per","channel");
x.t("(hz)","sets");
x.t("taylor_series_corrected","auto");
x.t("taylor_series_corrected","valid");
x.t("allowable","however");
x.t("negates","sine");
x.t("negates","cosine");
x.t("full_range","selects");
x.t("full_range","amplitude");
x.t("minimal","number");
x.t("minimal","maximal");
x.t("stages","latency");
x.t("tuser","field");
x.t("tuser","options");
x.t("kintex","device");
x.t("block_rom","optimization");
x.t("tlast","indicator");
x.t("tlast","enabled");
x.t("tlast","conveyed");
x.t("tlast","channel");
x.t("tlast","input");
x.t("tlast","appears");
x.t("tlast","signal");
x.t("tlast","packet");
x.t("tlast","used");
x.t("associated","packets");
x.t("shortened","port");
x.t("names","option");
x.t("paths","control");
x.t("achieved","exploiting");
x.t("clocked","purposes");
x.t("purity","tone");
x.t("maximal","xtremedsp");
x.t("maximal","maximal");
x.t("describe","channel");
x.t("versions","may");
x.t("versions","similar");
x.t("spartan","device");
x.t("circuits","axi4-stream");
x.t("increased","using");
x.t("s_axis_phase_tdata_poff","fixed");
x.t("affected","choice");
x.t("backpressure","tuser");
x.t("devices","core");
x.t("consist","two");
x.t("ratio","system");
x.t("widths","various");
x.t("negative","sine");
x.t("negative","cosine");
x.t("specify","less");
x.t("generally","results");
x.t("resources","consumed");
x.t("checked","dds");
x.t("denote","transfer");
x.t("content","untouched");
x.t("content","tuser");
x.t("detail","refer");
}
