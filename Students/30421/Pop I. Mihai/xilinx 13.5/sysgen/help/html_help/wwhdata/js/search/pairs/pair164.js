function FileData_Pairs(x)
{
x.t("example","illustrates");
x.t("double-clicking","icon");
x.t("indicated","block");
x.t("parameter","dialog");
x.t("reported","number");
x.t("waveform","illustrates");
x.t("binary","point");
x.t("creates","single");
x.t("topic","common");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("interface","serial");
x.t("icon","simulink");
x.t("basic","elements");
x.t("basic","tab");
x.t("type","signed");
x.t("xilinx","blockset");
x.t("multiple","size");
x.t("multiple","number");
x.t("listed","following");
x.t("block's","behavior");
x.t("single","output");
x.t("block","parameter");
x.t("block","interface");
x.t("block","listed");
x.t("block","parameters");
x.t("block","zero");
x.t("block","explained");
x.t("block","input");
x.t("block","configured");
x.t("block","takes");
x.t("size","indicated");
x.t("size","creates");
x.t("size","input");
x.t("size","output");
x.t("size","bit");
x.t("invoked","double-clicking");
x.t("parallel","xilinx");
x.t("parallel","block");
x.t("parallel","serial");
x.t("bits","binary");
x.t("bits","minimum");
x.t("bits","cannot");
x.t("bits","output");
x.t("specified","multiple");
x.t("libraries","basic");
x.t("box","block");
x.t("box","invoked");
x.t("common","options");
x.t("follows","input");
x.t("illustrates","block's");
x.t("illustrates","case");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("boxes","error");
x.t("explained","topic");
x.t("input","bits");
x.t("input","width");
x.t("input","output");
x.t("input","port");
x.t("input","order");
x.t("input","series");
x.t("width","multiple");
x.t("width","word");
x.t("width","output");
x.t("divided","evenly");
x.t("configured","significant");
x.t("point","output");
x.t("point","location");
x.t("error","reported");
x.t("serial","parallel");
x.t("first","block");
x.t("first","least");
x.t("first","following");
x.t("first","arithmetic");
x.t("options","block");
x.t("minimum","latency");
x.t("number","bits");
x.t("number","input");
x.t("number","output");
x.t("cannot","divided");
x.t("evenly","number");
x.t("index","serial");
x.t("types","index");
x.t("least","significant");
x.t("simulink","model");
x.t("latency","block");
x.t("specific","basic");
x.t("signed","unsigned");
x.t("takes","series");
x.t("word","size");
x.t("word","first");
x.t("output","binary");
x.t("output","bits");
x.t("output","specified");
x.t("output","width");
x.t("output","number");
x.t("output","port");
x.t("location","parameters");
x.t("data","types");
x.t("bit","block");
x.t("case","input");
x.t("ordered","either");
x.t("port","size");
x.t("port","input");
x.t("significant","word");
x.t("order","least");
x.t("following","waveform");
x.t("following","xilinx");
x.t("elements","data");
x.t("either","significant");
x.t("model","basic");
x.t("used","block");
x.t("arithmetic","type");
x.t("blockset","libraries");
x.t("blockset","serial");
x.t("series","ordered");
x.t("series","inputs");
x.t("tab","follows");
x.t("tab","parameters");
x.t("behavior","example");
x.t("unsigned","output");
x.t("inputs","size");
}
