function FileData_Pairs(x)
{
x.t("supports","two");
x.t("double-clicking","icon");
x.t("clock","sysgen_clk");
x.t("clock","appear");
x.t("clock","port");
x.t("interfaces","memory-map");
x.t("registers","either");
x.t("synchronized","during");
x.t("below","edk");
x.t("possible","operations");
x.t("determined","dual");
x.t("determined","based");
x.t("token","xps");
x.t("parameter","dialog");
x.t("hardware","right");
x.t("hardware","shown");
x.t("hardware","co-simulation");
x.t("right","constraint");
x.t("right","bus");
x.t("just","system");
x.t("dplb","interface");
x.t("drive","system");
x.t("exported","pcore");
x.t("half","shared");
x.t("shown","figure");
x.t("plb_clk","(axi_aclk)");
x.t("plb_clk","rest");
x.t("plb_clk","axi_aclk");
x.t("turning","functionality");
x.t("refer","topic");
x.t("refer","hardware/software");
x.t("tree","view");
x.t("co-simulation","plb_clk");
x.t("co-simulation","compilation");
x.t("co-simulation","module");
x.t("onto","program");
x.t("currently","supported");
x.t("wizard","xps");
x.t("wizard","runs");
x.t("re-synchronizing","shared");
x.t("keep","shared");
x.t("minimized","know");
x.t("controlled","hardware");
x.t("user","constraint");
x.t("user","selection");
x.t("user","logic");
x.t("topic","common");
x.t("topic","exposing");
x.t("topic","asynchronous");
x.t("enabled","from-registers");
x.t("enabled","during");
x.t("hdl","netlisting");
x.t("hdl","import");
x.t("later","imported");
x.t("shows","memory");
x.t("shows","shared");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("locations","memory");
x.t("helps","keep");
x.t("field","loaded");
x.t("field","undesired");
x.t("uses","board-specific");
x.t("program","file");
x.t("program",".elf");
x.t("program","allows");
x.t("program","memory");
x.t("transfers","supported");
x.t("interface","refer");
x.t("interface","hdl");
x.t("interface","peripheral");
x.t("interface","connects");
x.t("interface","axi4");
x.t("interface","parameters");
x.t("interface","selected");
x.t("interface","memory");
x.t("interface","embedded");
x.t("interface","depending");
x.t("interface","bus");
x.t("interface","generated");
x.t("interface","shared");
x.t("interface","in-frame");
x.t("interface","edk");
x.t("shared-memories","names");
x.t("icon","simulink");
x.t("support","designs");
x.t("support","information");
x.t("support","shared");
x.t("mode","enabled");
x.t("mode","bus");
x.t("register","read-back");
x.t("from-registers","written-to");
x.t("modified","ucf");
x.t("basic","tab");
x.t("type","automatically");
x.t("type","target");
x.t("type","selected");
x.t("type","select");
x.t("type","system");
x.t("older","devices");
x.t("delete","re-synchronize");
x.t("time","system");
x.t("xilinx","sdk");
x.t("xilinx","embedded");
x.t("xilinx","blockset");
x.t("microblaze","synchronized");
x.t("microblaze","processor");
x.t("microblaze","processors");
x.t("peripheral","bus");
x.t("memory-map","uni-directional");
x.t("multiple","microblaze");
x.t("multiple","subsystem");
x.t("listed","following");
x.t("automatically","determined");
x.t("automatically","hdl");
x.t("automatically","selected");
x.t("automatically","adjusted");
x.t("automatically","generated");
x.t("automatically","inserted");
x.t("automatically","generates");
x.t("default","extra");
x.t("default","plb");
x.t("lock","otherwise");
x.t("speed","area");
x.t("penalty","constraints");
x.t("constraint","file");
x.t("text","field");
x.t("original","ucf");
x.t("access","shared-memories");
x.t("access","attached");
x.t("v4.6","interface");
x.t("v4.6","processor");
x.t("v4.6","axi4");
x.t("v4.6","selected");
x.t("v4.6","bus");
x.t("details","design");
x.t("new","processor");
x.t("new","xmp");
x.t("items","reveals");
x.t("advanced","extensible");
x.t("advanced","tab");
x.t("want","bus");
x.t("start","enter");
x.t("block","supports");
x.t("block","parameter");
x.t("block","user");
x.t("block","dialog");
x.t("block","hdl");
x.t("block","support");
x.t("block","listed");
x.t("block","automatically");
x.t("block","block");
x.t("block","axi4");
x.t("block","parameters");
x.t("block","allows");
x.t("block","explained");
x.t("block","examine");
x.t("block","configured");
x.t("block","bitstream");
x.t("block","note");
x.t("block","order");
x.t("block","either");
x.t("block","per");
x.t("frame","data");
x.t("invoked","double-clicking");
x.t("file","automatically");
x.t("file","text");
x.t("file","re-import");
x.t("file","pathname");
x.t("file",".xmp");
x.t("file","memory");
x.t("file","click");
x.t("file","pointed");
x.t("file","generate");
x.t("file","based");
x.t("file","system");
x.t("file","edk");
x.t("interconnect","type");
x.t("interconnect","properly");
x.t("interconnect","driven");
x.t("clicking","view");
x.t("found","following");
x.t("menu","possible");
x.t("(axi_aclk)","driven");
x.t("add","entries");
x.t("during","netlisting");
x.t("during","simulation");
x.t("browse","new");
x.t("remove","co-debug");
x.t("spaces","names");
x.t("parse","ucf");
x.t("inherit","device");
x.t("processor","user");
x.t("processor","register");
x.t("processor","xilinx");
x.t("processor","access");
x.t("processor","block");
x.t("processor","found");
x.t("processor","base");
x.t("processor","local");
x.t("processor","ports");
x.t("processor","supported");
x.t("processor","right-clicking");
x.t("processor","bitstream");
x.t("processor","memory");
x.t("processor","plb");
x.t("processor","subsystem");
x.t("processor","systems");
x.t("processor","information");
x.t("processor","read-from");
x.t("processor","created");
x.t("processor","either");
x.t("processor","axi");
x.t("processor","per");
x.t("processor","edk");
x.t("kit","(edk)");
x.t("imported","xps");
x.t("imported","xmp");
x.t("imported","system");
x.t("imported","edk");
x.t("directly","board's");
x.t("constraints","constraint");
x.t("constraints","tie");
x.t("test","co-debug");
x.t("libraries","index");
x.t("box","invoked");
x.t("box","described");
x.t("connects","shared");
x.t("name","imported");
x.t("written-to","processor");
x.t("functionality","add");
x.t("incur","speed");
x.t("settings","edk");
x.t(".elf","file");
x.t("common","options");
x.t("axi4","interface");
x.t("axi4","advanced");
x.t("axi4","interconnect");
x.t("axi4","processor");
x.t("axi4","selected");
x.t("axi4","supported");
x.t("follows","memory");
x.t("follows","configure");
x.t("follows","port");
x.t("re-synthesize","new");
x.t("co-debug","xilinx");
x.t("co-debug","remove");
x.t("co-debug","option");
x.t("co-debug","circuit");
x.t("virtex","spartan");
x.t("processors","access");
x.t("processors","memory");
x.t("processors","per");
x.t("base","address");
x.t("re-import","xps");
x.t("board-specific","resources");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("area","penalty");
x.t("loaded","onto");
x.t("boxes","known");
x.t("allows","user");
x.t("allows","initial");
x.t("allows","system");
x.t("map","interface");
x.t("map","items");
x.t("map","incur");
x.t("map","view");
x.t("selection","determined");
x.t("selection","default");
x.t("reveals","menu");
x.t("consistent","shared");
x.t("address","automatically");
x.t("address","axi4");
x.t("address","space");
x.t("address","click");
x.t("address","bus");
x.t("address","http://www.xilinx.com/products/design_resources/proc_central/microblaze.htm");
x.t("rest","system");
x.t("sysgen_clk","controlled");
x.t("sysgen_clk","netlisting");
x.t("read-back","enabled");
x.t("read-back","typically");
x.t("pathname","modified");
x.t("sdk","(beta)");
x.t("final","netlist");
x.t("explained","topic");
x.t("offered","edk");
x.t("xps","drive");
x.t("xps","re-synthesize");
x.t("xps","project");
x.t("xps","system");
x.t("local","bus");
x.t("target","microblaze");
x.t("target","initial");
x.t("examine","modifications");
x.t("flow","hardware");
x.t("flow","hdl");
x.t("flow","extra");
x.t("flow","embedded");
x.t("flow","system");
x.t("flow","edk");
x.t("device","type");
x.t("device","drivers");
x.t("device","software");
x.t("chosen","import");
x.t("ports","system");
x.t("extra","clock");
x.t("extra","co-debug");
x.t("input","clock");
x.t("contain","constraints");
x.t("pcore","later");
x.t("pcore","hdl");
x.t("pcore","additional");
x.t("pcore","generated");
x.t("pcore","generation");
x.t("selected","target");
x.t("selected","device");
x.t("selected","system");
x.t("designs","refer");
x.t("designs","include");
x.t("co-design","details");
x.t("techniques","offered");
x.t("exposing","processor");
x.t("m_axi_dp","interface");
x.t("logic","consistent");
x.t("logic","developed");
x.t("logic","netlisted");
x.t("logic","edk");
x.t("configured","edk");
x.t("blocks","spaces");
x.t("error","imported");
x.t("supported","microblaze");
x.t("supported","multiple");
x.t("supported","virtex");
x.t("supported","cross-frame");
x.t("supported","burst");
x.t("drivers","automatically");
x.t(".xmp","file");
x.t("refresh","tree");
x.t("know","want");
x.t("developed","system");
x.t("developed","using");
x.t("select","plb");
x.t("space","automatically");
x.t("space","start");
x.t("adjusted","minimized");
x.t("top-level","netlist");
x.t("axi_aclk","axi4");
x.t("button","right");
x.t("options","block");
x.t("issues","edk");
x.t("control","logic");
x.t("communicate","device");
x.t("importing","xps");
x.t("cause","netlisting");
x.t("design","refer");
x.t("design","test");
x.t("design","supported");
x.t("design","embedded");
x.t("design","driven");
x.t("design","simulation");
x.t("design","flows");
x.t("board's","input");
x.t("ucf","user");
x.t("ucf","file");
x.t("launch","edk");
x.t("extensible","interface");
x.t("may","cause");
x.t("software","tab");
x.t("index","control");
x.t("push","device");
x.t("properly","connected");
x.t("predicated","address");
x.t("added","edk");
x.t("works","edk");
x.t("tie","system");
x.t("initial","program");
x.t("connected","dplb");
x.t("connected","xps");
x.t("connected","m_axi_dp");
x.t("connected","shared");
x.t("right-clicking","memory");
x.t("write-to","processor");
x.t("bitstream","hardware");
x.t("bitstream","parameters");
x.t("bitstream","created");
x.t("bitstream","containing");
x.t("enable","co-debug");
x.t("-based","memory");
x.t("memory","processor");
x.t("memory","map");
x.t("memory","blocks");
x.t("memory","-based");
x.t("xmp","project");
x.t("appear","top-level");
x.t("successfully","import");
x.t("option","may");
x.t("option","works");
x.t("option","done");
x.t("option","checked");
x.t("known","issues");
x.t("embedded","processor");
x.t("embedded","processors");
x.t("embedded","powerpc");
x.t("embedded","development");
x.t("projects","attached");
x.t("together","just");
x.t("click","lock");
x.t("click","import");
x.t("enter","address");
x.t("documentation","microblaze");
x.t("slave","plb");
x.t("project","file");
x.t("project","inherit");
x.t("project","name");
x.t("project","selection");
x.t("project","system");
x.t("project","contains");
x.t("netlist","bitstream");
x.t("netlist","called");
x.t("made","system");
x.t("pointed","field");
x.t("simulink","model");
x.t("exporting","pcore");
x.t("board","device");
x.t("include","edk");
x.t("netlisting","hardware");
x.t("netlisting","hdl");
x.t("netlisting","mode");
x.t("netlisting","time");
x.t("netlisting","flow");
x.t("netlisting","chosen");
x.t("netlisting","error");
x.t("netlisting","edk");
x.t("additional","clock");
x.t("figure","above");
x.t("plb","v4.6");
x.t("depending","user");
x.t("bus","type");
x.t("bus","default");
x.t("bus","v4.6");
x.t("bus","address");
x.t("bus","properly");
x.t("bus","plb");
x.t("bus","adaptor");
x.t("specific","basic");
x.t("specific","advanced");
x.t("specific","board");
x.t("specific","implementation");
x.t("implementation","tab");
x.t("generator","token");
x.t("generator","microblaze");
x.t("generator","block");
x.t("generator","clicking");
x.t("generator","parse");
x.t("generator","xps");
x.t("generator","designs");
x.t("generator","communicate");
x.t("generator","importing");
x.t("generator","design");
x.t("generator","push");
x.t("generator","connected");
x.t("generator","successfully");
x.t("generator","option");
x.t("generator","models");
x.t("generator","attached");
x.t("generator","information");
x.t("generated","microblaze");
x.t("generated","pcore");
x.t("generated","system");
x.t("generated","edk");
x.t("adaptor","axi4");
x.t("adaptor","netlisted");
x.t("import","wizard");
x.t("import","mode");
x.t("import","browse");
x.t("import","xps");
x.t("import","flow");
x.t("import","launch");
x.t("view","re-synchronizing");
x.t("view","shows");
x.t("view","button");
x.t("generate","modified");
x.t("subsystem","option");
x.t("subsystem","generator");
x.t("compilation","target");
x.t("circuit","automatically");
x.t("circuit","allows");
x.t("circuit","final");
x.t("systems","created");
x.t("models","exported");
x.t("models","edk");
x.t("netlisted","exported");
x.t("netlisted","together");
x.t("runs","automatically");
x.t("transfer","currently");
x.t("online","documentation");
x.t("attached","embedded");
x.t("attached","shared");
x.t("configure","delete");
x.t("configure","processor");
x.t("information","register");
x.t("information","microblaze");
x.t("information","implementation");
x.t("dual","clocks");
x.t("module","exporting");
x.t("inserted","design");
x.t("data","predicated");
x.t("shared","memory");
x.t("shared","memories");
x.t("clocks","edk");
x.t("uni-directional","registers");
x.t("in-frame","burst");
x.t("generation","hdl");
x.t("generation","flow");
x.t("re-synchronize","shared");
x.t("asynchronous","support");
x.t("above","shows");
x.t("above","including");
x.t("described","below");
x.t("port","interface");
x.t("port","connected");
x.t("called","plb_clk");
x.t("read-from","turning");
x.t("read-from","write-to");
x.t("modifications","made");
x.t("modifications","modify");
x.t("uncheck","co-debug");
x.t("two","design");
x.t("note","edk");
x.t("otherwise","base");
x.t("done","co-debug");
x.t("cross-frame","burst");
x.t("based","interconnect");
x.t("based","settings");
x.t("typically","interfaces");
x.t("created","enable");
x.t("created","using");
x.t("order","embedded");
x.t("driven","plb_clk");
x.t("driven","directly");
x.t("driven","sysgen_clk");
x.t("powerpc","processor");
x.t("burst","transfers");
x.t("burst","frame");
x.t("burst","transfer");
x.t("following","xilinx");
x.t("following","address");
x.t("system","uses");
x.t("system","specific");
x.t("system","generator");
x.t("either","slave");
x.t("either","read-from");
x.t("either","edk");
x.t("simulation","techniques");
x.t("simulation","uncheck");
x.t("model","basic");
x.t("used","user");
x.t("used","block");
x.t("using","xilinx");
x.t("using","bitstream");
x.t("using","system");
x.t("using","edk");
x.t("axi","interconnect");
x.t("containing","edk");
x.t("blockset","libraries");
x.t("blockset","edk");
x.t("development","kit");
x.t("tab","follows");
x.t("tab","parameters");
x.t("tab","initial");
x.t("tab","memory");
x.t("per","design");
x.t("edk","processor");
x.t("edk","imported");
x.t("edk","pcore");
x.t("edk","projects");
x.t("edk","import");
x.t("names","locations");
x.t("names","advanced");
x.t("hardware/software","co-design");
x.t("associated","processor");
x.t("operations","shared");
x.t("modify","original");
x.t("(edk)","edk");
x.t("memories","user");
x.t("memories","helps");
x.t("memories","microblaze");
x.t("memories","automatically");
x.t("memories","refresh");
x.t("memories","added");
x.t("memories","memory");
x.t("memories","figure");
x.t("memories","configure");
x.t("memories","shared");
x.t("memories","used");
x.t("memories","associated");
x.t("including","microblaze");
x.t("(beta)","option");
x.t("spartan","older");
x.t("generates","half");
x.t("generates","shared");
x.t("entries","memory");
x.t("flows","edk");
x.t("contains","ucf");
x.t("undesired","modifications");
x.t("resources","contain");
x.t("checked","default");
x.t("devices","online");
}
