function FileData_Pairs(x)
{
x.t("supports","multiple");
x.t("interfaces","applied");
x.t("interfaces","axi4-stream");
x.t("interfaces","term");
x.t("registers","shared");
x.t("example","shown");
x.t("example","tready/tvalid");
x.t("example","tdata");
x.t("example","dds");
x.t("example","port");
x.t("differently","regular");
x.t("transactions","axi4-lite");
x.t("provide","introduction");
x.t("available","edk");
x.t("nomenclature","using");
x.t("manner","role");
x.t("notes","tready/tvalid");
x.t("de-asserted","until");
x.t("de-asserted","transfer");
x.t("below","axi4-stream");
x.t("below","provides");
x.t("below","contains");
x.t("possible","connect");
x.t("library","entitled");
x.t("library","drawn");
x.t("parameter","dialog");
x.t("hardware","design");
x.t("hardware","software");
x.t("hardware","circuits");
x.t("hardware","utilize");
x.t("fpga","designs");
x.t("version","axi4");
x.t("fluent","axi4");
x.t("role","(slave)");
x.t("role","classname");
x.t("role","(master)");
x.t("drive","tready");
x.t("needs","fpgas");
x.t("applied","axi4-stream");
x.t("independently","pre-assert");
x.t("back-channel","separate");
x.t("5.0","block");
x.t("shown","below");
x.t("shown","above");
x.t("full","axi4-stream");
x.t("full","name");
x.t("breaking","multi-channel");
x.t("lightweight","version");
x.t("refer","topic");
x.t("refer","xilinx");
x.t("refer","respective");
x.t("refer","system");
x.t("create","hardware");
x.t("timing","diagram");
x.t("timing","loops");
x.t("background","color");
x.t("instance","m_axis_tvalid");
x.t("bidirectional","flow");
x.t("axi-streaming","signals");
x.t("once","tvalid");
x.t("once","asserted");
x.t("key","points");
x.t("related","group");
x.t("source","typically");
x.t("mechanism","transfer");
x.t("controlled","arm");
x.t("non-bursting","interface");
x.t("regular","non");
x.t("improve","readability");
x.t("components","breaking");
x.t("royalty-free","industry");
x.t("refers","axi4");
x.t("topic","titled");
x.t("handshake","handshaking");
x.t("handshake","master");
x.t("handshake","fundamental");
x.t("handshake","tready");
x.t("handshake","out-of-band");
x.t("coded","example");
x.t("transfers","may");
x.t("transfers","master");
x.t("(slave)","axis");
x.t("until","tready");
x.t("until","transfer");
x.t("until","data");
x.t("dialog","box");
x.t("dout","below");
x.t("interface","hardware");
x.t("interface","related");
x.t("interface","support");
x.t("interface","introduction");
x.t("interface","unidirectional");
x.t("interface","please");
x.t("interface","axi4-stream");
x.t("interface","found");
x.t("interface","standard");
x.t("interface","axi4-");
x.t("interface","concept");
x.t("interface","pertinent");
x.t("interface","memory");
x.t("interface","fourth");
x.t("interface","connections");
x.t("interface","defined");
x.t("interface","users");
x.t("interface","axi");
x.t("interface","referring");
x.t("memory-mapped","interface");
x.t("support","burst");
x.t("support","system");
x.t("circular","timing");
x.t("points","transfer");
x.t("entitled","axi4");
x.t("introduction","amba");
x.t("open","interface");
x.t("unidirectional","data");
x.t("flavor","amba");
x.t("please","refer");
x.t("titled","integrating");
x.t("change","value");
x.t("public","royalty-free");
x.t("mandatory","signals");
x.t("response","behavior");
x.t("compiler","5.0");
x.t("xilinx","microblaze");
x.t("xilinx","next-generation");
x.t("xilinx","arm");
x.t("xilinx","amba-axi4");
x.t("xilinx","blockset");
x.t("multiple","channels");
x.t("multiple","instances");
x.t("microblaze","processor");
x.t("however","recommendation");
x.t("channel","back-channel");
x.t("channel","signals");
x.t("channel","occurs");
x.t("channel","phase_tready");
x.t("channel","except");
x.t("default","design");
x.t("default","uncheck");
x.t("multi-channel","tdata");
x.t("advanced","extensible");
x.t("details","respect");
x.t("denotes","role");
x.t("data_tready","top");
x.t("phase_tdata","signals");
x.t("turned","default");
x.t("closely","ensure");
x.t("axi4-stream","supports");
x.t("axi4-stream","interfaces");
x.t("axi4-stream","refer");
x.t("axi4-stream","support");
x.t("axi4-stream","interface");
x.t("axi4-stream","channel");
x.t("axi4-stream","channels");
x.t("axi4-stream","name");
x.t("axi4-stream","axi4");
x.t("axi4-stream","allows");
x.t("axi4-stream","signals");
x.t("axi4-stream","blocks");
x.t("axi4-stream","means");
x.t("axi4-stream","signal");
x.t("axi4-stream","high-performance");
x.t("axi4-stream","tdata");
x.t("axi4-stream","master");
x.t("block","parameter");
x.t("block","shown");
x.t("block","care");
x.t("block","axi4-stream");
x.t("block","found");
x.t("block","name");
x.t("block","allows");
x.t("block","presents");
x.t("block","rst");
x.t("block","edk");
x.t("care","connecting");
x.t("color","coded");
x.t("color","block");
x.t("top","two");
x.t("cosmetic","netlisting");
x.t("interconnect","fpga");
x.t("found","xilinx");
x.t("found","http://www.xilinx.com/ipcenter/axi4.htm");
x.t("found","system");
x.t("need","fluent");
x.t("need","create");
x.t("need","propagate");
x.t("indicates","valid");
x.t("axi4-lite","lightweight");
x.t("axi4-lite","axi4-stream");
x.t("during","cycle");
x.t("combinatorially","generated");
x.t("group","channels");
x.t("add","additional");
x.t("channelname","signalname");
x.t("permitted","across");
x.t("referred","sticky");
x.t("requirements","compared");
x.t("channels","however");
x.t("channels","grouped");
x.t("channels","tdata");
x.t("channels","given");
x.t("channels","belonging");
x.t("channels","data");
x.t("channels","operate");
x.t("processor","block");
x.t("processor","via");
x.t("processor","custom");
x.t("processor","users");
x.t("via","plb46");
x.t("high","transfers");
x.t("high","cycle");
x.t("cycle","tready");
x.t("cycle","tvalid");
x.t("cycle","following");
x.t("defaults","value");
x.t("vendors","public");
x.t("common","axi4-stream");
x.t("direction","axi4-steam");
x.t("direction","data");
x.t("direction","information");
x.t("direction","tvalid");
x.t("direction","either");
x.t("axis","classname");
x.t("forward","flow");
x.t("data_tvalid","data_tdata");
x.t("name","breaking");
x.t("name","shorting");
x.t("name","shortening");
x.t("name","used");
x.t("box","reveal");
x.t("axi4","nomenclature");
x.t("axi4","non-bursting");
x.t("axi4","refers");
x.t("axi4","interface");
x.t("axi4","memory-mapped");
x.t("axi4","support");
x.t("axi4","details");
x.t("axi4","axi4-stream");
x.t("axi4","axi4-lite");
x.t("axi4","(memory-mapped)");
x.t("axi4","blocks");
x.t("axi4","memory");
x.t("axi4","draw");
x.t("axi4","specification");
x.t("axi4","used");
x.t("addresses","needs");
x.t("sampled","high");
x.t("custom","logic");
x.t("signalname","notes");
x.t("signalname","instance");
x.t("signalname","s_axis_control_tdata");
x.t("dependent","value");
x.t("part","axi4-stream");
x.t("part","separate");
x.t("limit","interoperability");
x.t("reduced","signaling");
x.t("integrating","processor");
x.t("rule","tready");
x.t("rule","prevents");
x.t("provides","example");
x.t("alternatively","tready");
x.t("proffer","axi4-stream");
x.t("standard","widely");
x.t("standard","amba");
x.t("completed","tready");
x.t("industry","standard");
x.t("wires","following");
x.t("map","interface");
x.t("respective","flavor");
x.t("allows","tready");
x.t("allows","users");
x.t("retracted","aborted");
x.t("destination","typically");
x.t("axi4-","lite");
x.t("top-most","input");
x.t("reveal","full");
x.t("next-generation","interconnect");
x.t("worked","closely");
x.t("three","different");
x.t("flow","control");
x.t("flow","master");
x.t("flow","edk");
x.t("chosen","interface");
x.t("concept","master");
x.t("concept","axi");
x.t("assertion","default");
x.t("assertion","tready");
x.t("assertion","tvalid");
x.t("combinatorial","paths");
x.t("input","slave");
x.t("input","output");
x.t("input","port");
x.t("ports","data_tvalid");
x.t("contain","multiple");
x.t("adopted","xilinx");
x.t("designs","xilinx");
x.t("co-design","refer");
x.t("signals","channel");
x.t("signals","need");
x.t("signals","permitted");
x.t("signals","part");
x.t("signals","master");
x.t("signals","given");
x.t("signals","tstrb");
x.t("signals","named");
x.t("signals","propagate");
x.t("signals","optional");
x.t("signals","tvalid");
x.t("pertinent","describe");
x.t("allowing","bidirectional");
x.t("present","axi4-stream");
x.t("3rd-party","vendors");
x.t("respect","system");
x.t("documents","found");
x.t("(memory-mapped)","support");
x.t("logic","design");
x.t("logic","edk");
x.t("registered","driven");
x.t("blocks","library");
x.t("blocks","proffer");
x.t("blocks","present");
x.t("blocks","port");
x.t("blocks","system");
x.t("shorting","turned");
x.t("display","shortened");
x.t("fifos","shared");
x.t("hold","data");
x.t("occurs","full");
x.t("occurs","tready");
x.t("arm","worked");
x.t("arm","adopted");
x.t("collection","interfaces");
x.t("connecting","memories");
x.t("handshaking","key");
x.t("handshaking","tready/tvalid");
x.t("depend","tready");
x.t("depend","tvalid");
x.t("means","tready");
x.t("accept","data");
x.t("http://www.xilinx.com/ipcenter/axi4.htm","axi4");
x.t("control","signals");
x.t("control","busname");
x.t("control","tdata");
x.t("control","data");
x.t("control","tvalid");
x.t("design","convention");
x.t("design","done");
x.t("design","using");
x.t("widely","used");
x.t("pre-assert","tready");
x.t("signal","handshake");
x.t("signal","until");
x.t("signal","names");
x.t("extensible","interface");
x.t("different","flavors");
x.t("high-performance","streaming");
x.t("software","co-design");
x.t("busname","channelname");
x.t("busname","distinguishes");
x.t("particular","tdata");
x.t("cannot","de-asserted");
x.t("cannot","combinatorially");
x.t("cannot","depend");
x.t("sticky","tvalid");
x.t("may","de-asserted");
x.t("may","change");
x.t("may","dependent");
x.t("may","limit");
x.t("may","retracted");
x.t("may","asserted");
x.t("axi-stream","blocks");
x.t("detailed","information");
x.t("amba-axi4","documents");
x.t("presents","users");
x.t("tready/tvalid","handshake");
x.t("tready/tvalid","handshaking");
x.t("flavors","axi4");
x.t("section","provide");
x.t("tid","tdest");
x.t("lite","axi4-stream");
x.t("purpose","section");
x.t("tdata","axi-streaming");
x.t("tdata","axi4-stream");
x.t("tdata","add");
x.t("tdata","signalname");
x.t("tdata","contain");
x.t("tdata","broken");
x.t("tdata","port");
x.t("information-carrying","signals");
x.t("information-carrying","control");
x.t("omitted","defaults");
x.t("grouped","together");
x.t("master","axi4-stream");
x.t("master","indicates");
x.t("master","forward");
x.t("master","destination");
x.t("master","produces");
x.t("master","slave");
x.t("signaling","requirements");
x.t("term","amba");
x.t("centric","users");
x.t("adds","rule");
x.t("completes","cycle");
x.t("drawn","slightly");
x.t("slightly","differently");
x.t("memory","map");
x.t("memory","centric");
x.t("option","block");
x.t("option","connect");
x.t("produces","data");
x.t("consumes","data");
x.t("given","background");
x.t("given","channel");
x.t("shortening","example");
x.t("shortening","purely");
x.t("broken","example");
x.t("broken","tdata");
x.t("imaginary","components");
x.t("ensure","axi4");
x.t("documentation","axi4");
x.t("documentation","information");
x.t("together","color");
x.t("together","combinatorial");
x.t("slave","interfaces");
x.t("slave","drive");
x.t("slave","interface");
x.t("slave","reduced");
x.t("slave","input");
x.t("slave","allowing");
x.t("slave","master");
x.t("slave","consumes");
x.t("slave","output");
x.t("slave","immediately");
x.t("slave","except");
x.t("compared","axi4");
x.t("fundamental","concept");
x.t("tstrb","tuser");
x.t("dds","compiler");
x.t("fourth","generation");
x.t("instances","class");
x.t("qualified","tready/tvalid");
x.t("qualified","tvalid");
x.t("latency","note");
x.t("amba","interface");
x.t("amba","axi4");
x.t("amba","axi");
x.t("tready","possible");
x.t("tready","independently");
x.t("tready","sampled");
x.t("tready","rule");
x.t("tready","assertion");
x.t("tready","registered");
x.t("tready","depend");
x.t("tready","signal");
x.t("tready","may");
x.t("tready","tdata");
x.t("tready","information-carrying");
x.t("tready","omitted");
x.t("tready","slave");
x.t("tready","tvalid");
x.t("tready","asserted");
x.t("tready","used");
x.t("tready","minimize");
x.t("tready","propagates");
x.t("axi4-steam","point-to-point");
x.t("named","following");
x.t("aborted","once");
x.t("value","until");
x.t("value","may");
x.t("value","tready");
x.t("value","tvalid");
x.t("recommendation","multiple");
x.t("netlisting","occurs");
x.t("additional","logic");
x.t("attention","amba");
x.t("generator","available");
x.t("generator","xilinx");
x.t("generator","block");
x.t("generator","common");
x.t("generator","axi4");
x.t("generator","blocks");
x.t("generator","detailed");
x.t("generator","documentation");
x.t("generator","convenience");
x.t("generator","system");
x.t("generator","individual");
x.t("generator","axi");
x.t("connections","point-to-point");
x.t("bus-agnostic","interface");
x.t("propagate","source");
x.t("propagate","direction");
x.t("propagate","opposite");
x.t("classname","control");
x.t("classname","busname");
x.t("classname","(axi4-stream)");
x.t("generated","tvalid");
x.t("convention","slave");
x.t("s_axis_control_tdata","denotes");
x.t("valid","beat");
x.t("beat","until");
x.t("beat","data");
x.t("diagram","below");
x.t("transfer","completed");
x.t("transfer","completes");
x.t("transfer","given");
x.t("transfer","opposite");
x.t("output","ports");
x.t("output","signals");
x.t("output","cannot");
x.t("separate","channel");
x.t("separate","axi4-stream");
x.t("separate","tready/tvalid");
x.t("belonging","interface");
x.t("purely","cosmetic");
x.t("convenience","users");
x.t("data","transfers");
x.t("data","wires");
x.t("data","flow");
x.t("data","assertion");
x.t("data","broken");
x.t("data","slave");
x.t("data","qualified");
x.t("data","beat");
x.t("data","exchanged");
x.t("data","received");
x.t("data","system");
x.t("data","naming");
x.t("draw","attention");
x.t("information","hardware");
x.t("information","slave");
x.t("information","amba");
x.t("optional","information-carrying");
x.t("interoperability","generates");
x.t("defined","controlled");
x.t("shared","registers");
x.t("shared","fifos");
x.t("shared","memories");
x.t("opposite","direction");
x.t("distinguishes","multiple");
x.t("exchanged","master");
x.t("received","alternatively");
x.t("data_tdata","belong");
x.t("generation","amba");
x.t("tvalid","once");
x.t("tvalid","high");
x.t("tvalid","signalname");
x.t("tvalid","assertion");
x.t("tvalid","combinatorial");
x.t("tvalid","hold");
x.t("tvalid","pre-assert");
x.t("tvalid","cannot");
x.t("tvalid","may");
x.t("tvalid","axi-stream");
x.t("tvalid","slave");
x.t("tvalid","tready");
x.t("tvalid","asserted");
x.t("tvalid","axi");
x.t("tvalid","denoted");
x.t("specification","please");
x.t("specification","addresses");
x.t("port","dout");
x.t("port","data_tready");
x.t("port","name");
x.t("port","correctly");
x.t("port","groupings");
x.t("port","names");
x.t("above","top-most");
x.t("phase_tready","phase_tvalid");
x.t("rst","example");
x.t("uncheck","display");
x.t("users","need");
x.t("users","option");
x.t("users","bus-agnostic");
x.t("users","data");
x.t("users","connect");
x.t("note","combinatorial");
x.t("two","output");
x.t("readability","block");
x.t("done","system");
x.t("asserted","response");
x.t("asserted","during");
x.t("asserted","assertion");
x.t("asserted","signals");
x.t("asserted","cannot");
x.t("asserted","may");
x.t("asserted","tready");
x.t("asserted","tvalid");
x.t("prevents","circular");
x.t("typically","master");
x.t("typically","slave");
x.t("non","axi4-stream");
x.t("correctly","byte-aligned");
x.t("burst","transactions");
x.t("created","system");
x.t("plb46","axi4");
x.t("tdest","qualified");
x.t("immediately","accept");
x.t("driven","cycle");
x.t("operate","together");
x.t("real","imaginary");
x.t("system","generator");
x.t("used","mechanism");
x.t("used","name");
x.t("used","3rd-party");
x.t("used","purpose");
x.t("following","manner");
x.t("following","documentation");
x.t("following","tvalid");
x.t("(master)","axis");
x.t("loops","timing");
x.t("except","tready");
x.t("either","part");
x.t("individual","channels");
x.t("axi","interface");
x.t("axi","open");
x.t("axi","advanced");
x.t("axi","control");
x.t("axi","adds");
x.t("using","flow");
x.t("using","system");
x.t("streaming","interface");
x.t("connect","hardware");
x.t("connect","axi4-stream");
x.t("connect","processor");
x.t("class","particular");
x.t("minimize","latency");
x.t("groupings","blocks");
x.t("tuser","tlast");
x.t("across","separate");
x.t("blockset","library");
x.t("referring","collection");
x.t("edk","processor");
x.t("m_axis_tvalid","denotes");
x.t("(axi4-stream)","tvalid");
x.t("tlast","tid");
x.t("behavior","referred");
x.t("paths","input");
x.t("out-of-band","signal");
x.t("phase_tvalid","phase_tdata");
x.t("names","option");
x.t("names","shortened");
x.t("shortened","improve");
x.t("shortened","port");
x.t("fpgas","axi");
x.t("point-to-point","interface");
x.t("point-to-point","three");
x.t("memories","chosen");
x.t("memories","edk");
x.t("describe","direction");
x.t("circuits","created");
x.t("utilize","shared");
x.t("propagates","opposite");
x.t("naming","conventions");
x.t("conventions","axi4-stream");
x.t("generates","tready");
x.t("denoted","mandatory");
x.t("belong","axi4-stream");
x.t("contains","real");
}
