function FileData_Pairs(x)
{
x.t("equal","product");
x.t("equal","optimum");
x.t("double-clicking","icon");
x.t("precision","parameter");
x.t("precision","full");
x.t("precision","single");
x.t("precision","bits");
x.t("precision","number");
x.t("precision","floating-point");
x.t("precision","option");
x.t("precision","signed");
x.t("precision","fixed-point");
x.t("precision","represent");
x.t("overflow","refer");
x.t("overflow","quantization");
x.t("below","specify");
x.t("parameter","dialog");
x.t("parameter","allows");
x.t("version","data");
x.t("full","precision");
x.t("full","block");
x.t("implement","using");
x.t("sufficient","precision");
x.t("refer","section");
x.t("description","otherwise");
x.t("v11.2","v11.2");
x.t("v11.2","floating-");
x.t("binary","point");
x.t("always","full");
x.t("don\u2019t","need");
x.t("double","precision");
x.t("double","specifies");
x.t("user","defined");
x.t("topic","common");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("implemented","unsigned");
x.t("field","below");
x.t("uses","sufficient");
x.t("uses","xilinx");
x.t("uses","behavioral");
x.t("uses","following");
x.t("hdl","description");
x.t("hdl","otherwise");
x.t("hdl","model");
x.t("cmult","cmult");
x.t("cmult","xilinx");
x.t("cmult","block");
x.t("cmult","multiplier");
x.t("icon","simulink");
x.t("provided","least");
x.t("evaluates","constant");
x.t("basic","tab");
x.t("type","xlfix");
x.t("type","floating-point");
x.t("type","value");
x.t("xilinx","cmult");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("total","bits");
x.t("listed","following");
x.t("product","input");
x.t("saturated","needed");
x.t("needed","positive");
x.t("behavioral","hdl");
x.t("checks","latency");
x.t("speed","parameters");
x.t("single","precision");
x.t("single","specifies");
x.t("block","parameter");
x.t("block","uses");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","ram");
x.t("block","parameters");
x.t("block","explained");
x.t("block","implements");
x.t("block","latency");
x.t("xlfix","true");
x.t("invoked","double-clicking");
x.t("need","full");
x.t("(false)","system");
x.t("bits","double");
x.t("bits","custom");
x.t("bits","specifies");
x.t("bits","user-defined");
x.t("bits","and/or");
x.t("quantization","overflow");
x.t("quantization","refer");
x.t("quantization","implementation");
x.t("dsp","-1l");
x.t("specified","fixed-point");
x.t("true","virtex");
x.t("true","constant");
x.t("ram","block");
x.t("ram","test");
x.t("test","optimum");
x.t("test","imply");
x.t("libraries","math");
x.t("box","invoked");
x.t("common","options");
x.t("follows","constant");
x.t("exactly","specified");
x.t("virtex","device");
x.t("virtex","spartan");
x.t("custom","activates");
x.t("3,3e","dsp");
x.t("parameters","implement");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("zero","least");
x.t("floating","point");
x.t("reduced","number");
x.t("matlab","expression");
x.t("optimized","speed");
x.t("boxes","xilinx");
x.t("allows","specify");
x.t("produced","optimized");
x.t("explained","topic");
x.t("multiplier","v11.2");
x.t("multiplier","note");
x.t("input","less");
x.t("input","constant");
x.t("input","data");
x.t("width","input");
x.t("width","constant");
x.t("width","output");
x.t("width","bit");
x.t("width","exponent");
x.t("width","fraction");
x.t("width","specify");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","multiplier");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","families");
x.t("device","kintex");
x.t("selected","(false)");
x.t("selected","system");
x.t("point","floating-point");
x.t("point","constant");
x.t("point","fixed-point");
x.t("point","output");
x.t("point","arithmetic");
x.t("point","operator");
x.t("point","position");
x.t("error","user");
x.t("supported","given");
x.t("options","block");
x.t("number","total");
x.t("number","bits");
x.t("number","number");
x.t("number","bit");
x.t("number","unsigned");
x.t("number","negative");
x.t("implements","gain");
x.t("truncated","constant");
x.t("length","supported");
x.t("may","constant");
x.t("cannot","expressed");
x.t("specifies","double");
x.t("specifies","single");
x.t("specifies","whether");
x.t("specifies","bit");
x.t("user-defined","precision");
x.t("whether","distributed");
x.t("index","xilinx");
x.t("section","overflow");
x.t("floating-","point");
x.t("-1l","cmult");
x.t("-1l","-1l");
x.t("floating-point","precision");
x.t("floating-point","index");
x.t("floating-point","floating-point");
x.t("floating-point","data");
x.t("least","equal");
x.t("least","significant");
x.t("option","allows");
x.t("option","selected");
x.t("given","configuration");
x.t("greater","bit");
x.t("families","core");
x.t("and/or","fractional");
x.t("less","greater");
x.t("less","bit");
x.t("optimum","pipeline");
x.t("optimum","pipelining");
x.t("simulink","model");
x.t("activates","field");
x.t("latency","provided");
x.t("latency","values");
x.t("configuration","block");
x.t("value","implemented");
x.t("value","matlab");
x.t("value","truncated");
x.t("value","may");
x.t("value","less");
x.t("value","value");
x.t("value","signed");
x.t("value","rounded");
x.t("core","parameters");
x.t("core","produced");
x.t("core","selected");
x.t("constant","block");
x.t("constant","input");
x.t("constant","cannot");
x.t("constant","value");
x.t("constant","fixed-point");
x.t("constant","expression");
x.t("constant","bit");
x.t("specific","basic");
x.t("specific","implementation");
x.t("signed","fixed-point");
x.t("signed","complement");
x.t("signed","comp");
x.t("implementation","tab");
x.t("pipeline","length");
x.t("fixed-point","precision");
x.t("fixed-point","type");
x.t("fixed-point","fixed-point");
x.t("fixed-point","output");
x.t("fixed-point","data");
x.t("fixed-point","arithmetic");
x.t("generator","uses");
x.t("generator","block");
x.t("generator","internally");
x.t("pipelining","checks");
x.t("expression","evaluates");
x.t("expression","constant");
x.t("represent","result");
x.t("output","equal");
x.t("output","precision");
x.t("output","always");
x.t("output","quantization");
x.t("output","number");
x.t("output","signed");
x.t("output","tab");
x.t("output","unsigned");
x.t("location","binary");
x.t("data","type");
x.t("data","data");
x.t("data","sheet");
x.t("internally","uses");
x.t("bit","binary");
x.t("bit","zero");
x.t("bit","width");
x.t("bit","location");
x.t("result","without");
x.t("defined","don\u2019t");
x.t("values","pass");
x.t("exponent","width");
x.t("sheet","spartan");
x.t("fraction","width");
x.t("otherwise","uses");
x.t("otherwise","core");
x.t("note","option");
x.t("positive","value");
x.t("significant","bit");
x.t("fractional","bits");
x.t("imply","core");
x.t("complement","number");
x.t("following","xilinx");
x.t("following","conditions");
x.t("model","basic");
x.t("model","simulation");
x.t("rounded","saturated");
x.t("system","generator");
x.t("simulation","following");
x.t("used","block");
x.t("arithmetic","floating");
x.t("arithmetic","output");
x.t("using","specifies");
x.t("v6.0","v6.0");
x.t("blockset","cmult");
x.t("blockset","libraries");
x.t("tab","precision");
x.t("tab","behavioral");
x.t("tab","follows");
x.t("tab","parameters");
x.t("expressed","exactly");
x.t("distributed","ram");
x.t("pass","test");
x.t("kintex","device");
x.t("operator","output");
x.t("operator","v6.0");
x.t("without","error");
x.t("unsigned","number");
x.t("unsigned","output");
x.t("position","binary");
x.t("spartan","device");
x.t("math","floating-point");
x.t("conditions","true");
x.t("gain","operator");
x.t("negative","value");
x.t("specify","reduced");
x.t("specify","output");
x.t("specify","exponent");
x.t("specify","fraction");
x.t("comp","output");
}
