function FileData_Pairs(x)
{
x.t("registers","implement");
x.t("example","current");
x.t("example","state");
x.t("example","consider");
x.t("states","input");
x.t("states","number");
x.t("states","represents");
x.t("states","ceil");
x.t("double-clicking","icon");
x.t("method","implementing");
x.t("possible","input");
x.t("columns","respectively");
x.t("below","table");
x.t("pattern","1011");
x.t("implement","state");
x.t("implement","moore");
x.t("implement","transition");
x.t("1011","serial");
x.t("shown","below");
x.t("lists","next");
x.t("mcode","block");
x.t("realized","single");
x.t("table","shown");
x.t("table","lists");
x.t("table","discussed");
x.t("table","gives");
x.t("table","therefore");
x.t("variables","reference");
x.t("various","state");
x.t("current","state");
x.t("current","input");
x.t("discussed","above");
x.t("outputs","registered");
x.t("dialog","box");
x.t("implemented","high");
x.t("implemented","using");
x.t("(k)","total");
x.t("state","variables");
x.t("state","current");
x.t("state","state");
x.t("state","register");
x.t("state","machine");
x.t("state","input");
x.t("state","registered");
x.t("state","logic");
x.t("state","next");
x.t("state","moore");
x.t("state","transition");
x.t("state","machines");
x.t("state","represented");
x.t("state","matrix");
x.t("state","output");
x.t("state","column");
x.t("icon","simulink");
x.t("register","block");
x.t("necessary","various");
x.t("obtained","next");
x.t("xilinx","virtex");
x.t("xilinx","reference");
x.t("total","number");
x.t("state/output","table");
x.t("speed","dedicated");
x.t("needed","1536");
x.t("limitations","described");
x.t("single","block");
x.t("single","port");
x.t("block","implement");
x.t("block","implemented");
x.t("block","ram");
x.t("block","provides");
x.t("block","parameters");
x.t("block","configured");
x.t("block","memory");
x.t("block","diagram");
x.t("block","distributed");
x.t("1536","2048");
x.t("datasheet","single");
x.t("invoked","double-clicking");
x.t("machine","states");
x.t("machine","example");
x.t("machine","xilinx");
x.t("machine","block");
x.t("machine","finite");
x.t("machine","recognize");
x.t("machine","moore");
x.t("machine","given");
x.t("machine","whose");
x.t("machine","described");
x.t("machine","using");
x.t("bits","state");
x.t("bits","needed");
x.t("bits","block");
x.t("bits","number");
x.t("bits","depth");
x.t("bits","used");
x.t("ram","bits");
x.t("ram","width");
x.t("ram","configured");
x.t("ram","sizes");
x.t("ram","runs");
x.t("ram","output");
x.t("ram","following");
x.t("desired","sequence");
x.t("high","speed");
x.t("box","invoked");
x.t("2560","768");
x.t("14336","block");
x.t("virtex","device");
x.t("constructed","follows");
x.t("follows","rows");
x.t("2048","2560");
x.t("finite","state");
x.t("provides","method");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("zero","latency");
x.t("fast","efficient");
x.t("array","obtained");
x.t("array","column");
x.t("input","example");
x.t("input","outputs");
x.t("input","bits");
x.t("input","next");
x.t("input","convenient");
x.t("input","value");
x.t("input","values");
x.t("input","character");
x.t("device","transition");
x.t("stream","bits");
x.t("width","state");
x.t("width","depth");
x.t("equations","(k)");
x.t("registered","realized");
x.t("registered","moore");
x.t("recognize","pattern");
x.t("equivalent","transition");
x.t("configured","next");
x.t("configured","lookup");
x.t("logic","implemented");
x.t("logic","state");
x.t("logic","block");
x.t("sizes","necessary");
x.t("respectively","state");
x.t("next","state");
x.t("next","state/output");
x.t("serial","stream");
x.t("number","states");
x.t("number","possible");
x.t("number","bits");
x.t("number","input");
x.t("number","next");
x.t("number","rows");
x.t("function","registers");
x.t("function","matrix");
x.t("function","output");
x.t("function","machine's");
x.t("150","mhz");
x.t("indicating","detection");
x.t("represents","current");
x.t("represents","input");
x.t("represents","number");
x.t("ways","implement");
x.t("row","index");
x.t("index","represents");
x.t("index","matrix");
x.t("matrices","correspond");
x.t("implementing","moore");
x.t("768","100");
x.t("moore","state");
x.t("moore","machine");
x.t("purpose","discussion");
x.t("reference","block");
x.t("reference","blockset");
x.t("transition","table");
x.t("transition","function");
x.t("transition","diagram");
x.t("mhz","xilinx");
x.t("rows","columns");
x.t("rows","matrices");
x.t("correspond","current");
x.t("dedicated","block");
x.t("machines","number");
x.t("machines","system");
x.t("designing","moore");
x.t("log2","(s)");
x.t("memory","implementation");
x.t("affect","output");
x.t("given","equations");
x.t("100","14336");
x.t("whose","output");
x.t("e.g","bit");
x.t("e.g","using");
x.t("consider","problem");
x.t("discussion","transition");
x.t("simulink","model");
x.t("latency","number");
x.t("represented","matrix");
x.t("represented","unsigned");
x.t("matrix","next");
x.t("matrix","number");
x.t("matrix","represents");
x.t("matrix","output");
x.t("matrix","column");
x.t("convenient","number");
x.t("alphabet","character");
x.t("value","affect");
x.t("value","output");
x.t("ceil","log2");
x.t("core","datasheet");
x.t("implementation","fast");
x.t("gives","examples");
x.t("generator","e.g");
x.t("runs","150");
x.t("(s)","number");
x.t("output","state");
x.t("output","array");
x.t("output","logic");
x.t("output","function");
x.t("output","indicating");
x.t("output","moore");
x.t("output","result");
x.t("output","mapping");
x.t("diagram","equivalent");
x.t("diagram","ways");
x.t("sequence","input");
x.t("depth","state");
x.t("depth","limitations");
x.t("bit","input");
x.t("result","current");
x.t("detection","desired");
x.t("examples","block");
x.t("values","e.g");
x.t("described","core");
x.t("described","following");
x.t("efficient","example");
x.t("character","purpose");
x.t("character","represented");
x.t("character","corresponding");
x.t("problem","designing");
x.t("above","constructed");
x.t("port","block");
x.t("integer","row");
x.t("integer","alphabet");
x.t("column","input");
x.t("column","index");
x.t("mapping","represented");
x.t("following","table");
x.t("following","block");
x.t("system","generator");
x.t("corresponding","output");
x.t("model","next");
x.t("used","implement");
x.t("using","mcode");
x.t("using","block");
x.t("using","distributed");
x.t("lookup","table");
x.t("blockset","moore");
x.t("distributed","ram");
x.t("distributed","memory");
x.t("therefore","zero");
x.t("unsigned","integer");
x.t("machine's","current");
}
