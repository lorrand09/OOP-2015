function FileData_Pairs(x)
{
x.t("bose-chaudhuri-hocquenghem","(bch)");
x.t("excellent","tools");
x.t("tells","width");
x.t("tells","number");
x.t("tells","decoder");
x.t("clock","symbols");
x.t("clock","enable");
x.t("double-clicking","icon");
x.t("255","223");
x.t("255","239");
x.t("root","generator");
x.t("example","intelsat");
x.t("four","values");
x.t("equal","specified");
x.t("supports","128");
x.t("reed-","solomon");
x.t("err_cnt","type");
x.t("err_cnt","fail");
x.t("err_cnt","presents");
x.t("available","erasure");
x.t("available","purchase");
x.t("(219)","implements");
x.t("below","variable");
x.t("below","symbol");
x.t("prime","generator");
x.t("256","variable");
x.t("possible","reduce");
x.t("possible","values");
x.t("parameter","dialog");
x.t("digital","video");
x.t("digital","communications");
x.t("digital","storage");
x.t("detected","errors");
x.t("rffd","type");
x.t("rffd","value");
x.t("alongside","decoded");
x.t("defines","values");
x.t("version","data");
x.t("solomon","decoder");
x.t("solomon","encoder");
x.t("full","length");
x.t("modeling","channels");
x.t("(208)","implements");
x.t("201","shortened");
x.t("needs","handle");
x.t("rfd","optional");
x.t("erase_cnt","available");
x.t("erase_cnt","type");
x.t("erase_cnt","data_del");
x.t("describes","ports");
x.t("currently","presented");
x.t("delayed","block");
x.t("delayed","logicore");
x.t("delayed","data");
x.t("table","below");
x.t("blk_strt","presents");
x.t("blk_strt","produces");
x.t("blk_strt","blk_end");
x.t("ufix_s_0","width");
x.t("scaling","factor");
x.t("required","possible");
x.t("required","puncture");
x.t("enters","illegal");
x.t("204","188");
x.t("(225)","implements");
x.t("formula","specifies");
x.t("video","broadcasting");
x.t("sub-space","-dimensional");
x.t("nature","communications");
x.t("enabled","presents");
x.t("205","shortened");
x.t("derived","specified");
x.t("continuous","decoding");
x.t("topic","common");
x.t("field","scaling");
x.t("field","derived");
x.t("field","polynomial");
x.t("field","called");
x.t("field","elements");
x.t("outputs","data_out");
x.t("outputs","bit_err_0_to_1");
x.t("until","first");
x.t("last","information");
x.t("last","symbol");
x.t("dout","presents");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("(k)","tells");
x.t("uses","following");
x.t("errors","erasures");
x.t("errors","corrected");
x.t("errors","number");
x.t("errors","recover");
x.t("errors","decoder");
x.t("errors","systems");
x.t("provided","n-k");
x.t("interface","xilinx");
x.t("data_out","blk_strt");
x.t("data_out","type");
x.t("data_out","data_in");
x.t("data_out","original");
x.t("data_out","data_del");
x.t("data_out","presents");
x.t("data_out","produces");
x.t("icon","simulink");
x.t("207","187");
x.t("support","continuous");
x.t("support","widths");
x.t("state","machine");
x.t("state","memory");
x.t("type","ufix_s_0");
x.t("type","errors");
x.t("type","data_out");
x.t("type","ufix_1_0");
x.t("type","ufix_b_0");
x.t("type","data_del");
x.t("type","decoder");
x.t("type","err_found");
x.t("type","blk_end");
x.t("erasures","during");
x.t("erasures","symbols");
x.t("erasures","corrected");
x.t("erasures","decoder");
x.t("resets","decoder");
x.t("resets","itself");
x.t("sample","data_in");
x.t("sample","period");
x.t("sample","first");
x.t("sample","periods");
x.t("basic","tab");
x.t("208","192");
x.t("pins","tab");
x.t("vector","space");
x.t("reset","outputs");
x.t("reset","signal");
x.t("reset","asserted");
x.t("time","dout");
x.t("time","data_out");
x.t("time","division");
x.t("time","sync");
x.t("erasure","decoding");
x.t("erasure","signal");
x.t("pin","clock");
x.t("(r)","define");
x.t("xilinx","web");
x.t("xilinx","logicore");
x.t("xilinx","decoder");
x.t("xilinx","blockset");
x.t("mobile","communications");
x.t("data_in","erase_cnt");
x.t("data_in","blk_strt");
x.t("data_in","input");
x.t("data_in","sync");
x.t("data_in","decoder");
x.t("data_in","presents");
x.t("data_in","mark_out");
x.t("ccsds","implements");
x.t("ccsds","consultative");
x.t("polynomial","primitive");
x.t("polynomial","specifies");
x.t("polynomial","(x)");
x.t("polynomial","generator");
x.t("polynomial","used");
x.t("polynomial","symbol");
x.t("r_in","definition");
x.t("r_in","input");
x.t("r_in","core");
x.t("r_in","actually");
x.t("r_in","values");
x.t("legal_r_vector=14,16,18,20","number");
x.t("listed","table");
x.t("listed","following");
x.t("channel","simulink");
x.t("probabilities","block");
x.t("block's","length");
x.t("needed","represent");
x.t("primitive","element");
x.t("primitive","relatively");
x.t("primitive","value");
x.t("default","polynomial");
x.t("default","polynomials");
x.t("speed","optimization");
x.t("division","multiplexed");
x.t("original","delayed");
x.t("start","block");
x.t("start","decoding");
x.t("start","specifies");
x.t("new","block's");
x.t("advanced","television");
x.t("(126)","implements");
x.t("element","symbol");
x.t("denotes","symbol");
x.t("block","parameter");
x.t("block","blk_strt");
x.t("block","uses");
x.t("block","interface");
x.t("block","data_out");
x.t("block","data_in");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","new");
x.t("block","processed");
x.t("block","synchronously");
x.t("block","codes");
x.t("block","parameters");
x.t("block","explained");
x.t("block","three");
x.t("block","mark_in");
x.t("block","automatic");
x.t("block","select");
x.t("block","signal");
x.t("block","length");
x.t("block","code");
x.t("block","given");
x.t("block","latency");
x.t("block","value");
x.t("block","blk_end");
x.t("block","specification");
x.t("block","(n)");
x.t("block","inputs");
x.t("block","specify");
x.t("block","contains");
x.t("recovered","case");
x.t("223","full");
x.t("1033","2053");
x.t("size","slightly");
x.t("size","core");
x.t("licensed","core");
x.t("reed-solomon","codes");
x.t("reed-solomon","decoder");
x.t("reed-solomon","code");
x.t("reed-solomon","(rs)");
x.t("able","handle");
x.t("indicates","default");
x.t("indicates","symbol");
x.t("info","end");
x.t("invoked","double-clicking");
x.t("iess-308","(219)");
x.t("iess-308","(208)");
x.t("iess-308","(225)");
x.t("iess-308","(126)");
x.t("iess-308","(194)");
x.t("iess-308","specification");
x.t("iess-308","(all)");
x.t("iess-308","intelsat");
x.t("112","shortened");
x.t("file","defines");
x.t("file","coe");
x.t("file","specifies");
x.t("file","used");
x.t("beginning","first");
x.t("treated","erasure");
x.t("during","decoding");
x.t("225","205");
x.t("relatively","prime");
x.t("machine","self");
x.t("multiplexed","channels");
x.t("bits","needed");
x.t("bits","symbols");
x.t("bits","wide");
x.t("bits","parameters");
x.t("bits","specifies");
x.t("bits","adds");
x.t("bits","received");
x.t("bits","tagging");
x.t("bits","symbol");
x.t("presented","din");
x.t("check","symbols");
x.t("check","symbol");
x.t("radix=10","legal_r_vector=14,16,18,20");
x.t("fails","recover");
x.t("possibility","depends");
x.t("depends","code");
x.t("ufix_1_0","err_cnt");
x.t("ufix_1_0","rffd");
x.t("ufix_1_0","type");
x.t("ufix_1_0","info");
x.t("ufix_1_0","ready");
x.t("atsc","advanced");
x.t("atsc","implements");
x.t("large","symbol");
x.t("dsp","-1l");
x.t("handle","erasures");
x.t("handle","puncturing");
x.t("high","least");
x.t("high","probability");
x.t("channels","processed");
x.t("channels","estimating");
x.t("channels","specifies");
x.t("channels","puncture");
x.t("decoded","symbols");
x.t("decoded","din");
x.t("processed","decoder");
x.t("processed","encoder");
x.t("un-decoded","symbols");
x.t("desired","choices");
x.t("specified","number");
x.t("specified","decimal");
x.t("requires","values");
x.t("synchronously","resets");
x.t("v7.1","licensed");
x.t("libraries","communication");
x.t("wide","requires");
x.t("wide","range");
x.t("range","denotes");
x.t("range","max");
x.t("range","applications");
x.t("symbols","alongside");
x.t("symbols","until");
x.t("symbols","(k)");
x.t("symbols","data_out");
x.t("symbols","(r)");
x.t("symbols","data_in");
x.t("symbols","recovered");
x.t("symbols","block");
x.t("symbols","reed-solomon");
x.t("symbols","decoded");
x.t("symbols","specified");
x.t("symbols","resulting");
x.t("symbols","blocks");
x.t("symbols","number");
x.t("symbols","decoder");
x.t("symbols","report");
x.t("symbols","code");
x.t("symbols","known");
x.t("symbols","otherwise");
x.t("symbols","carries");
x.t("symbols","per");
x.t("estimating","probabilities");
x.t("resulting","decoding");
x.t("box","invoked");
x.t("definition","file");
x.t("name","puncture");
x.t("common","options");
x.t("communication","index");
x.t("codes","bose-chaudhuri-hocquenghem");
x.t("codes","able");
x.t("codes","wide");
x.t("codes","block-based");
x.t("codes","turn");
x.t("codes","linear");
x.t("sampled","r_in");
x.t("sampled","start");
x.t("sampled","n_in");
x.t("follows","code");
x.t("virtex","device");
x.t("finite","field");
x.t("handles","full");
x.t("possibilities","information");
x.t("synchronous","reset");
x.t("custom","allows");
x.t("3,3e","dsp");
x.t("provides","excellent");
x.t("n_in","sampled");
x.t("n_in","n_in");
x.t("n_in","input");
x.t("n_in","signal");
x.t("n_in","erase");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","dvb");
x.t("parameters","used");
x.t("187","shortened");
x.t("zero","indicates");
x.t("reduced","defining");
x.t("standard","255");
x.t("standard","204");
x.t("standard","207");
x.t("standard","r_in");
x.t("standard","specification");
x.t("188","shortened");
x.t("4179","scaling");
x.t("(h)","represented");
x.t("area","speed");
x.t("boxes","xilinx");
x.t("allows","block");
x.t("television","systems");
x.t("explained","topic");
x.t("web","site");
x.t("http://www.xilinx.com/xlnx/xebiz/designresources/ip_product_details.jsp","key=do-di-rsd");
x.t("array","representation");
x.t("coe","file");
x.t("optimization","state");
x.t("optimization","choose");
x.t("width","tells");
x.t("width","default");
x.t("width","bits");
x.t("width","value");
x.t("width","data");
x.t("contain","errors");
x.t("three","possibilities");
x.t("three","error");
x.t("ports","erase_cnt");
x.t("ports","block");
x.t("ports","detail");
x.t("input","bits");
x.t("input","symbols");
x.t("input","error");
x.t("input","data");
x.t("input","otherwise");
x.t("ufix_b_0","number");
x.t("chosen","primitive");
x.t("defining","four");
x.t("logicore","version");
x.t("logicore","needs");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","latency");
x.t("logicore","system");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("wireless/","mobile");
x.t("attempting","correct");
x.t("begin","processing");
x.t("signals","last");
x.t("signals","bit_err_0_to_1");
x.t("mark_in","delayed");
x.t("mark_in","marker");
x.t("error","correcting");
x.t("error","probability");
x.t("error","statistics");
x.t("blocks","symbols");
x.t("blocks","encoder");
x.t("blocks","generated");
x.t("(bch)","codes");
x.t("data_del","data_in");
x.t("data_del","produces");
x.t("data_del","output");
x.t("data_del","following");
x.t("choices","custom");
x.t("choices","clocks");
x.t("supported","r_in");
x.t("supported","value");
x.t("supported","following");
x.t("corrected","err_cnt");
x.t("corrected","erase_cnt");
x.t("corrected","depend");
x.t("corrected","bit_err_rdy");
x.t("corrected","bit_err_1_to_0");
x.t("din","treated");
x.t("din","signal");
x.t("period","decoder");
x.t("representation","137");
x.t("137","285");
x.t("automatic","memory");
x.t("delay","support");
x.t("purchase","xilinx");
x.t("depend","characteristics");
x.t("-dimensional","sub-space");
x.t("-dimensional","vector");
x.t("space","finite");
x.t("space","data");
x.t("smaller","decoder");
x.t("fail","type");
x.t("fail","presents");
x.t("fail","ready");
x.t("first","root");
x.t("first","time");
x.t("first","symbol");
x.t("accept","code");
x.t("select","variable");
x.t("select","optional");
x.t("select","distributed");
x.t("bit_err_0_to_1","number");
x.t("bit_err_0_to_1","bit_err_1_to_0");
x.t("earth","station");
x.t("529","1033");
x.t("options","block");
x.t("options","number");
x.t("options","variable");
x.t("communications","digital");
x.t("communications","channel");
x.t("communications","storage");
x.t("broadcasting","reed-solomon");
x.t("broadcasting","standard");
x.t("number","clock");
x.t("number","errors");
x.t("number","type");
x.t("number","erasures");
x.t("number","sample");
x.t("number","polynomial");
x.t("number","bits");
x.t("number","check");
x.t("number","channels");
x.t("number","symbols");
x.t("number","supported");
x.t("number","marker");
x.t("number","separate");
x.t("number","information");
x.t("number","puncture");
x.t("number","elements");
x.t("sync","tells");
x.t("sync","reset");
x.t("sync","signal");
x.t("sync","bool");
x.t("sync","asserted");
x.t("processing","symbols");
x.t("processing","delay");
x.t("decoding","enabled");
x.t("decoding","type");
x.t("decoding","code");
x.t("decoding","err_found");
x.t("decoder","detected");
x.t("decoder","start");
x.t("decoder","block");
x.t("decoder","fails");
x.t("decoder","desired");
x.t("decoder","v7.1");
x.t("decoder","handles");
x.t("decoder","begin");
x.t("decoder","sync");
x.t("decoder","signal");
x.t("decoder","processes");
x.t("decoder","reports");
x.t("decoder","ready");
x.t("decoder","discards");
x.t("decoder","port");
x.t("decoder","7.1");
x.t("decoder","unable");
x.t("recover","information");
x.t("length","code");
x.t("length","rst");
x.t("length","n_block");
x.t("length","shortened");
x.t("length","checked");
x.t("signal","type");
x.t("signal","ufix_1_0");
x.t("signal","decoder");
x.t("signal","driving");
x.t("signal","ignored");
x.t("implements","ccsds");
x.t("implements","iess-308");
x.t("implements","atsc");
x.t("implements","dvb");
x.t("implements","ieee-802.16d");
x.t("max","256");
x.t("processes","block");
x.t("processes","blocks");
x.t("driving","sync");
x.t("driving","bool");
x.t("driving","rst");
x.t("driving","erase");
x.t("specifies","scaling");
x.t("specifies","type");
x.t("specifies","polynomial");
x.t("specifies","name");
x.t("specifies","first");
x.t("specifies","number");
x.t("specifies","puncture");
x.t("define","supported");
x.t("define","puncture");
x.t("may","increased");
x.t("words","input");
x.t("index","reed-solomon");
x.t("characteristics","code");
x.t("report","error");
x.t("presents","last");
x.t("presents","time");
x.t("presents","blocks");
x.t("presents","first");
x.t("presents","value");
x.t("ignored","till");
x.t("reduce","size");
x.t("reduce","processing");
x.t("format","radix=10");
x.t("held","number");
x.t("marks","last");
x.t("marks","beginning");
x.t("added","block");
x.t("self","recovering");
x.t("-1l","reed-solomon");
x.t("-1l","-1l");
x.t("code","nature");
x.t("code","ccsds");
x.t("code","block");
x.t("code","reed-solomon");
x.t("code","iess-308");
x.t("code","atsc");
x.t("code","symbols");
x.t("code","-dimensional");
x.t("code","words");
x.t("code","encoder");
x.t("code","ieee-802.16d");
x.t("code","specification");
x.t("code","ordinarily");
x.t("code","symbol");
x.t("code","shortened");
x.t("reports","unable");
x.t("enable","data_out");
x.t("enable","signal");
x.t("end","signals");
x.t("end","marks");
x.t("encoder","supports");
x.t("encoder","support");
x.t("encoder","attempting");
x.t("encoder","encoder");
x.t("encoder","produces");
x.t("bool","n_in");
x.t("bool","added");
x.t("bool","note");
x.t("bool","erase");
x.t("slightly","example");
x.t("slightly","reduced");
x.t("recovering","checked");
x.t("adds","following");
x.t("known","high");
x.t("ready","rfd");
x.t("ready","sample");
x.t("ready","type");
x.t("ready","accept");
x.t("ready","value");
x.t("least","sample");
x.t("produces","un-decoded");
x.t("produces","signal");
x.t("produces","acceptable");
x.t("produces","information");
x.t("parity","symbols");
x.t("previous","formula");
x.t("(x)","given");
x.t("given","primitive");
x.t("given","n_in");
x.t("given","data_del");
x.t("given","erase");
x.t("memory","choices");
x.t("memory","style");
x.t("n-k","fail");
x.t("n-k","number");
x.t("variable","block");
x.t("variable","check");
x.t("variable","number");
x.t("marker","bits");
x.t("illegal","state");
x.t("simulink","provides");
x.t("simulink","model");
x.t("err_found","err_cnt");
x.t("err_found","type");
x.t("err_found","presents");
x.t("latency","block");
x.t("latency","number");
x.t("tools","modeling");
x.t("discards","input");
x.t("till","decoder");
x.t("value","time");
x.t("value","sampled");
x.t("value","zero");
x.t("value","chosen");
x.t("value","number");
x.t("value","decoder");
x.t("represented","previous");
x.t("core","available");
x.t("core","size");
x.t("core","slightly");
x.t("core","decode");
x.t("specific","basic");
x.t("implementation","optimization");
x.t("periods","per");
x.t("block-based","error");
x.t("generated","reed-");
x.t("polynomials","listed");
x.t("polynomials","array");
x.t("285","529");
x.t("generator","polynomial");
x.t("generator","start");
x.t("generator","block");
x.t("actually","required");
x.t("systems","digital");
x.t("systems","standard");
x.t("systems","committee");
x.t("represent","bit_err_0_to_1");
x.t("represent","n-k");
x.t("valid","mark_in");
x.t("valid","marker");
x.t("219","201");
x.t("acceptable","values");
x.t("acceptable","numbers");
x.t("decode","data");
x.t("output","ports");
x.t("output","erase");
x.t("bit_err_rdy","signals");
x.t("consultative","committee");
x.t("separate","time");
x.t("site","http://www.xilinx.com/xlnx/xebiz/designresources/ip_product_details.jsp");
x.t("(rs)","codes");
x.t("correct","errors");
x.t("information","symbols");
x.t("information","parity");
x.t("information","symbol");
x.t("optional","pins");
x.t("optional","pin");
x.t("optional","output");
x.t("optional","inputs");
x.t("data","symbols");
x.t("data","held");
x.t("data","systems");
x.t("data","sheet");
x.t("data","correctly");
x.t("data","symbol");
x.t("data","checked");
x.t("blk_end","presents");
x.t("blk_end","produces");
x.t("blk_end","err_found");
x.t("received","corrected");
x.t("(194)","implements");
x.t("clocks","per");
x.t("case","provided");
x.t("bit_err_1_to_0","number");
x.t("bit_err_1_to_0","valid");
x.t("dvb","digital");
x.t("dvb","implements");
x.t("178","shortened");
x.t("ieee-802.16d","implements");
x.t("ieee-802.16d","specification");
x.t("values","range");
x.t("values","sampled");
x.t("values","supported");
x.t("values","core");
x.t("values","subset");
x.t("values","specify");
x.t("values","attributes");
x.t("called","symbols");
x.t("rst","resets");
x.t("rst","bool");
x.t("rst","optional");
x.t("port","added");
x.t("specification","255");
x.t("specification","208");
x.t("specification","225");
x.t("specification","specifies");
x.t("specification","code");
x.t("specification","219");
x.t("specification","(all)");
x.t("specification","126");
x.t("specification","194");
x.t("described","below");
x.t("choose","area");
x.t("sheet","spartan");
x.t("7.1","reed-");
x.t("7.1","xilinx");
x.t("7.1","block");
x.t("7.1","reed-solomon");
x.t("note","reset");
x.t("otherwise","rffd");
x.t("otherwise","fail");
x.t("otherwise","ready");
x.t("(all)","implements");
x.t("(all)","shortened");
x.t("2053","4179");
x.t("subset","possible");
x.t("puncture","definition");
x.t("puncture","options");
x.t("puncture","patterns");
x.t("applications","digital");
x.t("unable","recover");
x.t("asserted","high");
x.t("asserted","marks");
x.t("asserted","symbol");
x.t("factor","(h)");
x.t("factor","code");
x.t("factor","described");
x.t("(n)","tells");
x.t("correctly","number");
x.t("itself","enters");
x.t("puncturing","required");
x.t("correcting","codes");
x.t("n_block","n_in");
x.t("192","shortened");
x.t("numbers","range");
x.t("following","describes");
x.t("following","xilinx");
x.t("following","three");
x.t("following","ports");
x.t("following","format");
x.t("storage","used");
x.t("storage","devices");
x.t("used","default");
x.t("used","block");
x.t("used","define");
x.t("used","correct");
x.t("turn","linear");
x.t("elements","field");
x.t("elements","legal_r_vector");
x.t("ordinarily","large");
x.t("ordinarily","width");
x.t("probability","possibility");
x.t("probability","contain");
x.t("carries","clock");
x.t("tagging","data_in");
x.t("model","attributes");
x.t("126","112");
x.t("style","select");
x.t("system","generator");
x.t("symbol","currently");
x.t("symbol","field");
x.t("symbol","block");
x.t("symbol","width");
x.t("symbol","options");
x.t("symbol","sync");
x.t("symbol","specifies");
x.t("symbol","may");
x.t("symbol","added");
x.t("symbol","code");
x.t("194","178");
x.t("239","full");
x.t("blockset","reed-solomon");
x.t("blockset","libraries");
x.t("tab","info");
x.t("tab","follows");
x.t("tab","parameters");
x.t("tab","implementation");
x.t("committee","standard");
x.t("committee","space");
x.t("decimal","number");
x.t("per","block");
x.t("per","input");
x.t("per","symbol");
x.t("distributed","block");
x.t("128","channels");
x.t("statistics","outputs");
x.t("statistics","adds");
x.t("kintex","device");
x.t("shortened","codes");
x.t("shortened","smaller");
x.t("shortened","code");
x.t("erase","indicates");
x.t("erase","input");
x.t("erase","bool");
x.t("erase","rst");
x.t("erase","checked");
x.t("intelsat","standard");
x.t("intelsat","earth");
x.t("legal_r_vector","equal");
x.t("patterns","logicore");
x.t("patterns","specifies");
x.t("patterns","optional");
x.t("spartan","device");
x.t("mark_out","mark_in");
x.t("station","standard");
x.t("increased","reduce");
x.t("devices","wireless/");
x.t("linear","block");
x.t("inputs","data_in");
x.t("inputs","n_in");
x.t("detail","data_in");
x.t("specify","synchronous");
x.t("specify","number");
x.t("attributes","tab");
x.t("widths","field");
x.t("checked","block");
x.t("contains","acceptable");
}
