function FileData_Pairs(x)
{
x.t("double-clicking","icon");
x.t("precision","specified");
x.t("modes","hardware");
x.t("modes","refer");
x.t("modes","during");
x.t("modes","read");
x.t("modes","output");
x.t("modes","described");
x.t("supports","read");
x.t("satisfied","option");
x.t("equal","ceil");
x.t("possible","read");
x.t("possible","following");
x.t("indicated","address");
x.t("below","provide");
x.t("below","figure");
x.t("below","output");
x.t("below","information");
x.t("unchanged","irrespective");
x.t("irrespective","change");
x.t("notes","topic");
x.t("notes","distributed");
x.t("provide","reset");
x.t("provide","maximum");
x.t("available","latency");
x.t("256","8193");
x.t("256","2049");
x.t("parameter","selected");
x.t("fpga","families");
x.t("fpga","data");
x.t("hardware","notes");
x.t("hardware","unpredictable");
x.t("hardware","resources");
x.t("16k","16k");
x.t("16k","32k");
x.t("16k","192");
x.t("version","data");
x.t("applicability","modes");
x.t("shown","below");
x.t("refer","write");
x.t("timing","performance");
x.t("binary","point");
x.t("always","uses");
x.t("(d)","denotes");
x.t("various","depth");
x.t("mux","distributed");
x.t("topic","below");
x.t("topic","beginning");
x.t("tables","below");
x.t("4096","inclusive");
x.t("4096","192");
x.t("implemented","using");
x.t("line","hence");
x.t("line","block");
x.t("line","output");
x.t("dialog","box");
x.t("locations","addresses");
x.t("last","output");
x.t("uses","xilinx");
x.t("uses","following");
x.t("4097","8192");
x.t("interface","block");
x.t("mode","hardware");
x.t("mode","xilinx");
x.t("mode","new");
x.t("mode","selected");
x.t("mode","specifies");
x.t("mode","option");
x.t("mode","output");
x.t("mode","distributed");
x.t("icon","simulink");
x.t("necessary","according");
x.t("state","memory");
x.t("register","block");
x.t("register","initial");
x.t("register","exposes");
x.t("register","un-checked");
x.t("type","width");
x.t("type","option");
x.t("change","address");
x.t("obtained","location");
x.t("vector","length");
x.t("vector","initial");
x.t("reset","memory");
x.t("reset","port");
x.t("hence","value");
x.t("xilinx","single");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("listed","following");
x.t("exceeds","vector");
x.t("exceeds","memory");
x.t("saturated","rounded");
x.t("single","port");
x.t("access","memory");
x.t("denotes","ram");
x.t("denotes","memory");
x.t("contents","initialization");
x.t("contents","specified");
x.t("contents","memory");
x.t("new","value");
x.t("spartan-3a","dsp");
x.t("block","always");
x.t("block","uses");
x.t("block","interface");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","ram");
x.t("block","parameters");
x.t("block","explained");
x.t("block","allows");
x.t("block","implements");
x.t("block","memory");
x.t("block","output");
x.t("block","depth");
x.t("block","distributed");
x.t("choice","memory");
x.t("invoked","double-clicking");
x.t("initialization","value");
x.t("initialization","values");
x.t("indicates","output");
x.t("8192","256");
x.t("8192","8193");
x.t("256k","256k");
x.t("256k","width");
x.t("256k","512k");
x.t("during","write");
x.t("beginning","chapter");
x.t("8193","16k");
x.t("unpredictable","results");
x.t("results","initial");
x.t("initialized","zero");
x.t("according","precision");
x.t("presented","data");
x.t("depends","choice");
x.t("depends","write");
x.t("depends","device");
x.t("depends","depth");
x.t("dsp","-1l");
x.t("dsp","depth");
x.t("dsp","devices");
x.t("ram","provide");
x.t("ram","implemented");
x.t("ram","xilinx");
x.t("ram","single");
x.t("ram","contents");
x.t("ram","block");
x.t("ram","stored");
x.t("ram","parameters");
x.t("ram","attempt");
x.t("ram","blocks");
x.t("ram","initial");
x.t("ram","depth");
x.t("ram","note");
x.t("specified","block");
x.t("specified","address");
x.t("specified","maximum");
x.t("specified","latency");
x.t("specified","data");
x.t("specified","using");
x.t("libraries","control");
x.t("stored","memory");
x.t("stored","word");
x.t("range","hardware");
x.t("range","d-1");
x.t("operation","depends");
x.t("operation","implementing");
x.t("operation","read");
x.t("operation","asserted");
x.t("operation","following");
x.t("box","invoked");
x.t("common","parameters");
x.t("exactly","address");
x.t("addresses","higher");
x.t("virtex","/virtex-e/spartan");
x.t("virtex","virtex-5");
x.t("virtex","device");
x.t("performance","possible");
x.t("2048","256");
x.t("inclusive","fpga");
x.t("inclusive","block");
x.t("inclusive","spartan");
x.t("old","value");
x.t("2049","4096");
x.t("3,3e","dsp");
x.t("parameters","topic");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","write");
x.t("parameters","specific");
x.t("parameters","used");
x.t("zero","initialization");
x.t("65536","inclusive");
x.t("address","line");
x.t("address","state");
x.t("address","range");
x.t("address","input");
x.t("address","width");
x.t("address","bit");
x.t("address","unsigned");
x.t("explained","common");
x.t("allows","distributed");
x.t("write","modes");
x.t("write","mode");
x.t("write","indicates");
x.t("write","specified");
x.t("write","operation");
x.t("write","enable");
x.t("write","read");
x.t("attempt","read");
x.t("controlling","output");
x.t("/virtex-e/spartan","depth");
x.t("virtex-","virtex-5");
x.t("input","stored");
x.t("input","ports");
x.t("input","written");
x.t("input","output");
x.t("input","data");
x.t("input","configure");
x.t("three","input");
x.t("ports","address");
x.t("width","equal");
x.t("width","binary");
x.t("width","various");
x.t("width","8192");
x.t("width","2048");
x.t("width","given");
x.t("width","1024");
x.t("width","data");
x.t("chosen","may");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","family");
x.t("device","specific");
x.t("device","kintex");
x.t("logicore","supports");
x.t("logicore","version");
x.t("logicore","single");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("logicore","distributed");
x.t("extra","hardware");
x.t("virtex-5","virtex-6");
x.t("random","access");
x.t("selected","below");
x.t("selected","address");
x.t("selected","logicore");
x.t("virtex-6","spartan-6");
x.t("virtex-6","spartan");
x.t("logic","floating-point");
x.t("point","operator");
x.t("point","position");
x.t("error","simulation");
x.t("supported","modes");
x.t("blocks","virtex");
x.t("16,384","option");
x.t("family","targeted");
x.t("select","block");
x.t("means","output");
x.t("targeted","tables");
x.t("32k","32k");
x.t("32k","64k");
x.t("control","logic");
x.t("number","words");
x.t("written","means");
x.t("written","memory");
x.t("implements","random");
x.t("signal","bool");
x.t("length","exceeds");
x.t("length","initialized");
x.t("length","memory");
x.t("maximum","timing");
x.t("maximum","width");
x.t("maximum","depth");
x.t("maximum","data");
x.t("1024k","distributed");
x.t("words","block");
x.t("words","ram");
x.t("words","memory");
x.t("words","arithmetic");
x.t("may","possible");
x.t("specifies","memory");
x.t("chapter","write");
x.t("v5.2","distributed");
x.t("index","xilinx");
x.t("index","higher");
x.t("ignored","depth");
x.t("implementing","single");
x.t("floating-","point");
x.t("initial","contents");
x.t("initial","ram");
x.t("initial","value");
x.t("-1l","single");
x.t("-1l","-1l");
x.t("floating-point","memory");
x.t("enable","signal");
x.t("enable","(we)");
x.t("end","memory");
x.t("bool","value");
x.t("log2","(d)");
x.t("memory","parameter");
x.t("memory","locations");
x.t("memory","type");
x.t("memory","vector");
x.t("memory","contents");
x.t("memory","block");
x.t("memory","depends");
x.t("memory","address");
x.t("memory","write");
x.t("memory","device");
x.t("memory","logicore");
x.t("memory","index");
x.t("memory","initial");
x.t("memory","implementation");
x.t("memory","generator");
x.t("memory","location");
x.t("memory","depth");
x.t("memory","output");
x.t("memory","(ram)");
x.t("memory","positive");
x.t("memory","used");
x.t("memory","distributed");
x.t("memory","caught");
x.t("memory","behavior");
x.t("memory","achieved");
x.t("memory","resources");
x.t("(we)","values");
x.t("option","provide");
x.t("option","select");
x.t("option","latency");
x.t("option","read");
x.t("option","depth");
x.t("given","block");
x.t("upon","write");
x.t("greater","read");
x.t("families","word");
x.t("less","16,384");
x.t("1024","inclusive");
x.t("simulink","model");
x.t("latency","block");
x.t("latency","greater");
x.t("latency","higher");
x.t("spartan-6","spartan-3a");
x.t("value","vector");
x.t("value","reset");
x.t("value","saturated");
x.t("value","address");
x.t("value","read");
x.t("value","location");
x.t("value","output");
x.t("value","data");
x.t("value","reflects");
x.t("value","remains");
x.t("ceil","log2");
x.t("implementation","chosen");
x.t("implementation","behavior");
x.t("specific","block");
x.t("specific","restrictions");
x.t("figure","shown");
x.t("figure","memory");
x.t("exposes","reset");
x.t("virtex-4/virtex-5/spartan-3a","dsp");
x.t("512k","1024k");
x.t("512k","512k");
x.t("generator","block");
x.t("generator","v5.2");
x.t("generator","v6.1");
x.t("word","width");
x.t("word","words");
x.t("word","associated");
x.t("read","write");
x.t("read","beyond");
x.t("read","past");
x.t("output","last");
x.t("output","register");
x.t("output","obtained");
x.t("output","during");
x.t("output","value");
x.t("output","latch");
x.t("output","port");
x.t("output","unaffected");
x.t("output","two");
x.t("output","either");
x.t("depth","4096");
x.t("depth","exceeds");
x.t("depth","depends");
x.t("depth","specified");
x.t("depth","65536");
x.t("depth","width");
x.t("depth","number");
x.t("depth","maximum");
x.t("depth","ignored");
x.t("depth","less");
x.t("depth","values");
x.t("depth","ranges");
x.t("location","indicated");
x.t("location","specified");
x.t("location","selected");
x.t("location","written");
x.t("help","figure");
x.t("data","during");
x.t("data","presented");
x.t("data","write");
x.t("data","input");
x.t("data","words");
x.t("data","word");
x.t("data","output");
x.t("data","port");
x.t("data","sheet");
x.t("information","memory");
x.t("configure","behavior");
x.t("128k","256k");
x.t("128k","128k");
x.t("bit","specified");
x.t("values","saturated");
x.t("values","single");
x.t("values","index");
x.t("reflects","state");
x.t("latch","data");
x.t("port","available");
x.t("port","reset");
x.t("port","block");
x.t("port","depends");
x.t("port","ram");
x.t("port","write");
x.t("port","controlling");
x.t("port","three");
x.t("port","upon");
x.t("port","value");
x.t("port","output");
x.t("(ram)","data");
x.t("beyond","specified");
x.t("described","help");
x.t("unaffected","address");
x.t("64k","128k");
x.t("64k","64k");
x.t("sheet","spartan");
x.t("integer","range");
x.t("integer","initial");
x.t("d-1","denotes");
x.t("note","port");
x.t("two","modes");
x.t("positive","integer");
x.t("asserted","supported");
x.t("asserted","data");
x.t("single-port","ram");
x.t("192","16k");
x.t("192","4097");
x.t("following","modes");
x.t("following","xilinx");
x.t("following","conditions");
x.t("either","block");
x.t("either","old");
x.t("simulation","block");
x.t("model","parameters");
x.t("rounded","necessary");
x.t("used","block");
x.t("used","depth");
x.t("system","generator");
x.t("arithmetic","type");
x.t("using","extra");
x.t("using","read");
x.t("using","either");
x.t("v6.0","v6.0");
x.t("blockset","single");
x.t("blockset","libraries");
x.t("distributed","ram");
x.t("distributed","memory");
x.t("kintex","device");
x.t("v6.1","floating-");
x.t("associated","exactly");
x.t("past","end");
x.t("caught","error");
x.t("behavior","output");
x.t("behavior","data");
x.t("behavior","asserted");
x.t("ranges","virtex");
x.t("ranges","virtex-4/virtex-5/spartan-3a");
x.t("operator","v6.0");
x.t("position","single-port");
x.t("unsigned","integer");
x.t("restrictions","applicability");
x.t("achieved","using");
x.t("spartan","spartan-3a");
x.t("spartan","virtex-");
x.t("spartan","device");
x.t("conditions","satisfied");
x.t("resources","fpga");
x.t("resources","mux");
x.t("higher","vector");
x.t("higher","xilinx");
x.t("higher","depth");
x.t("remains","unchanged");
x.t("devices","maximum");
x.t("un-checked","option");
}
