function FileData_Pairs(x)
{
x.t("example","round");
x.t("example","number");
x.t("double-clicking","icon");
x.t("precision","single");
x.t("precision","pecifies");
x.t("precision","bits");
x.t("precision","number");
x.t("representable","range");
x.t("representable","bit");
x.t("01.10","01.0110");
x.t("01.10","01.11");
x.t("01.10","01.1010");
x.t("01.10","latter");
x.t("overflow","overflow");
x.t("overflow","errors");
x.t("overflow","options");
x.t("overflow","simulink");
x.t("registers","achive");
x.t("below","specify");
x.t("method","rounds");
x.t("possible","rounded");
x.t("01.0110","exactly");
x.t("01.0110","fix_4_2");
x.t("01.11","former");
x.t("provide","enable");
x.t("parameter","dialog");
x.t("converted","signed");
x.t("right","least");
x.t("hardware","generated");
x.t("version","data");
x.t("ambiguous","midpoints");
x.t("6-1l","convert");
x.t("binary","point");
x.t("01.1010","exactly");
x.t("01.1010","fix_4_2");
x.t("flag","error");
x.t("directs","block");
x.t("double","precision");
x.t("double","specifies");
x.t("insufficient","represent");
x.t("current","state");
x.t("topic","common");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("field","below");
x.t("until","enable");
x.t("uses","following");
x.t("icon","simulink");
x.t("errors","occur");
x.t("lies","outside");
x.t("state","until");
x.t("basic","elements");
x.t("basic","tab");
x.t("sample","number");
x.t("type","example");
x.t("type","specified");
x.t("type","boolean");
x.t("type","fixed-point");
x.t("type","output");
x.t("left","significant");
x.t("pin","block");
x.t("reset","signal");
x.t("xilinx","convert");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("i.e","discard");
x.t("midpoint","two");
x.t("convert","xilinx");
x.t("convert","convert");
x.t("convert","block");
x.t("convert","floating-");
x.t("listed","following");
x.t("inf","round");
x.t("inf","known");
x.t("inf","symmetric");
x.t("removes","alternating");
x.t("single","precision");
x.t("single","specifies");
x.t("block","parameter");
x.t("block","uses");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","converts");
x.t("block","parameters");
x.t("block","explained");
x.t("block","enable");
x.t("block","latency");
x.t("block","holds");
x.t("block","pipeline");
x.t("invoked","double-clicking");
x.t("pecifies","output");
x.t("again","reset");
x.t("during","simulation");
x.t("bits","right");
x.t("bits","double");
x.t("bits","insufficient");
x.t("bits","left");
x.t("bits","custom");
x.t("bits","specifies");
x.t("nearest","desired");
x.t("nearest","even");
x.t("results","larger");
x.t("results","convergent");
x.t("wrap","i.e");
x.t("wrap","selected");
x.t("quantization","errors");
x.t("quantization","quantization");
x.t("dsp","-1l");
x.t("converts","input");
x.t("desired","bit");
x.t("desired","arithmetic");
x.t("specified","fixed-point");
x.t("libraries","basic");
x.t("box","invoked");
x.t("toward","nearest");
x.t("toward","zero");
x.t("toward","even");
x.t("alternating","symmetric");
x.t("outside","representable");
x.t("range","overflow");
x.t("common","options");
x.t("follows","pipeline");
x.t("follows","output");
x.t("exactly","01.10");
x.t("exactly","01.01");
x.t("performance","directs");
x.t("performance","block");
x.t("virtex","device");
x.t("custom","activates");
x.t("average","magnitude");
x.t("3,3e","dsp");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("boolean","fixed-point");
x.t("zero","round");
x.t("zero","means");
x.t("zero","least");
x.t("zero","symmetric");
x.t("zero","similar");
x.t("zero","value");
x.t("zero","midpoints");
x.t("further","zero");
x.t("biased","rounds");
x.t("matlab","round");
x.t("boxes","xilinx");
x.t("away","zero");
x.t("explained","topic");
x.t("positive/smallest","negative");
x.t("input","sample");
x.t("two's","complement");
x.t("width","quantization");
x.t("width","exponent");
x.t("width","fraction");
x.t("width","specify");
x.t("round","01.0110");
x.t("round","01.1010");
x.t("round","toward");
x.t("round","away");
x.t("round","function");
x.t("round","unbiased");
x.t("round","towards");
x.t("01.01","01.10");
x.t("ports","provide");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("selected","example");
x.t("selected","optional");
x.t("point","specifies");
x.t("point","bit");
x.t("point","operator");
x.t("raw","results");
x.t("error","overflow");
x.t("error","during");
x.t("error","simulation");
x.t("select","signed");
x.t("options","block");
x.t("options","truncate");
x.t("options","saturate");
x.t("means","average");
x.t("feature","hardware");
x.t("number","example");
x.t("number","converted");
x.t("number","bits");
x.t("number","desired");
x.t("number","fractional");
x.t("function","method");
x.t("magnitude","selected");
x.t("magnitude","raw");
x.t("magnitude","rounded");
x.t("signal","asserted");
x.t("maximum","performance");
x.t("specifies","double");
x.t("specifies","single");
x.t("specifies","bit");
x.t("may","incrrease");
x.t("index","xilinx");
x.t("achive","maximum");
x.t("types","math");
x.t("floating-","point");
x.t("truncate","i.e");
x.t("-1l","6-1l");
x.t("floating-point","precision");
x.t("floating-point","index");
x.t("floating-point","arithmetic");
x.t("unbiased","inf");
x.t("unbiased","rounding");
x.t("unbiased","even");
x.t("enable","signal");
x.t("enable","(en)");
x.t("enable","port");
x.t("least","significant");
x.t("known","symmetric");
x.t("known","convergent");
x.t("symmetric","round");
x.t("symmetric","rounding");
x.t("yields","01.10");
x.t("simulink","error");
x.t("simulink","model");
x.t("activates","field");
x.t("activates","optional");
x.t("latency","may");
x.t("value","lies");
x.t("value","midpoint");
x.t("value","block");
x.t("value","nearest");
x.t("value","wrap");
x.t("value","options");
x.t("similar","matlab");
x.t("signed","two's");
x.t("signed","comp");
x.t("specific","basic");
x.t("specific","implementation");
x.t("largest","positive/smallest");
x.t("holds","current");
x.t("implementation","tab");
x.t("pipeline","registers");
x.t("pipeline","maximum");
x.t("fixed-point","precision");
x.t("fixed-point","select");
x.t("fixed-point","floating-point");
x.t("fix_4_2","yields");
x.t("midpoints","away");
x.t("midpoints","rounded");
x.t("generated","wrap");
x.t("generator","block");
x.t("represent","fractional");
x.t("latter","further");
x.t("latter","even");
x.t("output","precision");
x.t("output","type");
x.t("output","data");
x.t("location","binary");
x.t("larger","average");
x.t("larger","magnitude");
x.t("data","type");
x.t("data","types");
x.t("data","sheet");
x.t("discard","bits");
x.t("optional","ports");
x.t("optional","enable");
x.t("bit","binary");
x.t("bit","flag");
x.t("bit","zero");
x.t("bit","away");
x.t("bit","round");
x.t("bit","floating-point");
x.t("bit","location");
x.t("values","round");
x.t("values","known");
x.t("values","larger");
x.t("(en)","pin");
x.t("incrrease","parameters");
x.t("exponent","width");
x.t("saturate","largest");
x.t("port","activates");
x.t("sheet","spartan");
x.t("fraction","width");
x.t("two","possible");
x.t("significant","representable");
x.t("significant","bit");
x.t("fractional","bits");
x.t("fractional","portion");
x.t("convergent","round");
x.t("convergent","rounding");
x.t("former","even");
x.t("asserted","block");
x.t("asserted","again");
x.t("asserted","implementation");
x.t("complement","unsigned");
x.t("following","xilinx");
x.t("elements","data");
x.t("model","basic");
x.t("rounded","results");
x.t("rounded","toward");
x.t("rounded","values");
x.t("simulation","flag");
x.t("simulation","feature");
x.t("used","block");
x.t("system","generator");
x.t("arithmetic","type");
x.t("rounding","removes");
x.t("rounding","biased");
x.t("rounding","symmetric");
x.t("v6.0","v6.0");
x.t("blockset","convert");
x.t("blockset","libraries");
x.t("tab","follows");
x.t("tab","parameters");
x.t("portion","value");
x.t("kintex","device");
x.t("occur","number");
x.t("occur","value");
x.t("towards","inf");
x.t("operator","v6.0");
x.t("unsigned","value");
x.t("unsigned","arithmetic");
x.t("spartan","device");
x.t("math","floating-point");
x.t("even","overflow");
x.t("even","round");
x.t("even","number");
x.t("even","unbiased");
x.t("even","values");
x.t("comp","unsigned");
x.t("specify","exponent");
x.t("specify","fraction");
x.t("rounds","ambiguous");
x.t("rounds","value");
x.t("negative","value");
}
