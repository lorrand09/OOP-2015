function FileData_Pairs(x)
{
x.t("example","example");
x.t("example","debugging");
x.t("example","learning");
x.t("example","running");
x.t("example","created");
x.t("debugging","tip");
x.t("highlight","subsystem");
x.t("accumulate","function");
x.t("{b_in}","end");
x.t("gcb","config.depend");
x.t("gcb","config.debug");
x.t("gcb","xblock");
x.t("gcb","latency");
x.t("passed","toplevel");
x.t("xoutport","mac");
x.t("xoutport","adder");
x.t("parameter","refers");
x.t("library","default");
x.t("library","invoking");
x.t("library","loaded");
x.t("{m}","{mac}");
x.t("{m}","acc");
x.t("else","a_in");
x.t("console","create");
x.t("console","block");
x.t("console","window");
x.t("console","run");
x.t("console","system");
x.t("console","effect");
x.t("full","block");
x.t("shown","following");
x.t("every","action");
x.t("every","time");
x.t("files","cell");
x.t("create","multiply-");
x.t("create","new");
x.t("create","top-level");
x.t("create","toplevel");
x.t("create","subsystem");
x.t("built-in","libraries");
x.t("description","adder");
x.t("macc","run");
x.t("macc","masked");
x.t("reg_retiming","{a}");
x.t("reg_retiming","{b}");
x.t("config.depend","macc_sub.m");
x.t("having","latency");
x.t("source","field");
x.t("source","str2func");
x.t("source","adder");
x.t("{a}","{a_in}");
x.t("mechanism","specify");
x.t("don\u2019t","close");
x.t("action","trigger");
x.t("refers","addsub");
x.t("n_bits","nbits");
x.t("hdl","two");
x.t("field","source");
x.t("field","untitled");
x.t("field","function");
x.t("field","toplevel");
x.t("field","configuration");
x.t("mode","every");
x.t("mode","type");
x.t("mode","start");
x.t("mode","need");
x.t("mode","first");
x.t("physical","m-function");
x.t("points","m-function");
x.t("type","highlight");
x.t("type","commands");
x.t("type","adder");
x.t("type","following");
x.t("please","load_system");
x.t("close","model");
x.t("open","macc_sub.m");
x.t("xst","force");
x.t("time","block");
x.t("config.debug","xblock");
x.t("inside","new");
x.t("inside","model");
x.t("inside","xbsindex_r4");
x.t("trigger","auto");
x.t("default","full");
x.t("default","xblock");
x.t("invoking","xblock");
x.t("multiply-","accumulate");
x.t("mac","xoutport");
x.t("mac","xsignal");
x.t("mac","latency");
x.t("behavioral","hdl");
x.t("macc_sub","config.toplevel");
x.t("macc_sub","latency");
x.t("macc_sub","invoke");
x.t("put","name");
x.t("put","p-file");
x.t("put","following");
x.t("needed","xblock");
x.t("access","api");
x.t("start","new");
x.t("new","learning");
x.t("new","subsystem");
x.t("new","model");
x.t("single","dsp48");
x.t("want","re-generate");
x.t("want","auto");
x.t("want","particular");
x.t("want","caching");
x.t("element","array");
x.t("command","console");
x.t("command","shell");
x.t("block","having");
x.t("block","inside");
x.t("block","writing");
x.t("block","path");
x.t("block","matlab");
x.t("block","combinational");
x.t("block","added");
x.t("block","highlighted");
x.t("{a_in}","block2");
x.t("need","physical");
x.t("need","run");
x.t("m-function","file");
x.t("m-function","toplevel");
x.t("file","name");
x.t("file","macc_sub.m");
x.t("file","depend");
x.t("file","pass");
x.t("initialization","subsystem");
x.t("list","passed");
x.t("list","file");
x.t("list","changed");
x.t("list","dependent");
x.t("add","two");
x.t("api","need");
x.t("api","m-function");
x.t("api","learning");
x.t("api","provides");
x.t("api","examples");
x.t("api","production");
x.t("api","debug");
x.t("api","pass");
x.t("(macc_sub)","toplevel");
x.t("inports","source");
x.t("inports","outports");
x.t("inports","adder");
x.t("mult_ins","{1}");
x.t("mult_ins","mult.getinsignals");
x.t("mult_ins","{2}");
x.t("learning","mode");
x.t("learning","session");
x.t("specified","xblock");
x.t("writing","xst");
x.t("path","specified");
x.t("libraries","turn");
x.t("{1}","mult_ins");
x.t("{1}",".block");
x.t("{1}",".getsrc");
x.t("{1}","m_dst");
x.t(".block","macc");
x.t("name","put");
x.t("name","m-file");
x.t("name","without");
x.t("mult","xblock");
x.t("mult","struct");
x.t("constructor","matlab");
x.t("constructor","auto");
x.t("constructor","first");
x.t("constructor","caching");
x.t("layout","every");
x.t("layout","end");
x.t("layout","caching");
x.t("changed","argument");
x.t("changed","subsystem");
x.t("dsp48","block");
x.t("argument","list");
x.t("argument","xblock");
x.t("re-generate","subsystem");
x.t("dependent","files");
x.t("session","matlab");
x.t("session","run");
x.t("xinport","xoutport");
x.t("xinport","mac");
x.t("window","create");
x.t("provides","functions");
x.t("parameters","shown");
x.t("parameters","mask");
x.t("parameters","latency");
x.t("parameters","subsystem");
x.t("macc_sub.m","matlab");
x.t("macc_sub.m","xblock");
x.t("macc_sub.m","following");
x.t("alternatively","matlab");
x.t("matlab","console");
x.t("matlab","command");
x.t("matlab","editor");
x.t("matlab","struct");
x.t("untitled","xinport");
x.t("untitled","created");
x.t("untitled","model");
x.t("loaded","using");
x.t("search","xbsindex_r4");
x.t("xsignal","mult");
x.t("xsignal","dblock1");
x.t("untiltled1","otherwise");
x.t("multiplier","block");
x.t("lines","mask");
x.t("lines","function");
x.t("str2func","macc_sub");
x.t("str2func","(macc_sub)");
x.t("string","specifying");
x.t("array","element");
x.t("array","file");
x.t("array","depend");
x.t("three","commands");
x.t("load_system","load");
x.t("use_behavioral_hdl","{m}");
x.t("use_behavioral_hdl","a_in");
x.t("combinational","note");
x.t("mask","initialization");
x.t("mask","parameters");
x.t("mask","subsystem");
x.t("cell","array");
x.t("functions","information");
x.t("signals","generated");
x.t("block2","xblock");
x.t("auto","layout");
x.t("p-file","name");
x.t("commands","create");
x.t("commands","matlab");
x.t("commands","observe");
x.t("blocks","signals");
x.t("blocks","packed");
x.t("error","latency");
x.t("config","latency");
x.t("m-file","name");
x.t("{s}","above");
x.t("a_in","b_in");
x.t("delay","struct");
x.t("outports","macc");
x.t("first","create");
x.t("first","path");
x.t("first","argument");
x.t("top-level","field");
x.t("top-level","api");
x.t("nbits","put");
x.t("nbits","xinport");
x.t("nbits","use_behavioral_hdl");
x.t("nbits","depend");
x.t("nbits","click");
x.t("nbits","production");
x.t("nbits","setting");
x.t("dblock1","xblock");
x.t("depend","field");
x.t("depend","list");
x.t("function","macc_sub");
x.t("function","default");
x.t("function","new");
x.t("function","changed");
x.t("function","xblock");
x.t("function","pointer");
x.t(".getsrc","src_a");
x.t("particular","subsystem");
x.t("toplevel","gcb");
x.t("toplevel","field");
x.t("toplevel","string");
x.t("toplevel","function");
x.t("toplevel","xblock");
x.t("toplevel","configuration");
x.t("editor","debug");
x.t("accumulator","struct");
x.t("mult.getinsignals","mult_ins");
x.t("programmatic","access");
x.t("you\u2019ll","following");
x.t("added","invoke");
x.t("capability","macc_sub");
x.t("xblock","debugging");
x.t("xblock","type");
x.t("xblock","please");
x.t("xblock","mult");
x.t("xblock","constructor");
x.t("xblock","search");
x.t("xblock","config");
x.t("xblock","delay");
x.t("xblock","first");
x.t("xblock","accumulator");
x.t("xblock","addsub");
x.t("xblock","following");
x.t("xblock","struct");
x.t("end","want");
x.t("end","xsignal");
x.t("config.toplevel","gcb");
x.t("packed","single");
x.t("often","want");
x.t("outport","addsub");
x.t("outport","two");
x.t("{mac}","mask");
x.t("{mac}","directing");
x.t("directing","system");
x.t("config.source","str2func");
x.t("m.getdst","m_dst");
x.t("{b}","{b_in}");
x.t("click","you\u2019ll");
x.t("click","following");
x.t("acc","xblock");
x.t("latency","reg_retiming");
x.t("latency","use_behavioral_hdl");
x.t("latency","error");
x.t("latency","{s}");
x.t("latency","a_in");
x.t("latency","nbits");
x.t("latency","simulink");
x.t("latency","latency");
x.t("latency","positive");
x.t("simulink","inports");
x.t("simulink","outport");
x.t("simulink","subsystem");
x.t("simulink","diagram");
x.t("sources","subsystem");
x.t("brief","description");
x.t("elseif","latency");
x.t("configuration","source");
x.t("configuration","list");
x.t("configuration","xblock");
x.t("configuration","struct");
x.t("running","api");
x.t("named","untitled");
x.t("named","untiltled1");
x.t("named","subsystem");
x.t("figure","click");
x.t("subsystem","inside");
x.t("subsystem","needed");
x.t("subsystem","want");
x.t("subsystem","api");
x.t("subsystem","inports");
x.t("subsystem","xinport");
x.t("subsystem","mask");
x.t("subsystem","top-level");
x.t("subsystem","outport");
x.t("subsystem","config.source");
x.t("subsystem","named");
x.t("subsystem","generated");
x.t("subsystem","defined");
x.t("subsystem","two");
x.t("subsystem","re-generated");
x.t("subsystem","following");
x.t("generator","generate");
x.t("generator","print");
x.t("generate","behavioral");
x.t("force","multiplier");
x.t("generated","debugging");
x.t("generated","api");
x.t("generated","subsystem");
x.t("hello","world");
x.t("shell","start");
x.t("tip","type");
x.t("tip","open");
x.t("tip","api");
x.t("tip","often");
x.t("diagram","mult_ins");
x.t("diagram","generated");
x.t("diagram","similarly");
x.t("output","matlab");
x.t("script","add");
x.t("specifying","simulink");
x.t("information","blocks");
x.t("examples","api");
x.t("examples","programmatic");
x.t("examples","hello");
x.t("addsub","parameter");
x.t("addsub","block");
x.t("addsub","struct");
x.t("production","mode");
x.t("defined","script");
x.t("adder","block");
x.t("adder","matlab");
x.t("adder","xblock");
x.t("adder","turn");
x.t("src_a","mult_ins");
x.t("src_a","{1}");
x.t("above","commands");
x.t("print","brief");
x.t("rst","n_bits");
x.t("rst","use_behavioral_hdl");
x.t("two","inports");
x.t("two","mask");
x.t("two","blocks");
x.t("two","simulink");
x.t("note","don\u2019t");
x.t("otherwise","new");
x.t("m_dst","{1}");
x.t("m_dst","m.getdst");
x.t("positive","elseif");
x.t("debug","field");
x.t("debug","mode");
x.t("debug","function");
x.t("re-generated","want");
x.t("created","example");
x.t("created","alternatively");
x.t("created","subsystem");
x.t("created","model");
x.t("call","create");
x.t("run","example");
x.t("run","api");
x.t("run","xblock");
x.t("following","lines");
x.t("following","three");
x.t("following","commands");
x.t("following","config.source");
x.t("following","figure");
x.t("following","subsystem");
x.t("following","diagram");
x.t("model","untitled");
x.t("model","named");
x.t("model","created");
x.t("turn","library");
x.t("turn","sources");
x.t("system","generator");
x.t("masked","subsystem");
x.t("pointer","points");
x.t("caching","mechanism");
x.t("caching","capability");
x.t("caching","tip");
x.t("using","xblock");
x.t("similarly","type");
x.t("observe","output");
x.t("{2}","src_a");
x.t("setting","debug");
x.t("pass","parameters");
x.t("pass","function");
x.t("world","example");
x.t("load","library");
x.t("b_in","else");
x.t("b_in","{m}");
x.t("b_in","xsignal");
x.t("invoke","toplevel");
x.t("without","suffix");
x.t("struct","source");
x.t("struct","cell");
x.t("struct","latency");
x.t("struct","configuration");
x.t("struct","rst");
x.t("struct","call");
x.t("struct","you\u2019re");
x.t("highlighted","simulink");
x.t("effect","simulink");
x.t("you\u2019re","running");
x.t("suffix","xblock");
x.t("xbsindex_r4","library");
x.t("xbsindex_r4","built-in");
x.t("specify","list");
}
