function FileData_Pairs(x)
{
x.t("double-clicking","icon");
x.t("supports","signed");
x.t("supports","unsigned");
x.t("clock","enabled");
x.t("clock","cycles");
x.t("clock","enable");
x.t("active","low");
x.t("blocking","axi");
x.t("determined","following");
x.t("pulse","two");
x.t("parameter","dialog");
x.t("throughput","determines");
x.t("divsor_tlast","pass");
x.t("version","data");
x.t("clear","minimum");
x.t("divide","zero");
x.t("required","m_axis_dout_tready");
x.t("dividend_tlast","input");
x.t("creates","circuit");
x.t("dividend","channel");
x.t("dividend","inputs");
x.t("enabled","clock");
x.t("topic","common");
x.t("prescaling","block");
x.t("prescaling","recommended");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("field","determines");
x.t("field","performance");
x.t("field","latency");
x.t("uses","following");
x.t("icon","simulink");
x.t("interface","axi");
x.t("basic","tab");
x.t("type","selected");
x.t("type","radix-2");
x.t("type","remainder");
x.t("radix2","throughput");
x.t("radix2","options");
x.t("division-by-zero","indication");
x.t("pipelined","manual");
x.t("reset","port");
x.t("xilinx","logicore");
x.t("xilinx","divider");
x.t("xilinx","blockset");
x.t("listed","following");
x.t("division","prescaling");
x.t("division","high-radix");
x.t("division","based");
x.t("division","using");
x.t("channel","ports");
x.t("channel","aclken");
x.t("channel","divsor");
x.t("channel","remainder");
x.t("channel","tlast");
x.t("detect","divide");
x.t("new","data");
x.t("indication","output");
x.t("low","synchronous");
x.t("block","clock");
x.t("block","parameter");
x.t("block","creates");
x.t("block","uses");
x.t("block","reset");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","parameters");
x.t("block","explained");
x.t("block","dout_tready");
x.t("dout_tlast","output");
x.t("invoked","double-clicking");
x.t("operands","allows");
x.t("determines","number");
x.t("determines","exact");
x.t("determines","interval");
x.t("determines","core");
x.t("determines","behavior");
x.t("around","bits");
x.t("bits","option");
x.t("bits","implementation");
x.t("bits","fractional");
x.t("entry","determines");
x.t("dsp","-1l");
x.t("dsp","math");
x.t("recommended","operand");
x.t("divisor","dividend");
x.t("requires","dsp48");
x.t("primitives","option");
x.t("high","radix");
x.t("m_axis_dout_tready","specifies");
x.t("libraries","axi4");
x.t("box","invoked");
x.t("common","options");
x.t("axi4","dsp");
x.t("manual","determined");
x.t("performance","latency");
x.t("virtex","device");
x.t("dsp48","variant");
x.t("cycles","required");
x.t("cycles","optional");
x.t("synchronous","clear");
x.t("3,3e","dsp");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("zero","determines");
x.t("nonblocking","blocking");
x.t("tuseer","adds");
x.t("operand","widths");
x.t("boxes","xilinx");
x.t("allows","remainder");
x.t("explained","topic");
x.t("width",":if");
x.t("input","ports");
x.t("input","output");
x.t("input","port");
x.t("input","tlast");
x.t("ports","tuseer");
x.t("ports","parameters");
x.t("ports","divided");
x.t("ports","and_all_tlasts");
x.t("ports","tab");
x.t("pass_dividend_tlast","pass");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("high-radix","division");
x.t("selected","entry");
x.t("divided","channel");
x.t("present","tlast");
x.t("supported","radix");
x.t("choices","high");
x.t("aclken","specifies");
x.t("aclken","option");
x.t("equivalent","selecting");
x.t("automatic","fully");
x.t("logical","present");
x.t("options","radix2");
x.t("options","detect");
x.t("options","block");
x.t("options","latency");
x.t("options","algorithm");
x.t("minimum","aresetn");
x.t("number","bits");
x.t("gui","aresetn");
x.t("and_all_tlasts","pass");
x.t("divsor","channel");
x.t("specifies","block");
x.t("combination","output");
x.t("index","xilinx");
x.t("variant","primitives");
x.t("emphasis","resources");
x.t("-1l","-1l");
x.t("-1l","divider");
x.t("enable","port");
x.t("fully","pipelined");
x.t("adds","tuser");
x.t("adds","tlast");
x.t("option","supports");
x.t("option","core");
x.t("exact","latency");
x.t("4.0","xilinx");
x.t("4.0","block");
x.t("4.0","divider");
x.t("greater","bits");
x.t("divider","generator");
x.t("radix-2","non-restoring");
x.t("less","around");
x.t("null","pass_dividend_tlast");
x.t("null","output");
x.t("simulink","model");
x.t("latency","field");
x.t("latency","input");
x.t("latency","options");
x.t("latency","configuration");
x.t("configuration","automatic");
x.t("dout_tready","output");
x.t("interval","clocks");
x.t("core","division-by-zero");
x.t("core","generator");
x.t("value","dividend_tlast");
x.t("value","divisor_tlast");
x.t("specific","basic");
x.t("specific","optional");
x.t("signed","complement");
x.t("implementation","requires");
x.t("implementation","emphasis");
x.t("selecting","aclken");
x.t("aresetn","pulse");
x.t("aresetn","specifies");
x.t("generator","v4.0");
x.t("generator","block");
x.t("generator","gui");
x.t("generator","4.0");
x.t("circuit","integer");
x.t("generated","recommended");
x.t("output","radix2");
x.t("output","channel");
x.t("output","determines");
x.t("output","choices");
x.t("output","null");
x.t("output","port");
x.t("output","fractional");
x.t("output","terms");
x.t("data","input");
x.t("data","sheet");
x.t("optional","ports");
x.t("clocks","new");
x.t("or_all_tlasts","pass");
x.t("port","active");
x.t("port","dividend");
x.t("port","dout_tlast");
x.t("port","input");
x.t("port","equivalent");
x.t("port","divsor");
x.t("port","null");
x.t("port","output");
x.t("port","or_all_tlasts");
x.t("port","axi");
x.t("port","pass");
x.t("sheet","spartan");
x.t("integer","division");
x.t("integer","operands");
x.t("two","cycles");
x.t("based","radix-2");
x.t("algorithm","type");
x.t("high_radix","division");
x.t("fractional","determines");
x.t("fractional","width");
x.t("fractional","port");
x.t("fractional","remainder");
x.t("complement","divisor");
x.t("radix","options");
x.t("radix","fractional");
x.t("following","field");
x.t("following","xilinx");
x.t("non-restoring","division");
x.t("non-restoring","integer");
x.t("model","basic");
x.t("used","block");
x.t("system","generator");
x.t("using","integer");
x.t("axi","interface");
x.t("axi","implementation");
x.t("axi","behavior");
x.t("blockset","libraries");
x.t("blockset","divider");
x.t("tab","common");
x.t("tab","parameters");
x.t("tab","optional");
x.t("remainder","type");
x.t("remainder","supported");
x.t("remainder","generated");
x.t("terms","clock");
x.t("tuser","input");
x.t("pass","divsor_tlast");
x.t("pass","logical");
x.t("pass","value");
x.t("divisor_tlast","input");
x.t("kintex","device");
x.t("behavior","dout_tlast");
x.t("behavior","nonblocking");
x.t("tlast","input");
x.t("tlast","combination");
x.t("tlast","adds");
x.t("tlast","output");
x.t("unsigned","signed");
x.t(":if","fractional");
x.t("spartan","device");
x.t("math","index");
x.t("widths","greater");
x.t("widths","less");
x.t("inputs","output");
x.t("inputs","high_radix");
x.t("resources","automatic");
}
