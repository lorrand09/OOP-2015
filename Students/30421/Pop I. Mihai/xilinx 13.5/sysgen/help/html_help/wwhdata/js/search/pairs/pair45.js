function FileData_Pairs(x)
{
x.t("overflow","handled");
x.t("library","created");
x.t("library","system");
x.t("provide","parameter");
x.t("provide","customized");
x.t("parameter","dialog");
x.t("hardware","co-simulation");
x.t("hardware","event");
x.t("hardware","similarly");
x.t("fpga","boards");
x.t("fpga","bitstream");
x.t("fpga","board");
x.t("drive","output");
x.t("co-simulation","hardware");
x.t("co-simulation","block");
x.t("co-simulation","blocks");
x.t("once","finished");
x.t("creates","new");
x.t("derived","port");
x.t("transfers","clocking");
x.t("handled","saturation");
x.t("handled","rounding");
x.t("dialog","boxes");
x.t("implemented","i.e");
x.t("interface","model");
x.t("type","quantization");
x.t("type","appropriate");
x.t("type","port");
x.t("saturation","system");
x.t("external","interface");
x.t("xilinx","fixed-point");
x.t("i.e","different");
x.t("automatically","creates");
x.t("assumes","external");
x.t("original","design");
x.t("original","subsystem");
x.t("block's","input");
x.t("new","hardware");
x.t("compiling","design");
x.t("clocking","hardware");
x.t("block","library");
x.t("block","drive");
x.t("block","once");
x.t("block","implemented");
x.t("block","assumes");
x.t("block","directly");
x.t("block","provides");
x.t("block","sends");
x.t("block","retrieves");
x.t("block","point");
x.t("block","signal");
x.t("block","match");
x.t("block","consumes");
x.t("block","interacts");
x.t("block","output");
x.t("boards","provide");
x.t("during","simulation");
x.t("assume","signal");
x.t("quantization","input");
x.t("directly","note");
x.t("connects","system");
x.t("settings","parameters");
x.t("tasks","device");
x.t("alternatively","port");
x.t("parameters","hardware");
x.t("provides","depend");
x.t("sends","corresponding");
x.t("boxes","allow");
x.t("allow","configured");
x.t("ports","block");
x.t("ports","assume");
x.t("ports","names");
x.t("device","configuration");
x.t("input","ports");
x.t("input","data");
x.t("store","hardware");
x.t("signals","system");
x.t("retrieves","data");
x.t("blocks","provide");
x.t("blocks","hardware");
x.t("blocks","may");
x.t("blocks","value");
x.t("blocks","system");
x.t("blocks","used");
x.t("blocks","using");
x.t("point","copy");
x.t("configured","different");
x.t("depend","fpga");
x.t("underlying","fpga");
x.t("written","block's");
x.t("design","fpga");
x.t("design","hardware");
x.t("design","blocks");
x.t("design","simulink");
x.t("signal","type");
x.t("signal","alternatively");
x.t("signal","types");
x.t("may","driven");
x.t("different","fpga");
x.t("different","settings");
x.t("match","original");
x.t("match","ports");
x.t("types","signals");
x.t("types","simulink");
x.t("types","rates");
x.t("types","used");
x.t("bitstream","simulink");
x.t("consumes","produces");
x.t("produces","xilinx");
x.t("produces","types");
x.t("produces","simulink");
x.t("finished","compiling");
x.t("event","output");
x.t("simulink","library");
x.t("simulink","block");
x.t("simulink","design");
x.t("simulink","fixed-point");
x.t("simulink","data");
x.t("simulink","doubles");
x.t("simulink","system");
x.t("board","block");
x.t("board","automating");
x.t("configuration","data");
x.t("interacts","underlying");
x.t("value","written");
x.t("generator","automatically");
x.t("generator","block");
x.t("generator","blocks");
x.t("generator","design");
x.t("subsystem","derived");
x.t("subsystem","port");
x.t("rates","match");
x.t("fixed-point","signal");
x.t("location","hardware");
x.t("output","ports");
x.t("output","port");
x.t("data","hardware");
x.t("data","transfers");
x.t("data","handled");
x.t("data","type");
x.t("data","types");
x.t("data","appropriate");
x.t("appropriate","block");
x.t("appropriate","location");
x.t("customized","hardware");
x.t("port","hardware");
x.t("port","connects");
x.t("port","types");
x.t("port","produces");
x.t("port","names");
x.t("port","drives");
x.t("doubles","output");
x.t("note","simulink");
x.t("copy","block");
x.t("created","order");
x.t("order","store");
x.t("driven","xilinx");
x.t("system","generator");
x.t("model","subsystem");
x.t("used","block");
x.t("used","during");
x.t("used","simulink");
x.t("simulation","hardware");
x.t("automating","tasks");
x.t("corresponding","data");
x.t("using","hardware");
x.t("similarly","block");
x.t("rounding","overflow");
x.t("names","hardware");
x.t("names","original");
x.t("drives","simulink");
}
