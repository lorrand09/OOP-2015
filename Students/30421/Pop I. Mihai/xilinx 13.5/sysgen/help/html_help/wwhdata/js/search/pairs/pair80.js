function FileData_Pairs(x)
{
x.t("clock","clock");
x.t("clock","source");
x.t("clock","substituted");
x.t("clock","name");
x.t("clock","enables");
x.t("clock","enable");
x.t("clock","least");
x.t("clock","named");
x.t("clock","along");
x.t("clock","port");
x.t("clock","corresponding");
x.t("clock","conventions");
x.t("example","clock");
x.t("example","shown");
x.t("example","translate");
x.t("example","sometimes");
x.t("example","importing");
x.t("example","vhdl");
x.t("example","configuration");
x.t("example","simulink");
x.t("example","dynamic");
x.t("example","output");
x.t("example","following");
x.t("complex","hdl");
x.t("sysgenportdescriptors","used");
x.t("arise","information");
x.t("inputratesknown","used");
x.t("moment","provide");
x.t("excellent","become");
x.t("four","times");
x.t("double-clicking","icon");
x.t("tells","mode");
x.t("supports","modelsim");
x.t("ieee","ieee.std_logic_1164.all");
x.t("ieee.std_logic_1164.all","ieee.numeric_std.all");
x.t("this_block.tagascombinational","this_block.addsimulinkinport");
x.t("below","wizard");
x.t("below","simple");
x.t("below","black");
x.t("below","port");
x.t("below","system");
x.t("parameter","dialog");
x.t("parameter","configuration");
x.t("provide","information");
x.t("provide","system");
x.t("method","black");
x.t("available","inside");
x.t("available","input");
x.t("appendix","good");
x.t("token","example");
x.t("reported","port's");
x.t("reported","indeterminate");
x.t("possible","store");
x.t("combined","single");
x.t("library","ieee");
x.t("this_block.addsimulinkinport","din");
x.t("hardware","description");
x.t("hardware","co-simulation");
x.t("hardware","approach");
x.t("hardware","appropriate");
x.t("hardware","system");
x.t("hardware","associated");
x.t("drive","clock");
x.t("drive","ports");
x.t("drive","simulink");
x.t("easy","associate");
x.t("defines","hdl");
x.t("defines","necessary");
x.t("defines","generics");
x.t("defines","clocks");
x.t("this_block.addgeneric","width");
x.t("version","data");
x.t("files","e.g");
x.t("files","used");
x.t("every","clock");
x.t("every","hdl");
x.t("every","weak");
x.t("every","indeterminate");
x.t("every","this_block");
x.t("every","black");
x.t("every","system");
x.t("shown","below");
x.t("shown","figure");
x.t("shown","above");
x.t("needs","modified");
x.t("needs","check");
x.t("(this_block.inputtypesknown)","this_block.addgeneric");
x.t("(this_block.inputtypesknown)","dynamic");
x.t("applied","this_block");
x.t("port's","rate");
x.t("anywhere","matlab");
x.t("m-functions","characters");
x.t("description","language");
x.t("co-simulation","co-simulation");
x.t("co-simulation","hdl");
x.t("co-simulation","block");
x.t("co-simulation","during");
x.t("co-simulation","addition");
x.t("co-simulation","ports");
x.t("co-simulation","blocks");
x.t("co-simulation","verilog");
x.t("refer","topic");
x.t("timing","clocking");
x.t("describes","ports");
x.t("static","ports");
x.t("static","dynamic");
x.t("frist","line");
x.t("6-1l","black");
x.t("ise","simulator");
x.t("activate","different");
x.t("related","corresponding");
x.t("having","multiple");
x.t("vice-versa","types");
x.t("vice-versa","although");
x.t("source","used");
x.t("required","necessary");
x.t("required","top-level");
x.t("required","black");
x.t("wizard","usually");
x.t("wizard","invoked");
x.t("wizard","opens");
x.t("wizard","configuration");
x.t("wizard","tool");
x.t("wizard","choose");
x.t("wizard","described");
x.t("wizard","copy");
x.t("wizard","generates");
x.t("binary","point");
x.t("doing","allows");
x.t("instance","sysgenblockdescriptor");
x.t("wrapper","example");
x.t("wrapper","vhdl");
x.t("limits","function");
x.t("topic","clock");
x.t("topic","hdl");
x.t("topic","configurable");
x.t("topic","documentation");
x.t("topic","black");
x.t("hdl","clock");
x.t("hdl","files");
x.t("hdl","co-simulation");
x.t("hdl","file");
x.t("hdl","simulator");
x.t("hdl","component");
x.t("hdl","combinational");
x.t("hdl","signals");
x.t("hdl","signal");
x.t("hdl","specifies");
x.t("hdl","co-");
x.t("hdl","counterpart");
x.t("hdl","netlisting");
x.t("hdl","modules");
x.t("hdl","black");
x.t("hdl","separate");
x.t("hdl","entity");
x.t("hdl","system");
x.t("hdl","simulation");
x.t("hdl","expressed");
x.t("hdl","associated");
x.t("hdl","co-simulated");
x.t("helps","understand");
x.t("uses","configurable");
x.t("uses","single");
x.t("uses","license");
x.t("uses","additional");
x.t("uses","following");
x.t("uses","object");
x.t("tailored","hand");
x.t("tailored","adding");
x.t("dialog","box");
x.t("edif","associated");
x.t("conditional","block");
x.t("conditional","blocks");
x.t("field","system");
x.t("field","labeled");
x.t("line","sets");
x.t("varieties","weak");
x.t("weak","low");
x.t("weak","high");
x.t("interface","configuring");
x.t("interface","e.g");
x.t("interface","either");
x.t("interface","used");
x.t("interface","simulation");
x.t("xlfir","xlregister");
x.t("icon","simulink");
x.t("icon","work");
x.t("press","open");
x.t("modified","depends");
x.t("necessary","add");
x.t("necessary","check");
x.t("necessary","data");
x.t("necessary","port");
x.t("necessary","portion");
x.t("likewise","simulink");
x.t("extension","edit");
x.t("mode","tells");
x.t("mode","ise");
x.t("mode","external");
x.t("mode","license");
x.t("mode","black");
x.t("mode","inactive");
x.t("configurable","subsystem");
x.t("configurable","subsystems");
x.t("basic","elements");
x.t("basic","tab");
x.t("modelsim","hdl");
x.t("modelsim","block");
x.t("modelsim","simulator");
x.t("modelsim","simulation");
x.t("please","refer");
x.t("type","rate");
x.t("type","direction");
x.t("type","suit");
x.t("type","std_logic");
x.t("type","and/or");
x.t("type","data");
x.t("type","translation");
x.t("sample","rate");
x.t("sample","period");
x.t("sample","periods");
x.t("sample","rates");
x.t("times","clock");
x.t("times","rate");
x.t("times","fast");
x.t("times","function");
x.t("times","model");
x.t("open","button");
x.t("change","response");
x.t("change","dynamic");
x.t("change","occasionally");
x.t("vary","width");
x.t("best","simulation");
x.t("word_parity_block","this_block.tagascombinational");
x.t("word_parity_block","generic");
x.t("word_parity_block","begin");
x.t("word_parity_block","architecture");
x.t("(din.rate)","end");
x.t("wired","blocks");
x.t("incorporating","hdl");
x.t("external","simulation");
x.t("external","co-simulator");
x.t("associates","function");
x.t("hand","whether");
x.t("response","changes");
x.t("(2)",".setrate");
x.t("vector","topmost");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("however","displayed");
x.t("down","least");
x.t("multiple","clock");
x.t("multiple","blocks");
x.t("multiple","rates");
x.t("rate","related");
x.t("rate","likewise");
x.t("rate","times");
x.t("rate","i.e");
x.t("rate","specified");
x.t("rate","enables");
x.t("rate","checking");
x.t("rate","ports");
x.t("rate","input");
x.t("rate","simulink");
x.t("rate","constant");
x.t("rate","output");
x.t("i.e","every");
x.t("i.e","1/8");
x.t("i.e","direct");
x.t("i.e","vhdl");
x.t("i.e","configuration");
x.t("i.e","paths");
x.t("whenever","black");
x.t("tagged","doing");
x.t("tagged","combinational");
x.t("identify","blocks");
x.t("inside","configuration");
x.t("inside","system");
x.t("1/8","configuration");
x.t("1/8","black");
x.t("indeterminates","signal");
x.t("(din)","variable");
x.t("listed","following");
x.t("automatically","example");
x.t("automatically","makes");
x.t("automatically","incorporated");
x.t("automatically","generates");
x.t("xlregister","bi-directional");
x.t("block's","interface");
x.t("block's","input");
x.t("block's","configuration");
x.t("needed","allow");
x.t("needed","code");
x.t("entities","black");
x.t("inf","example");
x.t("speed","requires");
x.t("mentor","graphics");
x.t("simulating","co-simulator");
x.t("fixed-","point");
x.t("back","system");
x.t("this_block.addfile","word_parity_block.vhd");
x.t("clocking","general");
x.t("single","clock");
x.t("single","modelsim");
x.t("new","black");
x.t("objects","sysgenblockdescriptors");
x.t("certain","times");
x.t("mismatch","error");
x.t("low","signal");
x.t("low","translated");
x.t("translate","every");
x.t("loop","partial_parity");
x.t("loop","parity");
x.t("block","parameter");
x.t("block","defines");
x.t("block","topic");
x.t("block","field");
x.t("block","uses");
x.t("block","icon");
x.t("block","tagged");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","requires");
x.t("block","provides");
x.t("block","parameters");
x.t("block","absolute");
x.t("block","elsewhere");
x.t("block","design");
x.t("block","configuration");
x.t("block","black");
x.t("block","note");
x.t("block","used");
x.t("block","following");
x.t("block","system");
x.t("block","containing");
x.t("includes","code");
x.t("includes","several");
x.t("top","level");
x.t("usually","mode");
x.t("usually","used");
x.t("usually","co-simulator");
x.t("license","required");
x.t("license","avoid");
x.t("simulator","example");
x.t("simulator","vice-versa");
x.t("simulator","modelsim");
x.t("simulator","external");
x.t("simulator","mentor");
x.t("simulator","done");
x.t("m-function","needs");
x.t("m-function","rate");
x.t("m-function","automatically");
x.t("m-function","test");
x.t("m-function","makes");
x.t("m-function","produced");
x.t("m-function","width");
x.t("m-function","p-function");
x.t("m-function","specifies");
x.t("m-function","periods");
x.t("m-function","sees");
x.t("m-function","black");
x.t("m-function","described");
x.t("m-function","following");
x.t("m-function","run");
x.t("m-function","using");
x.t("m-function","associated");
x.t("m-function","infromation");
x.t("invoked","double-clicking");
x.t("invoked","whenever");
x.t("invoked","simulink");
x.t("invoked","several");
x.t("file","defines");
x.t("file","extension");
x.t("file","containing");
x.t("file","associated");
x.t("generics","required");
x.t("generics","depend");
x.t("generics","implementation");
x.t("able","moment");
x.t("(false)","-----------------------------");
x.t("during","co-simulation");
x.t("during","code");
x.t("treated","ports");
x.t("substring","clk");
x.t("around","required");
x.t("around","add");
x.t("add","modelsim");
x.t("add","separate");
x.t("incorrect","configuration");
x.t("(inputratesknown)","-----------------------------");
x.t("according","block's");
x.t("according","conventions");
x.t("results","incorrect");
x.t("results","black");
x.t("results","producing");
x.t("check","type");
x.t("check","types");
x.t("check","rates");
x.t("simple","vhdl");
x.t("bits","hdl");
x.t("bits","become");
x.t("word_parity_block.vhd","return");
x.t("depends","complex");
x.t("depends","block's");
x.t("selects","language");
x.t("configuring","black");
x.t("become","familiar");
x.t("become","represent");
x.t("become","otherwise");
x.t("parity.usehdlvector","(false)");
x.t("dsp","-1l");
x.t("requirements","hdl");
x.t("requirements","conventions");
x.t("specified","appendix");
x.t("specified","block");
x.t("specified","according");
x.t("specified","simulink");
x.t("specified","output");
x.t("requires","clock");
x.t("requires","simulation");
x.t("substituted","clk");
x.t("essential","block");
x.t("test","configure");
x.t("high","weak");
x.t("box","example");
x.t("box","possible");
x.t("box","every");
x.t("box","needs");
x.t("box","wizard");
x.t("box","hdl");
x.t("box","press");
x.t("box","mode");
x.t("box","associates");
x.t("box","xilinx");
x.t("box","block's");
x.t("box","block");
x.t("box","invoked");
x.t("box","treated");
x.t("box","selects");
x.t("box","requirements");
x.t("box","stored");
x.t("box","mixture");
x.t("box","produced");
x.t("box","input");
x.t("box","adhere");
x.t("box","function");
x.t("box","may");
x.t("box","directory");
x.t("box","floating-");
x.t("box","added");
x.t("box","assigned");
x.t("box","least");
x.t("box","translated");
x.t("box","e.g");
x.t("box","configuration");
x.t("box","black");
x.t("box","examples");
x.t("box","ignores");
x.t("box","coupled");
x.t("box","used");
x.t("box","ordinarily");
x.t("box","simulation");
x.t("box","entity");
x.t("box","expressed");
x.t("box","describe");
x.t("libraries","basic");
x.t("resulting","design");
x.t("name","clock");
x.t("name","hdl");
x.t("name","sample");
x.t("name","modelsim");
x.t("name","collide");
x.t("name","contain");
x.t("name","respectively");
x.t("name","function");
x.t("name","configuration");
x.t("name","system");
x.t("definition","needed");
x.t("definition","matlab");
x.t("direction","bit");
x.t("suit","signal");
x.t("path","co-simulation");
x.t("path","i.e");
x.t("path","tagged");
x.t("path","note");
x.t("outside","conditional");
x.t("familiar","black");
x.t("obtain","input");
x.t("stored","anywhere");
x.t("stored","directory");
x.t("stored","subsystem");
x.t("enables","activate");
x.t("enables","block");
x.t("enables","enable");
x.t("enables","appear");
x.t("enables","black");
x.t("follows","clock");
x.t("follows","block");
x.t("resp","name");
x.t("sysgenblockdescriptors","used");
x.t("blockdescriptor","members");
x.t("edit","box");
x.t("constructed","mode");
x.t("virtex","device");
x.t("component","wrapper");
x.t("component","black");
x.t("component","associated");
x.t("handles","timing");
x.t("declares","whether");
x.t("direct","feed-through");
x.t("avoid","problems");
x.t("avoid","running");
x.t("avoid","mistake");
x.t("argument","matlab");
x.t("custom","simulation-");
x.t("3,3e","dsp");
x.t("provides","object-based");
x.t("provides","incorporate");
x.t("collide","entity");
x.t("checking","defines");
x.t("illustrates","point");
x.t("methods","applied");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("boolean","signals");
x.t("boolean","unsigned");
x.t("find","information");
x.t("boxes","every");
x.t("boxes","helps");
x.t("boxes","however");
x.t("boxes","ports");
x.t("boxes","share");
x.t("boxes","consisting");
x.t("boxes","module");
x.t("boxes","work");
x.t("boxes","mixed");
x.t("standard","logic");
x.t("standard","vhdl");
x.t("makes","easy");
x.t("makes","this_block");
x.t("makes","vhdl");
x.t("matlab","limits");
x.t("matlab","m-function");
x.t("matlab","path");
x.t("matlab","this_block");
x.t("matlab","class");
x.t("determine","simulink");
x.t("verifies","input");
x.t("identified","producing");
x.t("generic","width");
x.t("produced","wizard");
x.t("produced","using");
x.t("mixture","i.e");
x.t("allows","system");
x.t("fast","system");
x.t("writes","zeroes");
x.t("writes","vhdl");
x.t("partially","indeterminate");
x.t("pairs","i.e");
x.t("sets","generics");
x.t("sets","first");
x.t("sets","types");
x.t("segment","block.outport");
x.t("lines","output");
x.t("allow","multiple");
x.t("allow","two");
x.t("ports","example");
x.t("ports","static");
x.t("ports","hdl");
x.t("ports","change");
x.t("ports","inf");
x.t("ports","usually");
x.t("ports","generics");
x.t("ports","sets");
x.t("ports","signals");
x.t("ports","supported");
x.t("ports","end");
x.t("ports","appear");
x.t("ports","non-vector");
x.t("ports","named");
x.t("ports","black");
x.t("ports","clocks");
x.t("ports","ordered");
x.t("ports","system");
x.t("ports","including");
x.t("ports","produce");
x.t("ports","visible");
x.t("addition","incorporating");
x.t("input","block");
x.t("input","argument");
x.t("input","ports");
x.t("input","rates");
x.t("input","output");
x.t("input","clk");
x.t("input","data");
x.t("input","port");
x.t("understand","clocks");
x.t("understand","system");
x.t("differ","clock");
x.t("contain","substring");
x.t("width","binary");
x.t("width","type");
x.t("width","mismatch");
x.t("width","this_block.port");
x.t("width","integer");
x.t("combinational","path");
x.t("combinational","others");
x.t("combinational","feed-through");
x.t("combinational","configuration");
x.t("problems","arise");
x.t("characters","include");
x.t("relative","subsystem");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("signals","varieties");
x.t("signals","back");
x.t("signals","cannot");
x.t("signals","indeterminate");
x.t("signals","whose");
x.t("signals","tools");
x.t("signals","system");
x.t("adhere","following");
x.t("store","block");
x.t("begin","partial_parity");
x.t("begin","word_parity_process");
x.t("(this_block.inputratesknown)","din");
x.t("logic","types");
x.t("logic","floating-point");
x.t("blocks","combined");
x.t("blocks","having");
x.t("blocks","resulting");
x.t("blocks","e.g");
x.t("blocks","simulink");
x.t("blocks","black");
x.t("blocks","system");
x.t("supported","hdl");
x.t("point","(this_block.inputtypesknown)");
x.t("point","fixed-");
x.t("point","signals");
x.t("point","operator");
x.t("point","position");
x.t("sometimes","necessary");
x.t("licenses","several");
x.t("error","reported");
x.t("downto","parity");
x.t("downto","std_logic_vector");
x.t("period","field");
x.t("period","1/8");
x.t("period","specified");
x.t("period","simulink");
x.t("respectively","clock");
x.t("respectively","following");
x.t("p-function","called");
x.t("object-based","interface");
x.t("know","enough");
x.t("members","inputtypesknown");
x.t("next","two");
x.t("absolute","relative");
x.t("din","this_block.port");
x.t("din",".width");
x.t("din","this_block.addsimulinkoutport");
x.t("din","parity.setrate");
x.t("din","std_logic_vector");
x.t("din","(n)");
x.t("din'range","loop");
x.t("top-level","wrapper");
x.t("top-level","hdl");
x.t("top-level","entity");
x.t("button","wizard");
x.t("depend","input");
x.t("options","sample");
x.t("first","output");
x.t("elsewhere","path");
x.t("fixed","point");
x.t("control","logic");
x.t("others","essential");
x.t("importing","hdl");
x.t("importing","vhdl");
x.t("this_block.port","din");
x.t("this_block.port","parity");
x.t("design","example");
x.t("design","black");
x.t("design","system");
x.t("design","specify");
x.t("signal","every");
x.t("signal","become");
x.t("signal","partially");
x.t("signal","returned");
x.t("signal","actual");
x.t("signal","black");
x.t("signal","system");
x.t("signal","drives");
x.t("function","tailored");
x.t("function","block");
x.t("function","invoked");
x.t("function","specified");
x.t("function","obtain");
x.t("function","stored");
x.t("function","typically");
x.t("function","word_parity_block_config");
x.t("function","names");
x.t("enough","code");
x.t("approach","gives");
x.t("topmost","bit");
x.t("this_block.setentityname","word_parity_block");
x.t(".width","end");
x.t("box's","ports");
x.t("software","model");
x.t("define","implementation");
x.t("define","port");
x.t("define","entity");
x.t("cannot","signal's");
x.t("cannot","used");
x.t("different","portions");
x.t("may","clock");
x.t("may","know");
x.t("whether","hdl");
x.t("whether","configuration");
x.t("specifies","name");
x.t("specifies","top-level");
x.t("specifies","black");
x.t("particular","exceptions");
x.t("represents","black");
x.t("co-","simulator");
x.t("share","co-simulation");
x.t("index","system");
x.t("language","i.e");
x.t("language","(hdl)");
x.t("verilog","describes");
x.t("verilog","vhdl");
x.t("verilog","simulink");
x.t("verilog","black");
x.t("std_logic","begin");
x.t("std_logic","verilog");
x.t("std_logic","end");
x.t("characteristics","sysgenportdescriptors");
x.t("characteristics","interface");
x.t("zeroes","output");
x.t("directory","containing");
x.t("directory","contains");
x.t("opens","automatically");
x.t("changes","design");
x.t("types","objects");
x.t("types","generics");
x.t("types","check");
x.t("types","verifies");
x.t("types","input");
x.t("types","signals");
x.t("types","translated");
x.t("types","rates");
x.t("types","dynamic");
x.t("types","appropriate");
x.t("identical","translated");
x.t("indeterminate","hdl");
x.t("indeterminate","signals");
x.t("indeterminate","signal");
x.t("indeterminate","becomes");
x.t("indeterminate","values");
x.t("indeterminate","system");
x.t("returned","system");
x.t("floating-","point");
x.t("vhdl","shown");
x.t("vhdl","entities");
x.t("vhdl","needed");
x.t("vhdl","usually");
x.t("vhdl","component");
x.t("vhdl","this_block.setentityname");
x.t("vhdl","verilog");
x.t("vhdl","module");
x.t("vhdl","entity");
x.t("vhdl","naming");
x.t("added","model");
x.t("this_block","available");
x.t("this_block","every");
x.t("this_block","specified");
x.t("this_block","object");
x.t("assigned","sample");
x.t("(1)","parity.usehdlvector");
x.t("(1)",".setrate");
x.t("-1l","6-1l");
x.t("floating-point","index");
x.t("code","shown");
x.t("code","conditional");
x.t("code","depends");
x.t("code","outside");
x.t("code","illustrates");
x.t("code","sets");
x.t("code","segment");
x.t("code","executed");
x.t("code","generation");
x.t("follow","standard");
x.t("enable","vice-versa");
x.t("enable","type");
x.t("enable","rate");
x.t("enable","name");
x.t("enable","ports");
x.t("enable","signal");
x.t("enable","named");
x.t("enable","rates");
x.t("enable","port");
x.t("enable","corresponding");
x.t("counterpart","blocks");
x.t("src_ce_1","clock");
x.t("executed","avoid");
x.t("end","word_parity_block");
x.t("end","loop");
x.t("end","(inputratesknown)");
x.t("end","input");
x.t("end","process");
x.t("end","(inputtypesknown)");
x.t("end","behavior");
x.t("sysgenblockdescriptor","matlab");
x.t("level","ports");
x.t("signal's","value");
x.t("return","xilinx");
x.t("appear","pairs");
x.t("appear","generated");
x.t("least","clock");
x.t("least","combinational");
x.t("least","significant");
x.t("lower","case");
x.t("triggered","output");
x.t("known","particular");
x.t("known","code");
x.t("parity","this_block.port");
x.t("parity","std_logic");
x.t("parity","partial_parity");
x.t("parity","parity");
x.t("parity","parity.setwidth");
x.t("partial_parity","std_logic");
x.t("partial_parity","end");
x.t("partial_parity","partial_parity");
x.t("partial_parity","xor_bit_loop");
x.t("partial_parity","xor");
x.t("incorporate","hardware");
x.t("incorporate","either");
x.t("translated","hardware");
x.t("translated","rules");
x.t("translated","booleans");
x.t("translated","system");
x.t("documentation","modelsim");
x.t("e.g","hardware");
x.t("e.g","edif");
x.t("e.g","xlfir");
x.t("e.g","input");
x.t("e.g","ports");
x.t("e.g","variable");
x.t("e.g","bit");
x.t("e.g","../modelsim");
x.t("whose","rates");
x.t("actual","clock");
x.t("feed-through","input");
x.t("feed-through","paths");
x.t("variable","definition");
x.t("variable","partial_parity");
x.t(".setrate","theinputrate");
x.t(".setrate","(theinputrate)");
x.t("simulation-","top-level");
x.t("ieee.numeric_std.all","entity");
x.t("displayed","system");
x.t("non-vector","inputs");
x.t("and/or","rate");
x.t("consider","following");
x.t("rules","used");
x.t("booleans","fixed-point");
x.t("taken","black");
x.t("architecture","behavior");
x.t("this_block.settoplevellanguage","vhdl");
x.t("simulink","clock");
x.t("simulink","every");
x.t("simulink","simulator");
x.t("simulink","able");
x.t("simulink","may");
x.t("simulink","implementation");
x.t("simulink","falling-edge");
x.t("simulink","model");
x.t("simulink","system");
x.t("simulink","using");
x.t("technology","find");
x.t("configuration","parameter");
x.t("configuration","m-functions");
x.t("configuration","wizard");
x.t("configuration","sample");
x.t("configuration","m-function");
x.t("configuration","name");
x.t("configuration","options");
x.t("include","file");
x.t("netlisting","please");
x.t("named","according");
x.t("named","this_block");
x.t("named","src_ce_1");
x.t("named","src_clk_1");
x.t("additional","clock");
x.t("additional","vhdl");
x.t("theinputrate","frist");
x.t("theinputrate","block.outport");
x.t("graphics","hdl");
x.t("running","licenses");
x.t("tools","identical");
x.t("value","indeterminate");
x.t("value","bring");
x.t("instructed","black");
x.t("implementation","files");
x.t("implementation","hdl");
x.t("implementation","system");
x.t("implementation","associated");
x.t("several","times");
x.t("several","black");
x.t("figure","below");
x.t("inputtypesknown","inputratesknown");
x.t("mistake","including");
x.t("periods","sample");
x.t("periods","configuration");
x.t("periods","output");
x.t("periods","dynamic");
x.t("periods","black");
x.t("constant","ports");
x.t("block.outport","(2)");
x.t("block.outport","(1)");
x.t("block.outport","(3)");
x.t("specific","basic");
x.t("gives","best");
x.t("signed","fixed");
x.t("width-1","downto");
x.t("this_block.addsimulinkoutport","parity");
x.t("generator","supports");
x.t("generator","example");
x.t("generator","token");
x.t("generator","drive");
x.t("generator","uses");
x.t("generator","hdl");
x.t("generator","interface");
x.t("generator","identify");
x.t("generator","indeterminates");
x.t("generator","automatically");
x.t("generator","block");
x.t("generator","includes");
x.t("generator","bits");
x.t("generator","requirements");
x.t("generator","definition");
x.t("generator","handles");
x.t("generator","provides");
x.t("generator","boolean");
x.t("generator","standard");
x.t("generator","writes");
x.t("generator","ports");
x.t("generator","blocks");
x.t("generator","e.g");
x.t("generator","black");
x.t("generator","information");
x.t("generator","work");
x.t("generator","model");
x.t("generator","system");
x.t("generator","translations");
x.t("generator","drives");
x.t("sorts","signals");
x.t("generated","hdl");
x.t("rates","drive");
x.t("rates","hardware");
x.t("rates","specified");
x.t("rates","differ");
x.t("rates","respectively");
x.t("rates","function");
x.t("rates","known");
x.t("rates","additional");
x.t("falling-edge","triggered");
x.t("generate","example");
x.t("multiples","system");
x.t("subsystem","described");
x.t("subsystem","containing");
x.t("subsystem","contains");
x.t("fixed-point","values");
x.t("process","(din)");
x.t("process","word_parity_process");
x.t("(this_block)","this_block.settoplevellanguage");
x.t("models","system");
x.t("although","black");
x.t("runs","system");
x.t("sees","reported");
x.t("(3)",".setrate");
x.t("represent","signal's");
x.t("black","box");
x.t("black","boxes");
x.t("black","box's");
x.t("output","rate");
x.t("output","ports");
x.t("output","data");
x.t("output","port");
x.t("along","multiple");
x.t("separate","clock");
x.t("separate","enable");
x.t("src_clk_1","clock");
x.t("dynamic","static");
x.t("dynamic","ports");
x.t("dynamic","output");
x.t("dynamic","black");
x.t("dynamic","port");
x.t("consisting","two");
x.t("good","generate");
x.t("-----------------------------","(this_block.inputtypesknown)");
x.t("-----------------------------","this_block.addfile");
x.t("-----------------------------","(this_block.inputratesknown)");
x.t("-----------------------------","-----------------------------");
x.t("information","topic");
x.t("information","input");
x.t("information","known");
x.t("information","configuration");
x.t("capabilities","black");
x.t("module","library");
x.t("module","port");
x.t("clk","clock");
x.t("clk","example");
x.t("clk","resp");
x.t("data","type");
x.t("data","rate");
x.t("data","writes");
x.t("data","cannot");
x.t("data","sheet");
x.t("tool","makes");
x.t("configure","black");
x.t("(theinputrate)","block.outport");
x.t("becomes","entirely");
x.t("word_parity_process","end");
x.t("word_parity_process","process");
x.t("examples","excellent");
x.t("examples","demonstrate");
x.t("bit","vector");
x.t("bit","down");
x.t("bit","width");
x.t("bit","indeterminate");
x.t("bit","std_logic_vector");
x.t("clocks","clock");
x.t("clocks","black");
x.t("clocks","work");
x.t("appropriate","times");
x.t("appropriate","rate");
x.t("appropriate","avoid");
x.t("inactive","ise");
x.t("inactive","black");
x.t("ignores","input");
x.t("parity.setrate","(din.rate)");
x.t("generation","system");
x.t("case","follow");
x.t("tagascombinational","method");
x.t("coupled","using");
x.t("values","boolean");
x.t("values","instructed");
x.t("xor_bit_loop","din'range");
x.t("ordered","significant");
x.t("port","clock");
x.t("port","hdl");
x.t("port","vary");
x.t("port","type");
x.t("port","sample");
x.t("port","rate");
x.t("port","single");
x.t("port","certain");
x.t("port","block");
x.t("port","sometimes");
x.t("port","next");
x.t("port","din");
x.t("port","top-level");
x.t("port","characteristics");
x.t("port","types");
x.t("port","consider");
x.t("port","runs");
x.t("port","appropriate");
x.t("port","based");
x.t("port","run");
x.t("port","names");
x.t("port","associated");
x.t("port","visible");
x.t("described","below");
x.t("described","topic");
x.t("choose","hdl");
x.t("called","block's");
x.t("above","available");
x.t("above","uses");
x.t("xor","din");
x.t("sheet","spartan");
x.t("incorporated","wired");
x.t("std_logic_vector","downto");
x.t("std_logic_vector","verilog");
x.t("std_logic_vector","width-1");
x.t("two","lines");
x.t("two","types");
x.t("two","paths");
x.t("done","simulation");
x.t("note","matlab");
x.t("note","code");
x.t("integer","multiples");
x.t("integer","port");
x.t("otherwise","bits");
x.t("significant","bit");
x.t("work","around");
x.t("work","black");
x.t("work","system");
x.t("copy","file");
x.t("typically","includes");
x.t("based","attributes");
x.t("mixed","mode");
x.t("(n)","end");
x.t("word_parity_block_config","(this_block)");
x.t("(inputtypesknown)","-----------------------------");
x.t("associate","verilog");
x.t("entirely","indeterminate");
x.t("following","example");
x.t("following","topic");
x.t("following","xilinx");
x.t("following","signal");
x.t("following","specifies");
x.t("following","code");
x.t("following","system");
x.t("elements","control");
x.t("system","rate");
x.t("system","period");
x.t("system","generator");
x.t("(hdl)","models");
x.t("used","provide");
x.t("used","drive");
x.t("used","inside");
x.t("used","during");
x.t("used","determine");
x.t("used","understand");
x.t("used","define");
x.t("used","incorporate");
x.t("used","used");
x.t("used","translation");
x.t("used","without");
x.t("used","specify");
x.t("simulation","mode");
x.t("simulation","speed");
x.t("simulation","results");
x.t("simulation","software");
x.t("simulation","e.g");
x.t("simulation","data");
x.t("simulation","model");
x.t("simulation","behavior");
x.t("entity","word_parity_block");
x.t("entity","automatically");
x.t("entity","name");
x.t("entity","characteristics");
x.t("entity","taken");
x.t("entity","associated");
x.t("either","ise");
x.t("either","vhdl");
x.t("model","wizard");
x.t("model","basic");
x.t("model","new");
x.t("model","stored");
x.t("model","constructed");
x.t("model","e.g");
x.t("model","technology");
x.t("model","configuration");
x.t("model","implementation");
x.t("model","black");
x.t("model","compiled");
x.t("corresponding","clock");
x.t("corresponding","sample");
x.t("run","four");
x.t("run","configuration");
x.t("ordinarily","file");
x.t("using","co-simulation");
x.t("using","configurable");
x.t("using","tagascombinational");
x.t("using","system");
x.t("demonstrate","capabilities");
x.t("bi-directional","ports");
x.t("general","produce");
x.t("portions","hardware");
x.t("containing","combinational");
x.t("containing","function");
x.t("containing","black");
x.t("containing","model");
x.t("class","methods");
x.t("bring","hdl");
x.t("translations","tailored");
x.t("v6.0","importing");
x.t("v6.0","v6.0");
x.t("blockset","libraries");
x.t("blockset","black");
x.t("expressed","follows");
x.t("expressed","integer");
x.t("tab","follows");
x.t("tab","parameters");
x.t("portion","design");
x.t("translation","hdl");
x.t("translation","following");
x.t("adding","custom");
x.t("kintex","device");
x.t("behavior","word_parity_block");
x.t("behavior","simulink");
x.t("behavior","following");
x.t("associated","hdl");
x.t("associated","sample");
x.t("associated","external");
x.t("associated","block");
x.t("associated","black");
x.t("associated","system");
x.t("names","lower");
x.t("names","including");
x.t("without","change");
x.t("paths","identified");
x.t("paths","combinational");
x.t("paths","system");
x.t("operator","v6.0");
x.t("drives","clock");
x.t("drives","defines");
x.t("occasionally","function");
x.t("describe","interface");
x.t("including","type");
x.t("including","code");
x.t("including","configuration");
x.t("position","name");
x.t("compiled","function");
x.t("labeled","hdl");
x.t("../modelsim","simulating");
x.t("unsigned","signed");
x.t("spartan","device");
x.t("produce","multiple");
x.t("produce","consume");
x.t("consume","sorts");
x.t("conventions","clock");
x.t("conventions","declares");
x.t("conventions","described");
x.t("conventions","entity");
x.t("infromation","top");
x.t("naming","conventions");
x.t("visible","black");
x.t("visible","system");
x.t("generates","uses");
x.t("generates","configuration");
x.t("exceptions","blockdescriptor");
x.t("subsystems","allow");
x.t("subsystems","system");
x.t("specify","name");
x.t("specify","simulation");
x.t("co-simulated","simulink");
x.t("inputs","e.g");
x.t("contains","black");
x.t("contains","model");
x.t("attributes","input");
x.t("object","instance");
x.t("object","represents");
x.t("object","named");
x.t("co-simulator","necessary");
x.t("co-simulator","block");
x.t("co-simulator","simulation");
x.t("producing","hardware");
x.t("producing","simulation");
x.t("parity.setwidth","(1)");
}
