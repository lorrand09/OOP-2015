function FileData_Pairs(x)
{
x.t("supports","matlab");
x.t("complex","dsp");
x.t("complex","muxing");
x.t("example","state");
x.t("example","non-streaming");
x.t("example","figure");
x.t("states","need");
x.t("states","notice");
x.t("clock","cycles");
x.t("clock","enable");
x.t("dcm","schemes");
x.t("method","implementing");
x.t("below","shows");
x.t("provide","basic");
x.t("provide","options");
x.t("available","outputs");
x.t("available","inputs");
x.t("/sysgen/examples/getting_started_training/lab4/","lab");
x.t("hardware","level");
x.t("fsm","needs");
x.t("fsm","easily");
x.t("implement","finite");
x.t("implement","logical");
x.t("bitwise","xor");
x.t("1011","fsm");
x.t("needs","able");
x.t("mcode","block");
x.t("describes","algorithmic");
x.t("tree","following");
x.t("required","dsp");
x.t("required","may");
x.t("persistent","initialized");
x.t("persistent","variable");
x.t("binary","points");
x.t("binary","values");
x.t("instructions","open");
x.t("instructions","located");
x.t("instructions","lab");
x.t("arguments","first");
x.t("performs","bitwise");
x.t("summary","mcode");
x.t("ability","include");
x.t("creates","condition");
x.t("enabled","either");
x.t("conditional","logic");
x.t("conditional","control");
x.t("shows","simple");
x.t("declared","persistent");
x.t("outputs","lesson");
x.t("outputs","expression");
x.t("hardware's","global");
x.t("generating","valid");
x.t("state","declared");
x.t("state","machine");
x.t("state","assign");
x.t("state","dependent");
x.t("state","machines");
x.t("statement","used");
x.t("points","matched");
x.t("mode","dataflow");
x.t("type","implementing");
x.t("assert","true");
x.t("basic","push");
x.t("pins","connected");
x.t("pins","called");
x.t("open","lab");
x.t("reset","clock");
x.t("reset","enabled");
x.t("reset","enable");
x.t("xilinx","dsp");
x.t("xilinx","xl_state");
x.t("expose","reset");
x.t("multiple","transmissions");
x.t("i.e","10111011");
x.t("needed","controlling");
x.t("automatically","connected");
x.t("detect","multiple");
x.t("detect","sequence");
x.t("getting","started");
x.t("branch","conditional");
x.t("branch","next");
x.t("usually","required");
x.t("block","supports");
x.t("block","implement");
x.t("block","mcode");
x.t("block","performs");
x.t("block","creates");
x.t("block","state");
x.t("block","reset");
x.t("block","detect");
x.t("block","xilinx-provided");
x.t("block","suitable");
x.t("block","provides");
x.t("block","expression");
x.t("need","quantization");
x.t("indicates","valid");
x.t("able","detect");
x.t("bursty","data");
x.t("machine","states");
x.t("machine","example");
x.t("machine","system");
x.t("machine","using");
x.t("assign","outputs");
x.t("filter","coefficient");
x.t("filter","matrix");
x.t("xilinx-provided","matlab");
x.t("simple","state");
x.t("simple","2-state");
x.t("initialized","bits");
x.t("bits","unsigned");
x.t("vout","indicates");
x.t("vout","lab");
x.t("dsp","blocks");
x.t("dsp","system");
x.t("dsp","blockset");
x.t("recommended","implement");
x.t("quantization","assigned");
x.t("quantization","4-bits");
x.t("true","ports");
x.t("requires","several");
x.t("suitable","matlab");
x.t("operation","fir");
x.t("operation","performed");
x.t("fir","filter");
x.t("creating","simple");
x.t("initialize","persistent");
x.t("10111011","lab");
x.t("dependent","branch");
x.t("dependent","behavior");
x.t("finite","state");
x.t("cycles","process");
x.t("updating","system-level");
x.t("provides","useful");
x.t("provides","convenient");
x.t("boolean","operation");
x.t("useful","implement");
x.t("prior","generating");
x.t("matlab","describes");
x.t("matlab","function");
x.t("matlab","implementing");
x.t("system-level","control");
x.t("non-streaming","fft");
x.t("non-streaming","ffts");
x.t("matched","element-by-element");
x.t("final","hardware's");
x.t("pathname","ise_design_suite_tree");
x.t("started","lesson");
x.t("controlling","bursty");
x.t("controlling","dsp");
x.t("develop","dsp");
x.t("local","signals");
x.t("offered","xilinx");
x.t("second","quantization");
x.t("input","signals");
x.t("input","data");
x.t("ports","provide");
x.t("ports","automatically");
x.t("ports","un-selected");
x.t("ports","greater");
x.t("ports","system");
x.t("ports","used");
x.t("flow","control");
x.t("signals","assert");
x.t("signals","local");
x.t("signals","inputs");
x.t("lengths","binary");
x.t("un-selected","ports");
x.t("exposing","ports");
x.t("functions","required");
x.t("notice","variable");
x.t("blocks","offered");
x.t("blocks","include");
x.t("blocks","operate");
x.t("logic","expression");
x.t("next","state");
x.t("logical","control");
x.t("first","initial");
x.t("options","expose");
x.t("control","pins");
x.t("control","getting");
x.t("control","usually");
x.t("control","dsp");
x.t("control","controlling");
x.t("control","ports");
x.t("control","functions");
x.t("control","may");
x.t("control","lesson");
x.t("control","bit");
x.t("control","lab");
x.t("control","operations");
x.t("control","consist");
x.t("vin","vout");
x.t("vin","port");
x.t("function","switch-case");
x.t("function","called");
x.t("function","two");
x.t("length","greater");
x.t("may","needed");
x.t("may","include");
x.t("different","word");
x.t("software","tree");
x.t("inverse","mcode");
x.t("push","mode");
x.t("implementing","state");
x.t("simply","performing");
x.t("initial","condition");
x.t("assigned","variable");
x.t("enable","dcm");
x.t("enable","pins");
x.t("enable","ports");
x.t("connected","final");
x.t("connected","system");
x.t("level","control");
x.t("level","storage");
x.t("machines","complex");
x.t("machines","branch");
x.t("fft","requires");
x.t("located","system");
x.t("performing","operations");
x.t("extended","states");
x.t("memory","storage");
x.t("variable","example");
x.t("variable","function");
x.t("variable","called");
x.t("greater","control");
x.t("greater","cases");
x.t("coefficient","updating");
x.t("lesson","summary");
x.t("lesson","system");
x.t("include","state");
x.t("include","memory");
x.t("include","data");
x.t("include","optional");
x.t("matrix","inverse");
x.t("convenient","efficient");
x.t("figure","below");
x.t("several","complex");
x.t("several","clock");
x.t("dataflow","control");
x.t("algorithmic","operation");
x.t("generator","xilinx");
x.t("generator","block");
x.t("generator","blocks");
x.t("generator","software");
x.t("condition","block");
x.t("condition","second");
x.t("switch-case","statement");
x.t("process","input");
x.t("decode","inputs");
x.t("expression","block");
x.t("word","lengths");
x.t("word","length");
x.t("valid","output");
x.t("valid","data");
x.t("exercise","system");
x.t("output","data");
x.t("sequence","binary");
x.t("transmissions","i.e");
x.t("data","example");
x.t("data","available");
x.t("data","instructions");
x.t("data","type");
x.t("data","open");
x.t("data","prior");
x.t("data","non-streaming");
x.t("data","flow");
x.t("data","include");
x.t("data","several");
x.t("data","cases");
x.t("optional","reset");
x.t("ise_design_suite_tree","/sysgen/examples/getting_started_training/lab4/");
x.t("4-bits","unsigned");
x.t("result","bursty");
x.t("bit","level");
x.t("lab","instructions");
x.t("lab","creating");
x.t("lab","design");
x.t("lab","exercise");
x.t("lab","data");
x.t("schemes","exposing");
x.t("values","1011");
x.t("efficient","method");
x.t("called","state");
x.t("called","vin");
x.t("called","xl_state");
x.t("xor","two");
x.t("element-by-element","boolean");
x.t("global","reset");
x.t("global","signals");
x.t("port","indicates");
x.t("two","arguments");
x.t("two","input");
x.t("two","inputs");
x.t("easily","extended");
x.t("cases","blocks");
x.t("cases","two");
x.t("xl_state","function");
x.t("xl_state","data");
x.t("xl_state","used");
x.t("operate","bursty");
x.t("system","hardware");
x.t("system","reset");
x.t("system","bursty");
x.t("system","develop");
x.t("system","ports");
x.t("system","control");
x.t("system","generator");
x.t("used","dsp");
x.t("used","initialize");
x.t("used","decode");
x.t("storage","provide");
x.t("storage","elements");
x.t("either","global");
x.t("elements","ability");
x.t("following","pathname");
x.t("using","mcode");
x.t("using","xl_state");
x.t("ffts","mcode");
x.t("blockset","result");
x.t("behavior","simply");
x.t("operations","block");
x.t("operations","filter");
x.t("muxing","conditions");
x.t("2-state","fsm");
x.t("performed","block");
x.t("unsigned","state");
x.t("unsigned","using");
x.t("conditions","recommended");
x.t("inputs","branch");
x.t("inputs","vout");
x.t("inputs","different");
x.t("inputs","word");
x.t("consist","vin");
}
