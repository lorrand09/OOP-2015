function FileData_Pairs(x)
{
x.t("example","hardware");
x.t("example","required");
x.t("example","status");
x.t("example","target");
x.t("example","absolute");
x.t("example","code");
x.t("example","ml506");
x.t("example","data");
x.t("example","two");
x.t("example","point-to-point");
x.t("organizing","data");
x.t("clock","clock");
x.t("clock","hardware");
x.t("clock","implement");
x.t("clock","source");
x.t("clock","enabled");
x.t("clock","mode");
x.t("clock","modified");
x.t("clock","pin");
x.t("clock","rate");
x.t("clock","check");
x.t("clock","wiring");
x.t("clock","processor");
x.t("clock","directly");
x.t("clock","specified");
x.t("clock","rule");
x.t("clock","xps");
x.t("clock","ports");
x.t("clock","signals");
x.t("clock","frequency");
x.t("clock","fpga_0_clk_1_sys_clk_pin");
x.t("clock","xps_clk");
x.t("clock","control");
x.t("clock","signal");
x.t("clock","lvds");
x.t("clock","frequencies");
x.t("clock","sources");
x.t("clock","generated");
x.t("clock","generator");
x.t("clock","manager");
x.t("clock","output");
x.t("clock","depicted");
x.t("clock","dual");
x.t("clock","port");
x.t("clock","system");
x.t("clock","following");
x.t("clock","used");
x.t("clock","buffer");
x.t("supports","two");
x.t("modes","operation");
x.t("interfaces","necessary");
x.t("bmm","file");
x.t("included","code");
x.t("(mb)","block");
x.t("synchronized","hardware");
x.t("synchronized","simulink");
x.t("dcm","hardware");
x.t("dcm","digital");
x.t("dcm","inside");
x.t("c_clkout0_buf","true");
x.t("debugging","transactions");
x.t("safely","removed");
x.t("tag","clock");
x.t("tag","external");
x.t("provide","storage");
x.t("creation","hardware");
x.t("creation","explains");
x.t("creation","system");
x.t("below","clock");
x.t("below","shows");
x.t("below","file");
x.t("below","api");
x.t("below","constraints");
x.t("below","chosen");
x.t("below","100");
x.t("below","main");
x.t("below","observe");
x.t("token","hdl");
x.t("token","software");
x.t("token","single-step");
x.t("token","system");
x.t("possible","clock");
x.t("possible","imported");
x.t("possible","free");
x.t("possible","users");
x.t("placed","xps_project_dir");
x.t("placed","directory");
x.t("available","processor");
x.t("available","shared");
x.t("stepped","allowing");
x.t("chances","meeting");
x.t("illustrate","change");
x.t("k19","net");
x.t("parameter","c_clkout0_buf");
x.t("parameter","instance");
x.t("parameter","driver_ver");
x.t("parameter","c_clkout0_group");
x.t("parameter","hw_ver");
x.t("parameter","c_clkin_freq");
x.t("parameter","driver_name");
x.t("parameter","c_ext_reset_high");
x.t("parameter","c_clkout0_freq");
x.t("parameter","c_clkout0_phase");
x.t("parameter","hw_instance");
x.t("transactions","custom");
x.t("hardware","example");
x.t("hardware","hardware");
x.t("hardware","co-simulation");
x.t("hardware","description");
x.t("hardware","simulating");
x.t("hardware","automatically");
x.t("hardware","settings");
x.t("hardware","rest");
x.t("hardware","kept");
x.t("hardware","accelerator");
x.t("hardware","co-");
x.t("hardware","hanging");
x.t("hardware","often");
x.t("hardware","simulink");
x.t("hardware","board");
x.t("hardware","generated");
x.t("hardware","peripherals");
x.t("hardware","netlisted");
x.t("hardware","platform");
x.t("hardware","data");
x.t("hardware","generation");
x.t("hardware","specification");
x.t("hardware","created");
x.t("hardware","driven");
x.t("peripheral's","hardware");
x.t("just","place-holder");
x.t("fpga","compiling");
x.t("fpga","boards");
x.t("fpga","software");
x.t("fpga","appear");
x.t("fpga","board");
x.t("jtag","ml506");
x.t("jtag","port");
x.t("drive","hardware");
x.t("drive","microblaze");
x.t("drive","processor");
x.t("drive","blocks");
x.t("drive","memory");
x.t("drive","bus");
x.t("drive","system");
x.t("rather","system");
x.t("defines","basic");
x.t("advantages","dual-clock");
x.t("200","mhz");
x.t("locked","dcm_all_locked");
x.t("locked","input");
x.t("digital","clock");
x.t("microprocessor","hardware");
x.t("microprocessor","debugger");
x.t("microprocessor","software");
x.t("microprocessor","debug");
x.t("peripheral_reset","sys_periph_reset");
x.t("half","problem");
x.t("shown","below");
x.t("shown","code");
x.t("shown","figure");
x.t("shown","bottom-right");
x.t("shown","above");
x.t("shown","following");
x.t("within","edk");
x.t("files","doing");
x.t("files","need");
x.t("files","describing");
x.t("honored","top-level");
x.t("exported","pcore");
x.t("lists","settings");
x.t("full","&full");
x.t("full","speed");
x.t("full","write");
x.t("full","uint32_t");
x.t("full","port");
x.t("meet","timing");
x.t("meet","requirements");
x.t("clk_freq","100000000");
x.t("clk_freq","200000000");
x.t("comment","clock");
x.t("comment","copied");
x.t("comment","software");
x.t("comment","above");
x.t("needs","driven");
x.t("console","mdm");
x.t("implement","single");
x.t("refer","edk");
x.t("co-simulation","clock");
x.t("co-simulation","creation");
x.t("co-simulation","possible");
x.t("co-simulation","token");
x.t("co-simulation","hardware");
x.t("co-simulation","currently");
x.t("co-simulation","uses");
x.t("co-simulation","dialog");
x.t("co-simulation","mode");
x.t("co-simulation","explains");
x.t("co-simulation","block's");
x.t("co-simulation","block");
x.t("co-simulation","processor");
x.t("co-simulation","settings");
x.t("co-simulation","session");
x.t("co-simulation","find");
x.t("co-simulation","target");
x.t("co-simulation","flow");
x.t("co-simulation","allowing");
x.t("co-simulation","solution");
x.t("co-simulation","frequency");
x.t("co-simulation","slightly");
x.t("co-simulation","ensure");
x.t("co-simulation","compilation");
x.t("co-simulation","output");
x.t("co-simulation","module");
x.t("co-simulation","used");
x.t("co-simulation","edk");
x.t("co-simulation","difference");
x.t("create","hardware");
x.t("create","pcore");
x.t("create","software");
x.t("describes","resolve");
x.t("description","software");
x.t("currently","edk");
x.t("table","advanced");
x.t("ngc","netlist");
x.t("studio","export");
x.t("studio","(xps)");
x.t("positions","(bin_pt)");
x.t("timing","generating");
x.t("timing","speed");
x.t("timing","closure");
x.t("timing","easily");
x.t("required","example");
x.t("required","interface");
x.t("required","handed");
x.t("wizard","assumes");
x.t("doing","xilinx");
x.t("doing","generated");
x.t("launching","xilinx");
x.t("binary","point");
x.t("(bin_pt)","depths");
x.t("source","net");
x.t("source","board");
x.t("source","order");
x.t("source","used");
x.t("source","run");
x.t("source","drives");
x.t("key","advantages");
x.t("having","asynchronous");
x.t("ensures","dut");
x.t("once","look");
x.t("tnm_net","hwcosim_sys_clk");
x.t("tnm_net","sys_clk_pin");
x.t("instance","clock_generator_0");
x.t("instance","output");
x.t("instance","proc_sys_reset_0");
x.t("ddr3","external");
x.t("edk_project_name",".xml");
x.t("/sdk_export/sysgen_repos","local");
x.t("snippets","provided");
x.t("snippets","detailed");
x.t("storing","settings");
x.t("void","&fromfifo");
x.t("void","&tofifo");
x.t("void","&fromreg");
x.t("void","&shram");
x.t("12.1","dual-clock");
x.t("controlled","clock");
x.t("clkout0","clk_125_0000mhz");
x.t("clkout0","used");
x.t("observed","hardware");
x.t("mdm","microprocessor");
x.t("mdm","connection");
x.t("mdm","peripherals");
x.t("apply","changes");
x.t("referenced","name");
x.t("creates","corresponding");
x.t("topic","exposing");
x.t("topic","shared");
x.t("topic","using");
x.t("&toreg","write");
x.t("enabled","design");
x.t("enabled","dual");
x.t("ethernet","mac");
x.t("ethernet","downloading");
x.t("situations","avoid");
x.t("user","constraint");
x.t("locations","referenced");
x.t("locations","software");
x.t("program","documents");
x.t("program","follow");
x.t("later","during");
x.t("shows","part");
x.t("shows","flow");
x.t("shows","simulink");
x.t("shows","clocks");
x.t("shows","modify");
x.t("pair","implemented");
x.t("implemented","single");
x.t("hdl","netlist");
x.t("hdl","netlisting");
x.t("depths","fifo");
x.t("dout","&value");
x.t("dout","port");
x.t("tofifo-","full");
x.t("tofifo-","din");
x.t("xc_get_addr","shram-");
x.t("basically","custom");
x.t("dialog","box");
x.t("generating","hardware");
x.t("uses","200");
x.t("uses","sigis");
x.t("uses","different");
x.t("uses","100");
x.t("uses","lvds");
x.t("uses","ml506");
x.t("/plugins/compilation/hardware","co-simulation/ml506/jtag/");
x.t("commented","hardware");
x.t("commented","line");
x.t("ts_sys_clk_pin","period");
x.t("line","untouched");
x.t("line","sysgen");
x.t("conveyed","frequently");
x.t("mode","hdl");
x.t("mode","xilinx");
x.t("mode","processor");
x.t("mode","operation");
x.t("mode","allows");
x.t("mode","allow");
x.t("mode","xps");
x.t("mode","selected");
x.t("mode","software");
x.t("mode","uart");
x.t("mode","assumption");
x.t("mode","choose");
x.t("mode","used");
x.t("mode","edk");
x.t("interface","table");
x.t("interface","external");
x.t("interface","processor");
x.t("interface","writing");
x.t("interface","xps");
x.t("shared-memories","shared-memories");
x.t("shared-memories","added");
x.t("shared-memories","used");
x.t("provided","perform");
x.t("provided","xps");
x.t("provided","system");
x.t("provided","edk");
x.t("memory-mapped","interface");
x.t("memory-mapped","addresses");
x.t("support","found");
x.t("support","processors");
x.t("support","documents");
x.t("support","shared");
x.t("support","asynchronous");
x.t("register","register");
x.t("register","status");
x.t("register","replaced");
x.t("register","shared");
x.t("physical","memory");
x.t("illustrated","below");
x.t("necessary","correct");
x.t("necessary","connect");
x.t("points","netlist_dir");
x.t("&full","full");
x.t("look","file");
x.t("hwcosim_sys_clk","200");
x.t("hwcosim_sys_clk","net");
x.t("hwcosim_sys_clk","timespec");
x.t("modified","xps");
x.t("modified","ucf");
x.t("modified","system.mhs");
x.t("working","single-stepped");
x.t("errors","unable");
x.t("recognizes","single");
x.t("please","refer");
x.t("network-based","hardware");
x.t("basic","data");
x.t("sample","application");
x.t("&fromfifo","check");
x.t("change","clock");
x.t("change","wiring");
x.t("change","input");
x.t("change","above");
x.t("fact","dut");
x.t("crystal","100");
x.t("clock_generator","parameter");
x.t("dcm/plls","prevents");
x.t("pins","driven");
x.t("fairly","involved");
x.t("&value","accessing");
x.t("&value","asynchronous");
x.t("external","peripheral");
x.t("external","ports");
x.t("external","memory");
x.t("external","port");
x.t("external","i/os");
x.t("time","having");
x.t("time","input");
x.t("tend","meet");
x.t("net","fpga_0_rs232_uart_1_tx_pin");
x.t("net","sys_clk_n");
x.t("net","sys_clk_p");
x.t("net","fpga_0_clk_1_sys_clk_pin");
x.t("net","fpga_0_rs232_uart_1_rx_pin");
x.t("pin","clock");
x.t("pin","clkout0");
x.t("pin","fpga_0_rs232_uart_1_tx_pin");
x.t("pin","fpga_0_clk_1_sys_clk_pin");
x.t("pin","fpga_0_rs232_uart_1_rx_pin");
x.t("explains","create");
x.t("explains","memory");
x.t("inside","hardware");
x.t("inside","xps");
x.t("inside","system");
x.t("inside","run");
x.t("microblaze","(mb)");
x.t("microblaze","processor");
x.t("xilinx","hardware");
x.t("xilinx","microprocessor");
x.t("xilinx","sdk");
x.t("xilinx","embedded");
x.t("xilinx","ml506");
x.t("xilinx","tools");
x.t("xilinx","platform");
x.t("peripheral","shown");
x.t("peripheral","needs");
x.t("peripheral","hdl");
x.t("peripheral","imported");
x.t("peripheral","finally");
x.t("peripheral","feature");
x.t("memory-map","hardware");
x.t("however","may");
x.t("however","simulation");
x.t("rate","clock");
x.t("rate","necessary");
x.t("rate","choose");
x.t("rs232","uarts");
x.t("down","clock");
x.t("thumb","want");
x.t("multiple","clock");
x.t("connection","gdb");
x.t("fpga_0_pcie_diff_clk_ibuf_ds_n_pin","pcie_diff_clk");
x.t("fpga_0_rs232_uart_1_tx_pin","exposed");
x.t("fpga_0_rs232_uart_1_tx_pin","loc");
x.t("copied","verbatim");
x.t("block's","gui");
x.t("block's","software");
x.t("assumes","ports");
x.t("constraint","file");
x.t("constraint","ports");
x.t("constraint","handling");
x.t("put","line");
x.t("put","following");
x.t("put","compiled");
x.t("automatically","constraints");
x.t("automatically","modifies");
x.t("automatically","invokes");
x.t("automatically","added");
x.t("automatically","adds");
x.t("automatically","generated");
x.t("automatically","inserted");
x.t("automatically","created");
x.t("automatically","system");
x.t("automatically","generates");
x.t("original","file");
x.t("original","xps");
x.t("original","system.mhs");
x.t("text","accessing");
x.t("speed","need");
x.t("speed","allows");
x.t("speed","simulation");
x.t("simulating","system");
x.t("default","change");
x.t("limitations","boards");
x.t("limitations","imported");
x.t("limitations","xps");
x.t("limitations","solution");
x.t("dcm_all_locked","pin");
x.t("dcm_all_locked","end");
x.t("dcm_all_locked","port");
x.t("lock","loop");
x.t("convert","board");
x.t("mac","component");
x.t("mac","e.g");
x.t("mac","similar");
x.t("cascading","dcm/plls");
x.t("consists","custom");
x.t("consists","different");
x.t("single","clock");
x.t("single","physical");
x.t("single","input");
x.t("single","bscan");
x.t("single","-clock");
x.t("access","required");
x.t("supplied","block");
x.t("supplied","edk");
x.t("compiling","hardware");
x.t("advanced","tab");
x.t("details","may");
x.t("items","automatically");
x.t("link","shown");
x.t("branch","going");
x.t("branch","routed");
x.t("ratios","clock");
x.t("clocking","schemes");
x.t("want","processor");
x.t("want","single-step");
x.t("want","edk");
x.t("turned","default");
x.t("timespec","ts_sys_clk_pin");
x.t("timespec","ts_hwcosim_sys_clk");
x.t("loop","convert");
x.t("achieving","timing");
x.t("certain","external");
x.t("contents","comment");
x.t("block","supports");
x.t("block","hardware");
x.t("block","creates");
x.t("block","topic");
x.t("block","hdl");
x.t("block","support");
x.t("block","recognizes");
x.t("block","however");
x.t("block","automatically");
x.t("block","single");
x.t("block","gui's");
x.t("block","imported");
x.t("block","follows");
x.t("block","provides");
x.t("block","encourages");
x.t("block","allows");
x.t("block","ports");
x.t("block","input");
x.t("block","present");
x.t("block","next");
x.t("block","automatic");
x.t("block","gui");
x.t("block","software");
x.t("block","properly");
x.t("block","memory");
x.t("block","documentation");
x.t("block","project");
x.t("block","generate");
x.t("block","diagram");
x.t("block","location");
x.t("block","topics");
x.t("block","say");
x.t("block","similarly");
x.t("top","figure");
x.t("xps_project_dir","location");
x.t("xps_project_dir","/data/sg_");
x.t("xps_project_dir","/pcores/sg_plbiface_v1_00_a/src");
x.t("gui's","implementation");
x.t("designed","system");
x.t("boards","multiple");
x.t("boards","xps");
x.t("boards","ml506");
x.t("boards","multiple-input");
x.t("usually","includes");
x.t("includes","clock");
x.t("2.00.a","port");
x.t("status","hardware");
x.t("status","gives");
x.t("status","information");
x.t("found","topic");
x.t("found","beginning");
x.t("found","xps");
x.t("found","header");
x.t("able","meet");
x.t("able","create");
x.t("pads","fpga");
x.t("pads","constrained");
x.t("places","exported");
x.t("file","placed");
x.t("file","shown");
x.t("file","original");
x.t("file","contents");
x.t("file","found");
x.t("file","file");
x.t("file","directly");
x.t("file","imported");
x.t("file","ml506_jtag.ucf");
x.t("file","lines");
x.t("file","begin");
x.t("file","xparameters.h");
x.t("file","back-annotation");
x.t("file","netlist_dir");
x.t("file","software");
x.t("file","header");
x.t("file","synchronize");
x.t("file","sg_plbiface.h");
x.t("file","generated");
x.t("file","sysgen");
x.t("file","mss");
x.t("file","created");
x.t("file","c:\\dev\\trunk\\test\\edk\\edkplbimport\\edkprj\\data\\system.ucf");
x.t("file","following");
x.t("handed","software");
x.t("need","included");
x.t("need","remove");
x.t("need","switch");
x.t("need","instantiate");
x.t("need","ensure");
x.t("need","simulate");
x.t("need","modify");
x.t("need","specify");
x.t("clicking","documentation");
x.t("simulated","lock-step");
x.t("simulated","software");
x.t("cascaded","fpga");
x.t("cascaded","case");
x.t("bus_struct_reset","sys_bus_reset");
x.t("driver_ver","1.00.a");
x.t("benefit","automation");
x.t("during","creation");
x.t("during","single-stepped");
x.t("during","software");
x.t("during","netlisting");
x.t("during","simulation");
x.t("treated","xps");
x.t("add","folder");
x.t("xc_iface_t","iface");
x.t("improves","chances");
x.t("100000000","parameter");
x.t("100000000","begin");
x.t("100000000","port");
x.t("mb_reset","mb_reset");
x.t("mb_reset","port");
x.t("beginning","modified");
x.t("applies","given");
x.t("normally","netlist");
x.t("api","documentation");
x.t("api","documention");
x.t("check","full");
x.t("check","box");
x.t("check","empty");
x.t("interfacing","external");
x.t("meaningful","data");
x.t("requested","clock");
x.t("requested","frequencies");
x.t("lock-step","rest");
x.t("limitation","described");
x.t("remove","clock");
x.t("remove","sigis");
x.t("remove","jtag-based");
x.t("abnormality","observed");
x.t("verbatim","original");
x.t("verbatim","sysgen");
x.t("spaces","names");
x.t("/sdk_export/hw/","edk_project_name");
x.t("domains","e.g");
x.t("clock-sensitive","peripherals");
x.t("boot-loading","code");
x.t("bsb","shown");
x.t("bsb","base");
x.t("bsb","xps");
x.t("bsb","begin");
x.t("dsp","1800");
x.t("dsp","following");
x.t("dsp","undesired");
x.t("processor","hardware");
x.t("processor","register");
x.t("processor","inside");
x.t("processor","block's");
x.t("processor","automatically");
x.t("processor","block");
x.t("processor","simulated");
x.t("processor","during");
x.t("processor","bottom-left");
x.t("processor","custom");
x.t("processor","construction");
x.t("processor","brought");
x.t("processor","continue");
x.t("processor","rest");
x.t("processor","ports");
x.t("processor","free-run");
x.t("processor","accelerator");
x.t("processor","cannot");
x.t("processor","piece");
x.t("processor","added");
x.t("processor","memory");
x.t("processor","troubleshooting");
x.t("processor","generated");
x.t("processor","subsystem");
x.t("processor","peripherals");
x.t("processor","described");
x.t("processor","port");
x.t("processor","note");
x.t("processor","debug");
x.t("processor","driven");
x.t("processor","system");
x.t("processor","run");
x.t("processor","edk");
x.t("processor","clocked");
x.t("writing","software");
x.t("specified","hardware");
x.t("specified","via");
x.t("specified","top-level");
x.t("specified","above");
x.t("specified","system");
x.t("via","shared-memories");
x.t("via","system");
x.t("wiring","hardware");
x.t("wiring","limitations");
x.t("wiring","single");
x.t("wiring","topology");
x.t("wiring","scheme");
x.t("wiring","implementation");
x.t("wiring","dual-clock");
x.t("wiring","schemes");
x.t("wiring","described");
x.t("wiring","used");
x.t("wiring","edk");
x.t("kit","launching");
x.t("kit","xmd");
x.t("kit","(edk)");
x.t("imported","xps");
x.t("imported","system");
x.t("imported","edk");
x.t("constraints","pin");
x.t("constraints","specified");
x.t("constraints","belong");
x.t("iface","tofifo-");
x.t("iface","xc_get_addr");
x.t("iface","toreg-");
x.t("iface","fromfifo-");
x.t("iface","xc_shram_t");
x.t("iface","toreg");
x.t("iface","xc_from_reg_t");
x.t("iface","fromreg");
x.t("iface","shram1");
x.t("iface","shram2");
x.t("iface","xc_to_fifo_t");
x.t("iface","xc_from_fifo_t");
x.t("iface","xc_to_reg_t");
x.t("iface","fromreg-");
x.t("iface","tofifo");
x.t("directly","remove");
x.t("directly","means");
x.t("directly","instead");
x.t("directly","attached");
x.t("directly","drives");
x.t("requirements","clock");
x.t("requirements","dual");
x.t("pheripheral","xps");
x.t("test","(dut)");
x.t("controller","function");
x.t("high","system.mhs");
x.t("true","parameter");
x.t("sys_periph_reset","end");
x.t("operation","organizing");
x.t("operation","illustrated");
x.t("operation","edk");
x.t("name","allows");
x.t("name","memory");
x.t("shared-register","status");
x.t("shared-register","naming");
x.t("bottom-left","figure");
x.t("box","supplied");
x.t("box","selected");
x.t("box","different");
x.t("box","ml506");
x.t("settings","available");
x.t("settings","dialog");
x.t("settings","shared");
x.t("obtain","memory");
x.t("stored","register");
x.t("stored","shared");
x.t("&tofifo","check");
x.t("slow","down");
x.t("slow","case");
x.t("suit","different");
x.t("ml506_jtag.ucf","verify");
x.t("ml506_jtag.ucf","system");
x.t("debugger","module");
x.t("debugger","run");
x.t("conflicts","allow");
x.t("corresponds","custom");
x.t("follows","standard");
x.t("/sdk_export/sysgen_repos/drivers/sg_plbiface_v1_00_a/src","along");
x.t("/sdk_export","bitstream");
x.t("addresses","data");
x.t("initialize","software");
x.t("(dut)","running");
x.t("communication","interface");
x.t("net_vcc","changed");
x.t("net_vcc","kind");
x.t("tricky","design");
x.t("changed","dcm_all_locked");
x.t("system.mss","file");
x.t("stop","microblaze");
x.t("ag15","iostandard=lvcmos33");
x.t("custom","logic");
x.t("custom","software");
x.t("custom","piece");
x.t("custom","bus");
x.t("frequently","consists");
x.t("perform","read/write");
x.t("construction","model");
x.t("processors","allow");
x.t("processors","created");
x.t("part","model");
x.t("virtual","connections");
x.t("brought","system");
x.t("snippet","below");
x.t("snippet","modified");
x.t("snippet","file");
x.t("snippet","writes");
x.t("snippet","reads");
x.t("const","unsigned");
x.t("eliminates","need");
x.t("base","system");
x.t("co-simulation/ml506/jtag/","ml506_jtag.ucf");
x.t("sigis","clk");
x.t("re-import","xps");
x.t("re-import","system");
x.t("avoid","resource");
x.t("component","e.g");
x.t("integrating","processor");
x.t("denoting","status");
x.t("provides","solution");
x.t("provides","two");
x.t("provides","hardware-based");
x.t("encourages","interface");
x.t("replaced","named");
x.t("useful","later");
x.t("going","hardware");
x.t("going","hdl");
x.t("going","xilinx");
x.t("session","api");
x.t("session","sdk");
x.t("session","portion");
x.t("&fromreg","read");
x.t("rule","thumb");
x.t("single-stepped","hardware");
x.t("125000000","parameter");
x.t("c_clkout0_group","none");
x.t("none","parameter");
x.t("helpful","debugging");
x.t("illustrates","clock");
x.t("modifies","ucf");
x.t(".ucf","snippet");
x.t("tedious","error");
x.t("standard","co-simulation");
x.t("find","clicking");
x.t("find","frequency");
x.t("find","board");
x.t("bifurcated","branch");
x.t("continue","free-running");
x.t("sys_clk_n","tnm_net");
x.t("sys_clk_n","loc");
x.t("indicate","whether");
x.t("dcm_locked","net_vcc");
x.t("generic","parameter");
x.t("allows","hardware");
x.t("allows","shared-memories");
x.t("allows","clock-sensitive");
x.t("allows","processor");
x.t("allows","custom");
x.t("allows","select");
x.t("allows","memory");
x.t("allows","peripherals");
x.t("allows","run");
x.t("map","creation");
x.t("map","microblaze");
x.t("map","automatically");
x.t("map","found");
x.t("map","processor");
x.t("map","virtual");
x.t("map","re-import");
x.t("map","halves");
x.t("map","generated");
x.t("map","associated");
x.t("constrained","applies");
x.t("constrained","ports");
x.t("constrained","mhz");
x.t("pathname","pcores");
x.t("sdk","xilinx");
x.t("sdk","flow");
x.t("sdk","button");
x.t("sdk","standalone");
x.t("sdk","software");
x.t("sdk","launched");
x.t("sdk","utility");
x.t("sdk","locate");
x.t("sdk","export");
x.t("sdk","system");
x.t("writes","value");
x.t("writes","following");
x.t("xc_create","&iface");
x.t("toreg-","din");
x.t("rest","dut");
x.t("rest","design");
x.t("rest","system");
x.t("l19","net");
x.t("sp601","cascading");
x.t("sp601","sp605");
x.t("slowest_sync_clk","clk_125_0000mhz");
x.t("modification","clock");
x.t("regarding","information");
x.t("allow","processor");
x.t("allow","imported");
x.t("allow","edk");
x.t("offered","edk");
x.t("xps","clock");
x.t("xps","uses");
x.t("xps","xilinx");
x.t("xps","gui");
x.t("xps","memory");
x.t("xps","project");
x.t("xps","tool");
x.t("xps","export");
x.t("xps","commented/uncommented");
x.t("xps","based");
x.t("xps","system");
x.t("write","software");
x.t("write","compile");
x.t("write","value");
x.t("sysgen_pcore_dir","directory");
x.t("sysgen_pcore_dir","/src");
x.t(".xml","xml");
x.t("local","software");
x.t("local","repositories");
x.t("empty","empty");
x.t("empty","read");
x.t("empty","uint32_t");
x.t("empty","port");
x.t("lines","commented");
x.t("lines","boot-loading");
x.t("third","advantage");
x.t("target","example");
x.t("target","fpga");
x.t("target","jtag");
x.t("target","hardware");
x.t("target","once");
x.t("target","uses");
x.t("target","look");
x.t("target","port");
x.t("sys_clk_p","tnm_net");
x.t("sys_clk_p","loc");
x.t("dcm_clk_s","input");
x.t("dcm_clk_s","dir");
x.t("dcm_clk_s","port");
x.t("untouched","explanation");
x.t("problems","automation");
x.t("flow","create");
x.t("flow","ethernet");
x.t("flow","microblaze");
x.t("flow","xilinx");
x.t("flow","automatically");
x.t("flow","constraints");
x.t("flow","allows");
x.t("flow","xps");
x.t("flow","target");
x.t("flow","documents");
x.t("flow","sdk_export");
x.t("flow","directory");
x.t("flow","thus");
x.t("flow","troubleshooting");
x.t("flow","data");
x.t("flow","case");
x.t("flow","described");
x.t("flow","export");
x.t("flow","used");
x.t("cashed","inside");
x.t("chosen","list-box");
x.t("ports","hardware");
x.t("ports","commented");
x.t("ports","during");
x.t("ports","imported");
x.t("ports","constrained");
x.t("ports","made");
x.t("ports","choose");
x.t("ports","port");
x.t("ports","system");
x.t("ports","following");
x.t("ports","connect");
x.t("ports","using");
x.t("ports","sys_clk_pin");
x.t("device","xc_create");
x.t("input","clock");
x.t("input","pins");
x.t("input","board");
x.t("three","key");
x.t("second","advantage");
x.t("resource","conflicts");
x.t("resource","conflict");
x.t("contain","peripherals");
x.t("co-design","integrating");
x.t("solution","limitation");
x.t("solution","problems");
x.t("solution","single-clock");
x.t("pcore","mode");
x.t("pcore","found");
x.t("pcore","normally");
x.t("pcore","device");
x.t("pcore","given");
x.t("pcore","generation");
x.t("pcore","created");
x.t("pcore","contains");
x.t("selected","via");
x.t("selected","design");
x.t("selected","edk");
x.t("exposing","processor");
x.t("exposing","ports");
x.t("begin","clock_generator");
x.t("begin","compile");
x.t("begin","proc_sys_reset");
x.t("begin","driver");
x.t("xmd","xilinx");
x.t("xmd","software");
x.t("functions","accessing");
x.t("functions","following");
x.t("store","value");
x.t("present","basically");
x.t("allowing","microblaze");
x.t("allowing","imported");
x.t("designs","compiled");
x.t("signals","requested");
x.t("debug_sys_rst","port");
x.t("logic","designed");
x.t("logic","specified");
x.t("logic","integrating");
x.t("logic","tedious");
x.t("logic","design");
x.t("logic","challenging");
x.t("logic","bus");
x.t("logic","generated");
x.t("logic","typically");
x.t("logic","portion");
x.t("logic","hardware/software");
x.t("logic","integrated");
x.t("error","prone");
x.t("documents","different");
x.t("documents","software");
x.t("documents","capability");
x.t("documents","process");
x.t("documents","dual");
x.t("blocks","spaces");
x.t("blocks","dut");
x.t("augmented","bus");
x.t("supported","network-based");
x.t("xparameters.h","example");
x.t("xparameters.h","include");
x.t("point","positions");
x.t("frequency","clock");
x.t("frequency","200");
x.t("frequency","hardware");
x.t("frequency","original");
x.t("frequency","requested");
x.t("frequency","slow");
x.t("frequency","selected");
x.t("frequency","mhz");
x.t("frequency","100");
x.t("frequency","board");
x.t("frequency","note");
x.t("frequency","used");
x.t("frequency","125mhz");
x.t("sp605","evaluation");
x.t("involved","process");
x.t("occurs","shared");
x.t("drivers","bus");
x.t("drivers","generated");
x.t("drivers","two");
x.t("automatic","changes");
x.t("automatic","memory");
x.t("automatic","modifications");
x.t("next","simply");
x.t("next","bus");
x.t("finally","added");
x.t("invokes","export");
x.t("sdk_export","directory");
x.t("absolute","memory-mapped");
x.t("din","const");
x.t("din","value");
x.t("din","port");
x.t("shram","initialize");
x.t("period","hwcosim_sys_clk");
x.t("period","sys_clk_pin");
x.t("fpga_0_clk_1_sys_clk_pin","tnm_net");
x.t("fpga_0_clk_1_sys_clk_pin","dcm_clk_s");
x.t("fpga_0_clk_1_sys_clk_pin","exposed");
x.t("fpga_0_clk_1_sys_clk_pin","connected");
x.t("fpga_0_clk_1_sys_clk_pin","clk_125_0000mhz");
x.t("fpga_0_clk_1_sys_clk_pin","loc");
x.t("explanation","found");
x.t("options","different");
x.t("resolve","issues");
x.t("issues","update");
x.t("kept","register");
x.t("collection","files");
x.t("top-level","ports");
x.t("top-level","entity");
x.t("button","co-simulation");
x.t("button","software");
x.t("mhs","microprocessor");
x.t("mhs","file");
x.t("feature","enabled");
x.t("xps_clk","clock");
x.t("xps_clk","signal");
x.t("domain","plb_clock");
x.t("domain","driven");
x.t("means","processor");
x.t("select","clock");
x.t("select","different");
x.t("free-run","board");
x.t("first","advantage");
x.t("serial","ports");
x.t("serial","port");
x.t("exposed","clock");
x.t("exposed","net");
x.t("exposed","edk");
x.t("communications","processor");
x.t("processing","data");
x.t("communicate","custom");
x.t("communicate","properly");
x.t("control","hardware");
x.t("control","module");
x.t("gui","xilinx");
x.t("gui","launch");
x.t("gui","dual");
x.t("gui","procedure");
x.t("gui","edk");
x.t("netlist_dir","/sdk_export/sysgen_repos");
x.t("netlist_dir","/sdk_export/hw/");
x.t("netlist_dir","/sdk_export/sysgen_repos/drivers/sg_plbiface_v1_00_a/src");
x.t("netlist_dir","/sdk_export");
x.t("netlist_dir","/jtagcosim_top.ucf");
x.t("back-annotation","bmm");
x.t("standalone","rather");
x.t("number","example");
x.t("fromfifo-","dout");
x.t("fromfifo-","empty");
x.t("accelerator","hardware");
x.t("accelerator","run");
x.t("dut","synchronized");
x.t("dut","controlled");
x.t("dut","fact");
x.t("dut","imported");
x.t("dut","eliminates");
x.t("dut","simulink");
x.t("dut","system");
x.t("thousands","lines");
x.t("stops","working");
x.t("importing","xps");
x.t("design","example");
x.t("design","achieving");
x.t("design","simulated");
x.t("design","test");
x.t("design","constrained");
x.t("design","scenarios");
x.t("design","simulink");
x.t("design","netlisted");
x.t("design","runs");
x.t("design","driven");
x.t("design","run");
x.t("design","system");
x.t("design","portion");
x.t("fastest","possible");
x.t("signal","locked");
x.t("signal","net_vcc");
x.t("signal","replace");
x.t("signal","topology");
x.t("signal","dual");
x.t("profiling","code");
x.t("profiling","purposes");
x.t("function","correctly");
x.t("sys_bus_reset","port");
x.t("ucf","user");
x.t("ucf","file");
x.t("fpga_0_rs232_uart_1_rx_pin","exposed");
x.t("fpga_0_rs232_uart_1_rx_pin","loc");
x.t("user-defined","logic");
x.t("different","modes");
x.t("different","clock");
x.t("different","hardware");
x.t("different","ratios");
x.t("different","types");
x.t("different","board");
x.t("different","compilation");
x.t("different","clocks");
x.t("different","simulation");
x.t("software","drive");
x.t("software","program");
x.t("software","however");
x.t("software","access");
x.t("software","drivers");
x.t("software","communicate");
x.t("software","control");
x.t("software","design");
x.t("software","repositories");
x.t("software","developer");
x.t("software","application");
x.t("software","specification");
x.t("software","debug");
x.t("software","simulation");
x.t("software","using");
x.t("software","development");
x.t("software","tab");
x.t("software","driver");
x.t("co-","simulation");
x.t("may","need");
x.t("may","edk's");
x.t("c-code","bitstream");
x.t("launch","xilinx");
x.t("workspace","specified");
x.t("workspace","directory");
x.t("customize","system");
x.t("reads","data");
x.t("reads","following");
x.t("cannot","meet");
x.t("advantage","speed");
x.t("advantage","allow");
x.t("advantage","designs");
x.t("dir","sigis");
x.t("dir","differential_polarity");
x.t("hw_ver","2.00.a");
x.t("hw_ver","4.00.a");
x.t("whether","output");
x.t("whether","port");
x.t("mb_debug_sys_rst","debug_sys_rst");
x.t("xps_ethernetlite","consider");
x.t("pcores","sysgen_pcore_dir");
x.t("pcores","pcore");
x.t("accessing","register");
x.t("accessing","shared");
x.t("accessing","fifo");
x.t("detailed","following");
x.t("fromfifo","initialize");
x.t("fromfifo","store");
x.t("fromfifo","xc_read");
x.t("fromfifo","xc_get_shmem");
x.t("xc_shram_t","shram");
x.t("hanging","processor");
x.t("extracted","drive");
x.t("free-running","mode");
x.t("starting","release");
x.t("replace","input");
x.t("iostandard=lvcmos33","constraints");
x.t("iostandard=lvcmos33","case");
x.t("instead","change");
x.t("types","software");
x.t("types","data");
x.t("automation","furthermore");
x.t("automation","edk");
x.t("compile","software");
x.t("compile","update");
x.t("directory","required");
x.t("directory","specified");
x.t("directory","netlist_dir");
x.t("directory","directory");
x.t("directory","system");
x.t("directory","manually");
x.t("directory","contains");
x.t("xml","file");
x.t("verify","going");
x.t("verify","board");
x.t("release","12.1");
x.t("meeting","timing");
x.t("match","input");
x.t("clock_generator_0","parameter");
x.t("clock_generator_0","end");
x.t("changes","tricky");
x.t("changes","case");
x.t("changes","system");
x.t("properly","serial");
x.t("properly","interpret");
x.t("gdb","time");
x.t("1800","starter");
x.t("handling","edk");
x.t("piece","hardware");
x.t("piece","user-defined");
x.t("added","processor");
x.t("added","memory");
x.t("added","model");
x.t("added","system");
x.t("added","edk");
x.t("read/write","operations");
x.t("capability","system");
x.t("describing","peripheral's");
x.t("simply","comment");
x.t("simply","stops");
x.t("switch","point-to-point");
x.t("furthermore","connectivity");
x.t("follow","xilinx");
x.t("follow","describe");
x.t("bitstream","hardware");
x.t("bitstream","constraint");
x.t("bitstream","flow");
x.t("bitstream","button");
x.t("bitstream","compilation");
x.t("bitstream","used");
x.t("code","snippets");
x.t("code","limitations");
x.t("code","meaningful");
x.t("code","snippet");
x.t("code","include");
x.t("addr","&value");
x.t("addr","const");
x.t("connected","xps_clk");
x.t("connected","import");
x.t("connected","clk");
x.t("connected","clkin");
x.t("halves","shared");
x.t("single-step","hardware");
x.t("single-step","processor");
x.t("mhz","clock");
x.t("mhz","200");
x.t("mhz","microblaze");
x.t("mhz","high");
x.t("mhz","custom");
x.t("mhz","find");
x.t("mhz","input");
x.t("mhz","frequency");
x.t("mhz","lvds");
x.t("participating","hardware");
x.t("clk_125_0000mhz","dir");
x.t("clk_125_0000mhz","output");
x.t("clk_125_0000mhz","port");
x.t("end","comment");
x.t("end","dcm_all_locked");
x.t("end","modification");
x.t("end","next");
x.t("end","import");
x.t("scenarios","far");
x.t("caveats","peripherals");
x.t("invalid","output");
x.t("theory","xps");
x.t("ethernet-based","hardware");
x.t("bscan","module");
x.t("often","occurs");
x.t("located","pathname");
x.t("thus","bitstream");
x.t("launched","system");
x.t("adds","netlist_dir");
x.t("repositories","shown");
x.t("repositories","api");
x.t("repositories","local");
x.t("repositories","verify");
x.t("folder","netlist_dir");
x.t("shram-","addr");
x.t("functioning","example");
x.t("slightly","different");
x.t("instantiate","clock");
x.t("uart","mdm");
x.t("uart","peripheral");
x.t("uart","memory");
x.t("c_clkin_freq","100000000");
x.t("c_clkin_freq","200000000");
x.t("pci","input");
x.t("memory","ethernet");
x.t("memory","pair");
x.t("memory","support");
x.t("memory","controller");
x.t("memory","map");
x.t("memory","blocks");
x.t("memory","fromfifo");
x.t("memory","added");
x.t("memory","toreg");
x.t("memory","fromreg");
x.t("memory","shram1");
x.t("memory","named");
x.t("memory","shram2");
x.t("memory","implementation");
x.t("memory","context");
x.t("memory","location");
x.t("memory","attached");
x.t("memory","shared");
x.t("memory","documented");
x.t("memory","setting");
x.t("memory","xc_get_shmem");
x.t("memory","tofifo");
x.t("given","constraint");
x.t("given","system");
x.t("appear","ports");
x.t("header","files");
x.t("header","file");
x.t("toreg","&toreg");
x.t("toreg","initialize");
x.t("toreg","uint32_t");
x.t("toreg","xc_write");
x.t("100","mhz");
x.t("100","xc_write");
x.t("plb_clock","domain");
x.t("topology","allows");
x.t("topology","used");
x.t("asynchronously","dut");
x.t("lvds","200");
x.t("lvds","board");
x.t("sys_rst_s","port");
x.t("previous","figure");
x.t("closure","additionally");
x.t("starter","board");
x.t("documentation","placed");
x.t("documentation","lists");
x.t("documentation","link");
x.t("documentation","api");
x.t("documentation","regarding");
x.t("documentation","number");
x.t("documentation","edk-pcore-generation");
x.t("netlists","cashed");
x.t("embedded","development");
x.t("actual","implementation");
x.t("click","launch");
x.t("fromreg","void");
x.t("fromreg","initialize");
x.t("fromreg","store");
x.t("fromreg","value");
x.t("fromreg","xc_get_shmem");
x.t("xc_from_reg_t","fromreg");
x.t("e.g","xilinx");
x.t("e.g","xps_ethernetlite");
x.t("e.g","clk");
x.t("e.g","spartan");
x.t("frequencies","drive");
x.t("frequencies","based");
x.t("frequencies","using");
x.t("ensure","hardware");
x.t("ensure","sigis");
x.t("ensure","resource");
x.t("kind","changes");
x.t("kind","simulation");
x.t("upon","importing");
x.t("assumption","microblaze");
x.t("project","example");
x.t("project","hardware");
x.t("project","apply");
x.t("project","situations");
x.t("project","uses");
x.t("project","change");
x.t("project","limitations");
x.t("project","supplied");
x.t("project","single");
x.t("project","cascaded");
x.t("project","treated");
x.t("project","imported");
x.t("project","processor");
x.t("project","slow");
x.t("project","re-import");
x.t("project","going");
x.t("project","rest");
x.t("project","write");
x.t("project","third");
x.t("project","input");
x.t("project","contain");
x.t("project","pcore");
x.t("project","begin");
x.t("project","augmented");
x.t("project","netlist_dir");
x.t("project","dut");
x.t("project","ucf");
x.t("project","invalid");
x.t("project","theory");
x.t("project","generated");
x.t("project","import");
x.t("project","(processor)");
x.t("project","otherwise");
x.t("project","copy");
x.t("project","driven");
x.t("project","order");
x.t("project","created");
x.t("project","system");
x.t("project","run");
x.t("project","edk");
x.t("netlist","ngc");
x.t("netlist","mode");
x.t("netlist","directory");
x.t("netlist","bitstream");
x.t("made","visible");
x.t("/src","sysgen_pcore_dir");
x.t("routed","clock");
x.t("compared","single-clock");
x.t("consider","changing");
x.t("changing","jtag-");
x.t("transferred","processor");
x.t("challenging","edk");
x.t("troubleshooting","describes");
x.t("troubleshooting","limitations");
x.t("place-holder","actual");
x.t("include","xparameters.h");
x.t("include","sg_plbiface.h");
x.t("shram1","void");
x.t("shram1","uint32_t");
x.t("shram1","xc_write");
x.t("shram1","xc_get_shmem");
x.t("board","clock");
x.t("board","illustrate");
x.t("board","shown");
x.t("board","ethernet");
x.t("board","rate");
x.t("board","single");
x.t("board","remove");
x.t("board","bifurcated");
x.t("board","input");
x.t("board","frequency");
x.t("board","ml506");
x.t("board","two");
x.t("simulink","software");
x.t("simulink","host");
x.t("simulink","dual-clock");
x.t("simulink","simulation");
x.t("ml506","fpga");
x.t("ml506","hardware");
x.t("ml506","sp601");
x.t("ml506","board");
x.t("sources","possible");
x.t("sources","crystal");
x.t("sources","xps");
x.t("synchronize","processor");
x.t("scheme","dcm");
x.t("scheme","hardware");
x.t("scheme","shown");
x.t("scheme","tend");
x.t("scheme","turned");
x.t("scheme","offered");
x.t("scheme","three");
x.t("scheme","first");
x.t("scheme","starting");
x.t("scheme","caveats");
x.t("scheme","board");
x.t("scheme","single-clock");
x.t("scheme","depicted");
x.t("scheme","dual-clock");
x.t("scheme","case");
x.t("scheme","system");
x.t("named","shared-register");
x.t("named","toreg");
x.t("named","fromreg");
x.t("named","shram1");
x.t("named","shram2");
x.t("named","tofifo");
x.t("netlisting","mode");
x.t("netlisting","microblaze");
x.t("netlisting","different");
x.t("tools","repositories");
x.t("documention","associated");
x.t("sg_plbiface.h","hardware");
x.t("sg_plbiface.h","defines");
x.t("value","register");
x.t("value","xc_iface_t");
x.t("value","din");
x.t("value","100");
x.t("value","single-word");
x.t("value","shared");
x.t("value","uint32_t");
x.t("value","xc_read");
x.t("value","fifo");
x.t("shram2","void");
x.t("shram2","store");
x.t("shram2","value");
x.t("running","hardware");
x.t("main","difference");
x.t("similar","hardware");
x.t("far","abnormality");
x.t("ext_reset_in","sys_rst_s");
x.t("interpret","project");
x.t("bus","interfaces");
x.t("bus","microblaze");
x.t("bus","processor");
x.t("bus","profiling");
x.t("bus","adaptor");
x.t("bus","connectivity");
x.t("bus","additionally");
x.t("figure","dcm");
x.t("figure","below");
x.t("figure","doing");
x.t("figure","block");
x.t("figure","writing");
x.t("figure","click");
x.t("figure","above");
x.t("figure","order");
x.t("gives","name");
x.t("implementation","class");
x.t("implementation","tab");
x.t("implementation","filled");
x.t("free","jtag");
x.t("developer","software");
x.t("plb","bus");
x.t("specific","input");
x.t("fpga_0_pcie_diff_clk_ibuf_ds_p_pin","pcie_diff_clk");
x.t("depending","whether");
x.t("process","benefit");
x.t("process","writing");
x.t("process","communications");
x.t("generated","clock");
x.t("generated","hardware");
x.t("generated","please");
x.t("generated","memory-map");
x.t("generated","automatically");
x.t("generated","block");
x.t("generated","bsb");
x.t("generated","base");
x.t("generated","xps");
x.t("generated","software");
x.t("generated","memory");
x.t("generated","compilation");
x.t("generated","shared");
x.t("generated","system");
x.t("generated","using");
x.t("generated","edk");
x.t("compilation","target");
x.t("compilation","flow");
x.t("compilation","flows");
x.t("generator","safely");
x.t("generator","token");
x.t("generator","hardware");
x.t("generator","instance");
x.t("generator","hdl");
x.t("generator","peripheral");
x.t("generator","automatically");
x.t("generator","original");
x.t("generator","details");
x.t("generator","able");
x.t("generator","places");
x.t("generator","need");
x.t("generator","dsp");
x.t("generator","pheripheral");
x.t("generator","imported");
x.t("generator","system.mss");
x.t("generator","xps");
x.t("generator","exposing");
x.t("generator","pcore");
x.t("generator","design");
x.t("generator","software");
x.t("generator","workspace");
x.t("generator","simply");
x.t("generator","memory");
x.t("generator","ml506");
x.t("generator","plb");
x.t("generator","import");
x.t("generator","single-clock");
x.t("generator","black");
x.t("generator","output");
x.t("generator","single-");
x.t("generator","asynchronous");
x.t("generator","note");
x.t("generator","mentioned");
x.t("generator","driven");
x.t("generator","model");
x.t("generator","following");
x.t("generator","used");
x.t("generator","using");
x.t("generator","edk");
x.t("generator","generates");
x.t("import","wizard");
x.t("import","modified");
x.t("import","flow");
x.t("import","project");
x.t("import","export");
x.t("adaptor","hdl");
x.t("adaptor","memory");
x.t("adaptor","used");
x.t("peripherals","ddr3");
x.t("peripherals","ethernet");
x.t("peripherals","rs232");
x.t("peripherals","interfacing");
x.t("peripherals","uart");
x.t("peripherals","generated");
x.t("peripherals","attached");
x.t("peripherals","port");
x.t("peripherals","packaged");
x.t("connections","custom");
x.t("hardware-board","supported");
x.t("straddle","two");
x.t("subsystem","able");
x.t("subsystem","exmaple");
x.t("subsystem","driven");
x.t("generate","clock");
x.t("generate","hardware");
x.t("single-clock","wiring");
x.t("builder","uses");
x.t("builder","usually");
x.t("manager","pll");
x.t("manager","mmcm");
x.t("ah15","iostandard=lvcmos33");
x.t("netlisted","hardware");
x.t("[0]","obtain");
x.t("read","data");
x.t("exmaple","input");
x.t("runs","hardware");
x.t("driver_name","generic");
x.t("evaluation","boards");
x.t("context","useful");
x.t("diagram","top");
x.t("black","box");
x.t("location","storing");
x.t("location","imported");
x.t("location","software");
x.t("along","sdk");
x.t("platform","studio");
x.t("platform","specification");
x.t("output","clock");
x.t("output","hardware");
x.t("output","serial");
x.t("-clock","wiring");
x.t("purposes","choose");
x.t("/data/sg_","xps_project_name");
x.t("xps_project_name",".ucf");
x.t("information","hardware");
x.t("information","conveyed");
x.t("information","block");
x.t("information","visible");
x.t("data","example");
x.t("data","dout");
x.t("data","shows");
x.t("data","stored");
x.t("data","denoting");
x.t("data","processing");
x.t("data","types");
x.t("data","transferred");
x.t("data","affecting");
x.t("data","shared");
x.t("data","bit");
x.t("dual","clock");
x.t("dual","-clock");
x.t("attached","processors");
x.t("attached","memory");
x.t("attached","board");
x.t("tool","write");
x.t("tool","selected");
x.t("edk's","xps");
x.t("&iface","&sg_plbiface_configtable");
x.t("&sg_plbiface_configtable","[0]");
x.t("correct","functioning");
x.t("clk","clock");
x.t("clk","tag");
x.t("clk","clk_freq");
x.t("clk","resource");
x.t("clk","domain");
x.t("clk","port");
x.t("clk","removed");
x.t("module","clock");
x.t("module","dcm");
x.t("module","synchronized");
x.t("module","available");
x.t("module","ensures");
x.t("module","peripheral");
x.t("module","automatically");
x.t("module","imported");
x.t("module","allows");
x.t("module","piece");
x.t("module","connected");
x.t("module","participating");
x.t("module","e.g");
x.t("module","work");
x.t("depicted","previous");
x.t("depicted","figure");
x.t("host","typical");
x.t("typical","hardware");
x.t("inserted","system");
x.t("200000000","parameter");
x.t("200000000","change");
x.t("shared","memory");
x.t("shared","bus");
x.t("shared","memories");
x.t("affecting","mode");
x.t("clocks","clock");
x.t("clocks","allows");
x.t("clocks","connected");
x.t("clocks","import");
x.t("clocks","single-clock");
x.t("clocks","dual-clock");
x.t("bit","file");
x.t("bit","widths");
x.t("single-word","writes");
x.t("single-word","reads");
x.t("assuming","pcore");
x.t("single-","stepped");
x.t("dual-clock","wiring");
x.t("ts_hwcosim_sys_clk","period");
x.t("generation","hdl");
x.t("generation","mode");
x.t("generation","documents");
x.t("generation","options");
x.t("generation","different");
x.t("generation","edk");
x.t("schemes","provided");
x.t("schemes","suit");
x.t("asynchronous","support");
x.t("asynchronous","communication");
x.t("asynchronous","clocks");
x.t("bottom-right","figure");
x.t("documented","topic");
x.t("utility","provided");
x.t("utility","contains");
x.t("locate","software");
x.t("(n_bits)","binary");
x.t("application","customize");
x.t("application","project");
x.t("uint32_t","full");
x.t("uint32_t","empty");
x.t("uint32_t","value");
x.t("runtime","requirements");
x.t("case","example");
x.t("case","want");
x.t("case","need");
x.t("case","automatic");
x.t("case","single-clock");
x.t("case","debug");
x.t("greatly","improves");
x.t("c_ext_reset_high","parameter");
x.t("dcm/mmcm/pll","single-clock");
x.t("ml506-based","project");
x.t("proc_sys_reset","parameter");
x.t("problem","writing");
x.t("above","clock");
x.t("above","hardware");
x.t("above","shows");
x.t("above","original");
x.t("above","branch");
x.t("above","need");
x.t("above","figure");
x.t("above","case");
x.t("above","system");
x.t("described","topic");
x.t("described","above");
x.t("described","edk");
x.t("port","clock");
x.t("port","fpga");
x.t("port","locked");
x.t("port","peripheral_reset");
x.t("port","console");
x.t("port","clkout0");
x.t("port","interface");
x.t("port","net");
x.t("port","fpga_0_pcie_diff_clk_ibuf_ds_n_pin");
x.t("port","bus_struct_reset");
x.t("port","mb_reset");
x.t("port","dcm_locked");
x.t("port","slowest_sync_clk");
x.t("port","xps");
x.t("port","fpga_0_clk_1_sys_clk_pin");
x.t("port","exposed");
x.t("port","mb_debug_sys_rst");
x.t("port","ext_reset_in");
x.t("port","fpga_0_pcie_diff_clk_ibuf_ds_p_pin");
x.t("port","shared");
x.t("port","rst");
x.t("port","edk");
x.t("port","clkin");
x.t("port","sys_clk_pin");
x.t("specification","automatically");
x.t("specification","file");
x.t("specification","mhs");
x.t("specification","mss");
x.t("choose","hardware");
x.t("choose","sample");
x.t("choose","single-clock");
x.t("choose","dual-clock");
x.t("(processor)","run");
x.t("procedure","uses");
x.t("procedure","shows");
x.t("procedure","illustrates");
x.t("sysgen","/plugins/compilation/hardware");
x.t("sysgen","verbatim");
x.t("c_clkout0_freq","125000000");
x.t("rst","sys_rst_s");
x.t("phase","lock");
x.t("100000","khz");
x.t("khz","net");
x.t("modifications","put");
x.t("topics","follow");
x.t("two","clock");
x.t("two","modes");
x.t("two","clocking");
x.t("two","domains");
x.t("two","input");
x.t("two","header");
x.t("two","asynchronous");
x.t("export","files");
x.t("export","mode");
x.t("export","imported");
x.t("export","sdk");
x.t("export","flow");
x.t("export","tool");
x.t("outdated","netlists");
x.t("note","hardware");
x.t("note","launch");
x.t("note","edk");
x.t("xc_read","iface");
x.t("users","select");
x.t("otherwise","need");
x.t("downloading","bitstream");
x.t("commented/uncommented","depending");
x.t("ag20","iostandard=lvcmos33");
x.t("typically","fairly");
x.t("connectivity","half");
x.t("connectivity","documentation");
x.t("debug","session");
x.t("debug","xmd");
x.t("debug","profiling");
x.t("debug","module");
x.t("mss","microprocessor");
x.t("mss","file");
x.t("mentioned","above");
x.t("xc_to_fifo_t","tofifo");
x.t("work","hardware");
x.t("work","single-stepped");
x.t("based","hardware");
x.t("based","input");
x.t("based","compilation");
x.t("correctly","during");
x.t("easily","compared");
x.t("prevents","design");
x.t("unable","stop");
x.t("jtag-","based");
x.t("copy","modified");
x.t("created","within");
x.t("created","points");
x.t("created","consists");
x.t("created","writing");
x.t("created","pcore");
x.t("created","system");
x.t("created","using");
x.t("order","communicate");
x.t("order","match");
x.t("order","import");
x.t("order","utilize");
x.t("xc_from_fifo_t","fromfifo");
x.t("driven","clock");
x.t("driven","xps_clk");
x.t("driven","signal");
x.t("driven","100");
x.t("driven","board");
x.t("driven","specific");
x.t("driven","clk");
x.t("driven","clocks");
x.t("driven","two");
x.t("125","mhz");
x.t("(xps)","project");
x.t("mix-mode","clock");
x.t("pll","phase");
x.t("differential_polarity","need");
x.t("c:\\dev\\trunk\\test\\edk\\edkplbimport\\edkprj\\data\\system.ucf","modify");
x.t("used","provide");
x.t("used","drive");
x.t("used","shown");
x.t("used","locations");
x.t("used","xilinx");
x.t("used","put");
x.t("used","indicate");
x.t("used","upon");
x.t("used","generate");
x.t("used","greatly");
x.t("used","system");
x.t("used","connect");
x.t("used","conjunction");
x.t("used","edk");
x.t("storage","locations");
x.t("simulation","synchronized");
x.t("simulation","hardware");
x.t("simulation","time");
x.t("simulation","during");
x.t("simulation","helpful");
x.t("simulation","xps");
x.t("simulation","second");
x.t("simulation","begin");
x.t("simulation","kind");
x.t("simulation","runtime");
x.t("simulation","model");
x.t("model","just");
x.t("model","shown");
x.t("model","hdl");
x.t("model","shared-memories");
x.t("model","corresponds");
x.t("model","figure");
x.t("model","created");
x.t("model","edk");
x.t("model","contains");
x.t("system","hardware");
x.t("system","honored");
x.t("system","extracted");
x.t("system","generator");
x.t("system","builder");
x.t("system","driven");
x.t("system","contains");
x.t("run","hardware");
x.t("run","full");
x.t("run","errors");
x.t("run","xps");
x.t("run","fastest");
x.t("run","different");
x.t("run","asynchronously");
x.t("run","125");
x.t("corresponding","matching");
x.t("say","top-level");
x.t("entity","xps");
x.t("/pcores/sg_plbiface_v1_00_a/src","xps_project_dir");
x.t("following","comment");
x.t("following","text");
x.t("following","items");
x.t("following","file");
x.t("following","snippet");
x.t("following","xps");
x.t("following","code");
x.t("following","figure");
x.t("following","procedure");
x.t("following","port");
x.t("following","two");
x.t("contained","system");
x.t("xc_write","iface");
x.t("multiple-input","clocks");
x.t("4.00.a","port");
x.t("additionally","single-step");
x.t("additionally","information");
x.t("using","hardware");
x.t("using","bsb");
x.t("using","processor");
x.t("using","software");
x.t("using","dcm/mmcm/pll");
x.t("using","ml506-based");
x.t("using","edk");
x.t("connect","pads");
x.t("connect","memory");
x.t("connect","system");
x.t("class","shared");
x.t("hardware-based","simulation");
x.t("similarly","bitstream");
x.t("conjunction","hardware-board");
x.t("setting","session");
x.t("i/os","uart");
x.t("/jtagcosim_top.ucf","following");
x.t("loc","k19");
x.t("loc","ag15");
x.t("loc","l19");
x.t("loc","ah15");
x.t("loc","ag20");
x.t("mmcm","mix-mode");
x.t("observe","input");
x.t("1.00.a","parameter");
x.t("conflict","need");
x.t("conflict","imported");
x.t("jtag-based","mdm");
x.t("development","shown");
x.t("development","block");
x.t("development","kit");
x.t("edk-pcore-generation","mode");
x.t("tab","hardware");
x.t("tab","figure");
x.t("tab","used");
x.t("tab","edk");
x.t("manually","add");
x.t("xc_get_shmem","iface");
x.t("uarts","work");
x.t("portion","design");
x.t("portion","running");
x.t("portion","system");
x.t("hardware/software","co-design");
x.t("prone","process");
x.t("edk","peripheral");
x.t("edk","processor");
x.t("edk","pcore");
x.t("edk","project");
x.t("edk","peripherals");
x.t("edk","export");
x.t("associated","api");
x.t("associated","software");
x.t("driver","clock");
x.t("driver","placed");
x.t("driver","parameter");
x.t("driver","perform");
x.t("driver","find");
x.t("driver","functions");
x.t("driver","documents");
x.t("driver","located");
x.t("driver","generated");
x.t("driver","assuming");
x.t("driver","created");
x.t("driver","used");
x.t("driver","edk");
x.t("driver","associated");
x.t("operations","memory-mapped");
x.t("operations","code");
x.t("names","hardware");
x.t("packaged","pcores");
x.t("filled","edk");
x.t("fifo","shared");
x.t("fifo","fifo");
x.t("simulate","thousands");
x.t("c_clkout0_phase","parameter");
x.t("modify","file");
x.t("modify","xps");
x.t("modify","mhs");
x.t("describe","automatic");
x.t("memories","inside");
x.t("memories","processor");
x.t("memories","added");
x.t("memories","straddle");
x.t("memories","shared");
x.t("memories","single-word");
x.t("memories","contained");
x.t("(edk)","allows");
x.t("compiled","c-code");
x.t("compiled","dual-clock");
x.t("xc_to_reg_t","toreg");
x.t("unsigned","value");
x.t("&shram","write");
x.t("&shram","read");
x.t("clocked","different");
x.t("drives","hardware");
x.t("drives","plb");
x.t("clkin","pin");
x.t("clkin","dcm_clk_s");
x.t("fpga_0_pcie_diff_clk_ibuf_ds","order");
x.t("point-to-point","ethernet-based");
x.t("spartan","dsp");
x.t("visible","processor");
x.t("visible","system");
x.t("naming","shared-register");
x.t("list-box","edk");
x.t("generates","requested");
x.t("generates","custom");
x.t("utilize","functions");
x.t("buffer","connected");
x.t("removed","xps");
x.t("removed","pci");
x.t("sys_clk_pin","timespec");
x.t("sys_clk_pin","dcm_clk_s");
x.t("sys_clk_pin","100000");
x.t("sys_clk_pin","fpga_0_pcie_diff_clk_ibuf_ds");
x.t("pcie_diff_clk","dir");
x.t("flows","hardware");
x.t("flows","provided");
x.t("flows","associated");
x.t("update","bitstream");
x.t("update","outdated");
x.t("integrated","microblaze");
x.t("matching","shared");
x.t("contains","xps");
x.t("contains","ports");
x.t("contains","collection");
x.t("contains","information");
x.t("contains","bit");
x.t("difference","top-level");
x.t("difference","compared");
x.t("specify","workspace");
x.t("widths","(n_bits)");
x.t("fromreg-","dout");
x.t("tofifo","void");
x.t("tofifo","initialize");
x.t("tofifo","value");
x.t("tofifo","uint32_t");
x.t("tofifo","xc_read");
x.t("125mhz","hardware");
x.t("system.mhs","file");
x.t("proc_sys_reset_0","parameter");
x.t("hw_instance","clock_generator_0");
x.t("belong","certain");
x.t("undesired","put");
}
