function FileData_Pairs(x)
{
x.t("clock","pulse");
x.t("clock","source");
x.t("clock","mode");
x.t("clock","however");
x.t("clock","sampled");
x.t("clock","cycles");
x.t("clock","pulses");
x.t("clock","frequency");
x.t("clock","signal");
x.t("clock","free-running");
x.t("clock","single-step");
x.t("clock","runs");
x.t("equal","less");
x.t("modes","several");
x.t("synchronized","events");
x.t("synchronized","associated");
x.t("unlike","single-step");
x.t("example","status");
x.t("supports","free");
x.t("available","hardware");
x.t("available","dialog");
x.t("available","frequencies");
x.t("available","board");
x.t("66.7","mhz");
x.t("below","target");
x.t("token","dialog");
x.t("pulse","number");
x.t("provide","significant");
x.t("stepped","free");
x.t("hardware","clock");
x.t("hardware","provide");
x.t("hardware","co-simulation");
x.t("hardware","times");
x.t("hardware","time");
x.t("hardware","kept");
x.t("hardware","cannot");
x.t("hardware","single-step");
x.t("hardware","simulink");
x.t("hardware","board");
x.t("hardware","selecting");
x.t("hardware","condition");
x.t("hardware","runs");
x.t("hardware","significantly");
x.t("hardware","port");
x.t("hardware","simulation");
x.t("hardware","general");
x.t("jtag","point-to-point");
x.t("200","mhz");
x.t("fpga","clock");
x.t("fpga","hardware");
x.t("fpga","over-clocked");
x.t("fpga","board");
x.t("fpga","runs");
x.t("fpga","port");
x.t("fpga","significant");
x.t("fpga","itself");
x.t("fpga","work");
x.t("fpga","effect");
x.t("shown","below");
x.t("wakes","hardware");
x.t("computation","inside");
x.t("full","speed");
x.t("every","hardware");
x.t("co-simulation","hardware");
x.t("co-simulation","clocking");
x.t("co-simulation","block");
x.t("table","outlines");
x.t("input/output","rates");
x.t("continuously","inside");
x.t("build","explicit");
x.t("events","current");
x.t("events","simulink");
x.t("periodically","simulink");
x.t("source","case");
x.t("synchronization","mechanisms");
x.t("ethernet","200");
x.t("ethernet","network-based");
x.t("ethernet","100");
x.t("current","state");
x.t("dialog","box");
x.t("interface","system");
x.t("mode","fpga");
x.t("mode","hardware");
x.t("mode","every");
x.t("mode","build");
x.t("mode","may");
x.t("mode","simulink");
x.t("mode","simulation");
x.t("state","hardware");
x.t("highly","desirable");
x.t("register","determine");
x.t("register","exposed");
x.t("support","free-running");
x.t("network-based","ethernet");
x.t("providing","single");
x.t("times","simulink");
x.t("fact","highly");
x.t("change","co-simulation");
x.t("time","however");
x.t("time","clicking");
x.t("whereas","free-running");
x.t("xilinx","ml402");
x.t("xilinx","ml506");
x.t("thumb","long");
x.t("inside","fpga");
x.t("however","unknown");
x.t("however","parameters");
x.t("unknown","number");
x.t("i.e","boards");
x.t("lock","step");
x.t("original","model");
x.t("original","system");
x.t("speed","synchronizing");
x.t("clocking","modes");
x.t("clocking","hardware");
x.t("clocking","mode");
x.t("clocking","options");
x.t("clocking","selecting");
x.t("clocking","using");
x.t("clocking","etch");
x.t("single","clock");
x.t("single","stepped");
x.t("ml402","jtag");
x.t("ml402","ml506");
x.t("block","synchronized");
x.t("block","fpga");
x.t("block","hardware");
x.t("block","provides");
x.t("block","bit-true");
x.t("block","depend");
x.t("block","single-step");
x.t("block","effect");
x.t("desirable","allows");
x.t("poll","status");
x.t("boards","may");
x.t("clicking","settings");
x.t("status","register");
x.t("menu","clocking");
x.t("simple","example");
x.t("large","hardware");
x.t("cycle","mode");
x.t("cycle","true");
x.t("true","original");
x.t("reconciled","original");
x.t("desired","clocking");
x.t("settings","button");
x.t("box","parameter");
x.t("box","hardware");
x.t("box","select");
x.t("box","note");
x.t("cycle-true","original");
x.t("sampled","asynchronously");
x.t("communication","overhead");
x.t("performance","achieved");
x.t("limit","performance");
x.t("cycles","elapsed");
x.t("pulses","fpga");
x.t("rule","thumb");
x.t("parameters","dialog");
x.t("provides","means");
x.t("determine","state");
x.t("allows","fpga");
x.t("allows","choose");
x.t("rest","simulink");
x.t("rest","system");
x.t("target","clock");
x.t("target","design");
x.t("33.3","mhz");
x.t("relative","software");
x.t("frequency","available");
x.t("frequency","target");
x.t("frequency","pulldown");
x.t("frequency","compilation");
x.t("frequency","following");
x.t("frequency","using");
x.t("respect","input/output");
x.t("respect","communication");
x.t("logic","large");
x.t("outlines","frequencies");
x.t("occurs","simulink");
x.t("button","clocking");
x.t("button","system");
x.t("select","desired");
x.t("select","frequency");
x.t("kept","lock");
x.t("bit-true","cycle-true");
x.t("long","amount");
x.t("exposed","output");
x.t("means","select");
x.t("options","available");
x.t("depend","fpga");
x.t("pulldown","menu");
x.t("number","clock");
x.t("written","corresponding");
x.t("design","equal");
x.t("signal","fpga");
x.t("elapsed","hardware");
x.t("software","simulation");
x.t("cannot","reconciled");
x.t("may","support");
x.t("may","change");
x.t("ways","system");
x.t("free-running","clock");
x.t("free-running","mode");
x.t("step","software");
x.t("internal","clock");
x.t("internal","state");
x.t("explicit","synchronization");
x.t("mhz","66.7");
x.t("mhz","shown");
x.t("mhz","xilinx");
x.t("mhz","33.3");
x.t("mhz","mhz");
x.t("mhz","100");
x.t("single-step","clock");
x.t("single-step","mode");
x.t("model's","simulation");
x.t("100","mhz");
x.t("asynchronously","relative");
x.t("asynchronously","simulink");
x.t("frequencies","available");
x.t("frequencies","xilinx");
x.t("over-clocked","hardware");
x.t("over-clocked","respect");
x.t("e.g","amount");
x.t("e.g","bus");
x.t("effectively","generates");
x.t("event","occurs");
x.t("less","system");
x.t("sampling","internal");
x.t("longer","synchronized");
x.t("ml506","board");
x.t("ml506","point-to-point");
x.t("board","supports");
x.t("board","interface");
x.t("board","significantly");
x.t("board","system");
x.t("board","used");
x.t("simulink","fpga");
x.t("simulink","wakes");
x.t("simulink","whereas");
x.t("simulink","free-running");
x.t("simulink","model's");
x.t("simulink","effectively");
x.t("simulink","event");
x.t("simulink","sampling");
x.t("simulink","port");
x.t("simulink","awakes");
x.t("latency","simulink");
x.t("amount","computation");
x.t("amount","logic");
x.t("mechanisms","system");
x.t("value","either");
x.t("running","clock");
x.t("running","radio");
x.t("selecting","clock");
x.t("selecting","target");
x.t("selecting","either");
x.t("several","ways");
x.t("bus","latency");
x.t("free","running");
x.t("generator","token");
x.t("generator","hardware");
x.t("generator","allows");
x.t("generator","model");
x.t("compilation","time");
x.t("rates","hardware");
x.t("condition","met");
x.t("radio","button");
x.t("runs","continuously");
x.t("runs","internal");
x.t("runs","asynchronously");
x.t("read","written");
x.t("output","port");
x.t("overhead","e.g");
x.t("overhead","associated");
x.t("met","rest");
x.t("bit","cycle");
x.t("significantly","limit");
x.t("significantly","over-clocked");
x.t("case","available");
x.t("choose","clock");
x.t("port","hardware");
x.t("port","events");
x.t("port","value");
x.t("port","i/o");
x.t("note","clocking");
x.t("significant","respect");
x.t("significant","simulation");
x.t("speed-up","free-running");
x.t("itself","mode");
x.t("applications","fact");
x.t("work","full");
x.t("awakes","hardware");
x.t("awakes","overhead");
x.t("system","clock");
x.t("system","generator");
x.t("following","table");
x.t("simulation","unlike");
x.t("simulation","cycle");
x.t("simulation","communication");
x.t("simulation","bit");
x.t("simulation","speed-up");
x.t("simulation","starts");
x.t("simulation","achieved");
x.t("model","hardware");
x.t("model","poll");
x.t("model","simple");
x.t("model","simulink");
x.t("model","streaming");
x.t("either","single");
x.t("either","read");
x.t("corresponding","port");
x.t("starts","selecting");
x.t("used","i.e");
x.t("using","hardware");
x.t("using","xilinx");
x.t("general","rule");
x.t("streaming","applications");
x.t("i/o","longer");
x.t("associated","fpga");
x.t("associated","rest");
x.t("etch","box");
x.t("point-to-point","ethernet");
x.t("effect","clocked");
x.t("effect","producing");
x.t("clocked","simulink");
x.t("achieved","hardware");
x.t("achieved","providing");
x.t("synchronizing","periodically");
x.t("generates","fpga");
x.t("producing","clock");
}
