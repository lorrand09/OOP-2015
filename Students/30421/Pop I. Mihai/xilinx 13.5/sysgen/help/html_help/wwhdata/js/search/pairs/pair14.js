function FileData_Pairs(x)
{
x.t("precision","overflow");
x.t("precision","system");
x.t("supports","four");
x.t("supports","overflow");
x.t("supports","outputs");
x.t("supports","concatenation");
x.t("supports","bit-level");
x.t("supports","truncate");
x.t("four","data");
x.t("overflow","modes");
x.t("overflow","mode");
x.t("overflow","round");
x.t("overflow","occurs");
x.t("overflow","options");
x.t("modes","wrap");
x.t("modes","system");
x.t("example","block");
x.t("example","number");
x.t("representable","range");
x.t("method","based");
x.t("available","output");
x.t("hardware","cost");
x.t("hardware","saturate");
x.t("hardware","system");
x.t("hardware","resources");
x.t("mathematically","often");
x.t("3.pdf","open");
x.t("boundaries","case");
x.t("create","output");
x.t("tree","following");
x.t("binary","point");
x.t("required","fixed-point");
x.t("reinterpreted","unsigned");
x.t("various","mechanisms");
x.t("always","extract");
x.t("slicing","input");
x.t("instructions","located");
x.t("flag","error");
x.t("msb\u2019s","input");
x.t("summary","quantization");
x.t("user","defined");
x.t("insufficient","represent");
x.t("reinterpret","block");
x.t("reinterpret","combining");
x.t("subject","change");
x.t("outputs","inferred");
x.t("necessary","application");
x.t("mode","overflow");
x.t("mode","requires");
x.t("mode","truncate");
x.t("working","signals");
x.t("lies","outside");
x.t("type","example");
x.t("type","visa");
x.t("type","known");
x.t("type","without");
x.t("type","unsigned");
x.t("change","number");
x.t("change","variety");
x.t("buses","single");
x.t("open","lab");
x.t("left","binary");
x.t("time","parameterization");
x.t("xilinx","fixed-point");
x.t("xilinx","fpgas");
x.t("total","number");
x.t("however","slice");
x.t("multiple","buses");
x.t("require","fixed-point");
x.t("default","least");
x.t("default","specifying");
x.t("lsb","during");
x.t("convert","block");
x.t("convert","number");
x.t("convert","signed");
x.t("getting","started");
x.t("new","type");
x.t("single","bus");
x.t("single","output");
x.t("access","individual");
x.t("offer","gain");
x.t("block","supports");
x.t("block","user");
x.t("block","reinterpret");
x.t("block","change");
x.t("block","convert");
x.t("block","useful");
x.t("block","provides");
x.t("block","allows");
x.t("block","configured");
x.t("block","bitbasher");
x.t("block","changes");
x.t("block","alter");
x.t("block","concatenates");
x.t("block","slice");
x.t("block","two");
x.t("block","typically");
x.t("block","concat");
x.t("block","used");
x.t("block","forces");
x.t("fall","pre-defined");
x.t("grow","bit-by-bit");
x.t("top","bit");
x.t("numerical","value");
x.t("during","quantization");
x.t("bits","insufficient");
x.t("bits","left");
x.t("bits","convert");
x.t("bits","specified");
x.t("bits","plus");
x.t("bits","multiplication");
x.t("bits","first");
x.t("bits","bitbasher");
x.t("bits","signal");
x.t("bits","specifying");
x.t("bits","quantized");
x.t("bits","ufixed");
x.t("bits","system");
x.t("bits","used");
x.t("bits","extract");
x.t("wrap","mode");
x.t("wrap","default");
x.t("wrap","saturate");
x.t("dsp","hardware");
x.t("dsp","processors");
x.t("dsp","operations");
x.t("quantization","overflow");
x.t("quantization","xilinx");
x.t("quantization","parameters");
x.t("quantization","occurs");
x.t("quantization","number");
x.t("quantization","process");
x.t("quantization","defined");
x.t("requires","system");
x.t("high","degree");
x.t("degree","control");
x.t("lsbs","signal");
x.t("specified","input");
x.t("operation","concat");
x.t("operation","therefore");
x.t("lsb\u2019s","output");
x.t("functionality","however");
x.t("outside","representable");
x.t("range","bit");
x.t("two\u2019s","complement");
x.t("gateway","blocks");
x.t("conversion","extraction");
x.t("conversion","data");
x.t("unpadding","logic");
x.t("processors","logic");
x.t("perform","operation");
x.t("textual","method");
x.t("textual","specification");
x.t("boolean","1-bit");
x.t("parameters","initial");
x.t("plus","sign");
x.t("useful","example");
x.t("useful","zero");
x.t("zero","padding");
x.t("provides","textual");
x.t("provides","several");
x.t("sign","bit");
x.t("pad","unpad");
x.t("constants","bitbasher");
x.t("manipulation","augmentation");
x.t("concatenation","slicing");
x.t("allows","augmentation");
x.t("allows","bit");
x.t("pathname","ise_design_suite_tree");
x.t("started","lesson");
x.t("accessed","individual");
x.t("allow","reinterpret");
x.t("allow","combining");
x.t("reinterprets","data");
x.t("round","modes");
x.t("round","mode");
x.t("round","lsb");
x.t("extra","logic");
x.t("input","type");
x.t("input","ports");
x.t("input","occupies");
x.t("input","signal");
x.t("input","data");
x.t("input","integer");
x.t("ports","labeled");
x.t("width","binary");
x.t("three","fractional");
x.t("signals","floating-point");
x.t("signals","bit");
x.t("extraction","individual");
x.t("1000","convert");
x.t("1000","number");
x.t("point","block");
x.t("point","bit");
x.t("point","integer");
x.t("point","position");
x.t("point","difference");
x.t("blocks","hardware");
x.t("blocks","allow");
x.t("blocks","lab");
x.t("blocks","system");
x.t("logic","grow");
x.t("logic","perform");
x.t("logic","used");
x.t("logic","using");
x.t("error","wrap");
x.t("multiplication","operation");
x.t("configured","always");
x.t("involve","negative");
x.t("visa","versa");
x.t("occupies","msb\u2019s");
x.t("occupies","lsb\u2019s");
x.t("syntax","working");
x.t("occurs","number");
x.t("occurs","value");
x.t("/sysgen/examples/getting_started_training/lab3/lab","3.pdf");
x.t("fixed","point");
x.t("first","three");
x.t("bitbasher","block");
x.t("options","available");
x.t("control","signals");
x.t("control","blocks");
x.t("number","reinterpreted");
x.t("number","block");
x.t("number","bits");
x.t("number","different");
x.t("number","represented");
x.t("number","value");
x.t("number","fractional");
x.t("number","used");
x.t("cost","hardware");
x.t("cost","default");
x.t("signal","create");
x.t("signal","new");
x.t("signal","block");
x.t("signal","high");
x.t("signal","accessed");
x.t("signal","simply");
x.t("signal","slice");
x.t("signal","routing");
x.t("signal","used");
x.t("combining","multiple");
x.t("combining","conversion");
x.t("design","input");
x.t("design","verify");
x.t("represents","number");
x.t("expressions","lesson");
x.t("different","format");
x.t("software","tree");
x.t("bit-level","operations");
x.t("verilog","syntax");
x.t("verilog","lab");
x.t("types","defined");
x.t("types","unsigned");
x.t("changes","quantization");
x.t("format","bitbasher");
x.t("verify","padding");
x.t("initial","quantization");
x.t("truncate","round");
x.t("truncate","output");
x.t("truncate","minimal");
x.t("simply","reinterprets");
x.t("floating-point","block");
x.t("often","convert");
x.t("often","signal");
x.t("level","block");
x.t("located","system");
x.t("accommodate","required");
x.t("least","cost");
x.t("versa","often");
x.t("known","time");
x.t("pre-defined","bit");
x.t("bit-by-bit","accommodate");
x.t("padding","unpadding");
x.t("padding","msbs");
x.t("changing","number");
x.t("lesson","summary");
x.t("lesson","fixed");
x.t("alter","number");
x.t("concatenates","two");
x.t("mechanisms","offer");
x.t("mechanisms","sequence");
x.t("mechanisms","becomes");
x.t("variety","mechanisms");
x.t("augmentation","textual");
x.t("augmentation","constants");
x.t("1-bit","control");
x.t("similar","wrap");
x.t("value","overflow");
x.t("value","lies");
x.t("value","block");
x.t("value","location");
x.t("represented","unsigned");
x.t("picking","blocks");
x.t("signed","type");
x.t("signed","two\u2019s");
x.t("signed","numbers");
x.t("several","mechanisms");
x.t("bus","force");
x.t("fixed-point","precision");
x.t("fixed-point","quantization");
x.t("fixed-point","data");
x.t("fixed-point","numeric");
x.t("fixed-point","numbers");
x.t("generator","supports");
x.t("generator","signal");
x.t("generator","software");
x.t("generator","fixed-point");
x.t("generator","insert");
x.t("process","similar");
x.t("parameterization","various");
x.t("inferred","expressions");
x.t("force","conversion");
x.t("represent","number");
x.t("represent","fractional");
x.t("exercise","signal");
x.t("specifying","total");
x.t("specifying","round");
x.t("specifying","location");
x.t("location","binary");
x.t("location","decimal");
x.t("regard","numerical");
x.t("output","block");
x.t("output","allows");
x.t("output","signal");
x.t("output","bit");
x.t("output","fractional");
x.t("msbs","lsbs");
x.t("quantized","number");
x.t("sequence","bits");
x.t("data","type");
x.t("data","width");
x.t("data","types");
x.t("becomes","useful");
x.t("ise_design_suite_tree","/sysgen/examples/getting_started_training/lab3/lab");
x.t("bit","boundaries");
x.t("bit","manipulation");
x.t("bit","input");
x.t("bit","level");
x.t("bit","picking");
x.t("bit","signed");
x.t("bit","operations");
x.t("defined","quantization");
x.t("defined","gateway");
x.t("defined","specifying");
x.t("lab","instructions");
x.t("lab","design");
x.t("lab","exercise");
x.t("case","dsp");
x.t("application","bit-level");
x.t("application","system");
x.t("unpad","slice");
x.t("slice","block");
x.t("slice","bits");
x.t("routing","blocks");
x.t("routing","lab");
x.t("saturate","flag");
x.t("saturate","requires");
x.t("port","occupies");
x.t("specification","based");
x.t("integer","bits");
x.t("two","input");
x.t("two","inputs");
x.t("numeric","precision");
x.t("positive","dsp");
x.t("typically","quantization");
x.t("fractional","bits");
x.t("fractional","portion");
x.t("based","verilog");
x.t("complement","used");
x.t("numbers","xilinx");
x.t("numbers","fall");
x.t("numbers","boolean");
x.t("numbers","integer");
x.t("real","dsp");
x.t("concat","block");
x.t("system","generator");
x.t("system","operations");
x.t("used","necessary");
x.t("used","convert");
x.t("used","access");
x.t("used","dsp");
x.t("used","pad");
x.t("used","design");
x.t("used","truncate");
x.t("used","represent");
x.t("ufixed","numbers");
x.t("individual","bits");
x.t("following","pathname");
x.t("using","system");
x.t("minimal","hardware");
x.t("expressed","mathematically");
x.t("decimal","point");
x.t("portion","value");
x.t("operations","getting");
x.t("operations","allow");
x.t("operations","involve");
x.t("operations","lesson");
x.t("operations","signed");
x.t("operations","fixed-point");
x.t("operations","real");
x.t("operations","expressed");
x.t("therefore","used");
x.t("without","changing");
x.t("without","regard");
x.t("unsigned","type");
x.t("unsigned","1000");
x.t("unsigned","positive");
x.t("fpgas","require");
x.t("insert","extra");
x.t("insert","logic");
x.t("labeled","port");
x.t("position","subject");
x.t("forces","bits");
x.t("negative","numbers");
x.t("difference","represents");
x.t("resources","reinterpret");
x.t("inputs","single");
x.t("gain","functionality");
x.t("extract","top");
x.t("extract","bits");
}
