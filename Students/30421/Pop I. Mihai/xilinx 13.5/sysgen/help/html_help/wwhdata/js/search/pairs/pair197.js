function FileData_Pairs(x)
{
x.t("example","rate");
x.t("collapsing","method");
x.t("double-clicking","icon");
x.t("below","length");
x.t("method","constants");
x.t("digital","communication");
x.t("drive","logic");
x.t("computing","output");
x.t("shown","figure");
x.t("currently","three");
x.t("performs","forward");
x.t("1/2","encoder");
x.t("derived","array");
x.t("outputs","three");
x.t("outputs","two");
x.t("implemented","using");
x.t("dialog","box");
x.t("register","specified");
x.t("register","zero");
x.t("register","encoder");
x.t("register","computes");
x.t("register","used");
x.t("register","linear");
x.t("interface","block");
x.t("icon","simulink");
x.t("type","ufix1_0");
x.t("open","subsystem");
x.t("change","constant");
x.t("(fec)","digital");
x.t("modulo-two","sum");
x.t("modulo-two","sums");
x.t("contribute","modulo-two");
x.t("reset","convolution");
x.t("xilinx","convolutional");
x.t("xilinx","reference");
x.t("rate","1/2");
x.t("rate","derived");
x.t("rate","encoder");
x.t("rate","ratio");
x.t("form","parameterizable");
x.t("down","stream");
x.t("constraint","register");
x.t("constraint","length");
x.t("resetting","block");
x.t("synthesis","tool");
x.t("block","currently");
x.t("block","performs");
x.t("block","implemented");
x.t("block","interface");
x.t("block","follows");
x.t("block","parameters");
x.t("block","implements");
x.t("block","shift");
x.t("parameterizable","mux-based");
x.t("indicates","validity");
x.t("indicates","values");
x.t("invoked","double-clicking");
x.t("sum","resetting");
x.t("add","enable");
x.t("add","additional");
x.t("bits","input");
x.t("bits","data");
x.t("presented","din");
x.t("vout","indicates");
x.t("accepts","values");
x.t("specified","constraint");
x.t("high","add");
x.t("tandem","viterbi");
x.t("forward","error");
x.t("forward","shift");
x.t("box","invoked");
x.t("codes","may");
x.t("codes","output");
x.t("codes","ordinarily");
x.t("codes","specify");
x.t("communication","systems");
x.t("corresponds","first");
x.t("follows","constraint");
x.t("window","contribute");
x.t("window","input");
x.t("zero","encoder");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("(octal)","array");
x.t("convolutional","codes");
x.t("convolutional","code");
x.t("convolutional","encoder");
x.t("constants","drive");
x.t("determine","register");
x.t("optimized","away");
x.t("dout1","corresponds");
x.t("dout1","dout2");
x.t("encoded","vin");
x.t("encoded","data");
x.t("encoded","rst");
x.t("encoded","using");
x.t("away","down");
x.t("dout2","second");
x.t("dout2","output");
x.t("array","(octal)");
x.t("array","dout2");
x.t("array","length");
x.t("array","octal");
x.t("input","ports");
x.t("input","output");
x.t("input","data");
x.t("input","bit");
x.t("input","port");
x.t("three","bits");
x.t("three","input");
x.t("three","output");
x.t("stream","logic");
x.t("ports","open");
x.t("ports","dout1");
x.t("ports","three");
x.t("ports","din");
x.t("second","add");
x.t("viterbi","decoder");
x.t("error","correction");
x.t("mux-based","collapsing");
x.t("logic","synthesis");
x.t("logic","blocks");
x.t("logic","driven");
x.t("blocks","constant");
x.t("din","valid");
x.t("din","port");
x.t("ufix1_0","accepts");
x.t("first","code");
x.t("vin","port");
x.t("implements","encoder");
x.t("decoder","block");
x.t("sliding","window");
x.t("length","constraint");
x.t("length","convolution");
x.t("length","thus");
x.t("length","equals");
x.t("length","shift");
x.t("length","(inclusive)");
x.t("may","entered");
x.t("correction","(fec)");
x.t("reference","block");
x.t("reference","blockset");
x.t("code","array");
x.t("code","used");
x.t("enable","input");
x.t("enable","port");
x.t("follow","directions");
x.t("encoder","outputs");
x.t("encoder","xilinx");
x.t("encoder","rate");
x.t("encoder","high");
x.t("encoder","convolutional");
x.t("encoder","model");
x.t("feed","forward");
x.t("sums","sliding");
x.t("convolution","codes");
x.t("convolution","code");
x.t("convolution","encoder");
x.t("thus","example");
x.t("simulink","model");
x.t("additional","output");
x.t("figure","below");
x.t("implementation","block");
x.t("constant","optimized");
x.t("constant","enable");
x.t("constant","convolution");
x.t("validity","output");
x.t("specific","reference");
x.t("subsystem","change");
x.t("subsystem","follow");
x.t("systems","values");
x.t("computes","modulo-two");
x.t("valid","valid");
x.t("valid","values");
x.t("output","rate");
x.t("output","encoded");
x.t("output","ports");
x.t("output","logic");
x.t("output","bit");
x.t("output","values");
x.t("output","port");
x.t("data","shown");
x.t("data","window");
x.t("data","port");
x.t("tool","block");
x.t("bit","length");
x.t("bit","implementation");
x.t("bit","similarly");
x.t("equals","length");
x.t("values","block");
x.t("values","presented");
x.t("values","encoded");
x.t("port","type");
x.t("port","open");
x.t("port","reset");
x.t("port","indicates");
x.t("port","vout");
x.t("port","dout1");
x.t("port","output");
x.t("rst","port");
x.t("two","bits");
x.t("driven","constant");
x.t("model","block");
x.t("model","parameters");
x.t("model","output");
x.t("ordinarily","used");
x.t("used","computing");
x.t("used","tandem");
x.t("used","determine");
x.t("using","form");
x.t("using","linear");
x.t("similarly","rate");
x.t("blockset","convolutional");
x.t("octal","convolution");
x.t("directions","model");
x.t("shift","register");
x.t("linear","feed");
x.t("specify","bits");
x.t("ratio","input");
x.t("(inclusive)","codes");
}
