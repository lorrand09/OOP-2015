function FileData_Pairs(x)
{
x.t("supports","specified");
x.t("period=1s","delays");
x.t("clock","cycles");
x.t("double-clicking","icon");
x.t("example","shown");
x.t("example","following");
x.t("exploits","dual-port");
x.t("registers","address");
x.t("parameter","dialog");
x.t("parameter","delay");
x.t("below","shows");
x.t("below","synthesis");
x.t("below","faster");
x.t("provide","synchronous");
x.t("provide","enable");
x.t("available","block");
x.t("structural","hdl");
x.t("burdened","long");
x.t("rare","exceptions");
x.t("synplify","pro");
x.t("l=32","first");
x.t("version","data");
x.t("implement","cycle");
x.t("implement","delay");
x.t("implement","seventeen");
x.t("implement","using");
x.t("shown","below");
x.t("counters","minus");
x.t("counters","may");
x.t("counters","order");
x.t("counters","model");
x.t("flushed","delay");
x.t("pertain","initialization");
x.t("6-1l","delay");
x.t("ensures","critical");
x.t("few","rare");
x.t("parts","delay");
x.t("dsp48s","embedded");
x.t("block\u2019s","transfer");
x.t("current","state");
x.t("topic","common");
x.t("(l-1)","cycles");
x.t("nature","blockram");
x.t("blockram","implemented");
x.t("shows","delay");
x.t("shows","novel");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("until","enable");
x.t("hdl","structural");
x.t("hdl","uses");
x.t("hdl","mode");
x.t("hdl","check");
x.t("hdl","checkbox");
x.t("hdl","implementation");
x.t("hdl","used");
x.t("hdl","setting");
x.t("hdl","comprising");
x.t("uses","behavioral");
x.t("uses","following");
x.t("downstream","logic");
x.t("line","flushed");
x.t("line","back");
x.t("line","re-settable");
x.t("line","absolutely");
x.t("line","terminated");
x.t("line","initial");
x.t("line","consisting");
x.t("line","based");
x.t("outputs","long");
x.t("last","flip");
x.t("implemented","fixed");
x.t("implemented","embedded");
x.t("implemented","using");
x.t("basically","block");
x.t("conventional","counters");
x.t("provided","provide");
x.t("provided","input");
x.t("register","structural");
x.t("register","xilinx");
x.t("register","block");
x.t("register","allows");
x.t("register","blocks");
x.t("register","delay");
x.t("icon","simulink");
x.t("state","until");
x.t("state","reset");
x.t("support","initial");
x.t("mode","e.g");
x.t("mode","putting");
x.t("basic","elements");
x.t("basic","tab");
x.t("type","data");
x.t("addressable","shift");
x.t("sample","rate");
x.t("synthesized","flip");
x.t("best","implementation");
x.t("doesn\u2019t","support");
x.t("reset","signal");
x.t("reset","port");
x.t("reset","(rst)");
x.t("reset","using");
x.t("pin","block");
x.t("xst","general");
x.t("whereas","delay");
x.t("time","srl");
x.t("time","longer");
x.t("xilinx","logicore");
x.t("xilinx","delay");
x.t("xilinx","long");
x.t("xilinx","architecture");
x.t("xilinx","blockset");
x.t("form","transform");
x.t("rate","type");
x.t("rate","signal");
x.t("multiple","block's");
x.t("multiple","block");
x.t("multiple","srl/flip");
x.t("multiple","flip");
x.t("shift-register","lut");
x.t("followed","flip");
x.t("total","l=16");
x.t("precede","delay");
x.t("however","equivalent");
x.t("listed","following");
x.t("back","forward");
x.t("back","combinational");
x.t("back","initial");
x.t("block's","sample");
x.t("behavioral","hdl");
x.t("behavioral","mode");
x.t("default","setting");
x.t("inverter2","eliminating");
x.t("precedence","enable");
x.t("precedence","optional");
x.t("synthesis","results");
x.t("synthesis","equivalent");
x.t("synthesis","latency");
x.t("synthesis","tool");
x.t("synthesis","result");
x.t("synthesis","using");
x.t("l=1","ensures");
x.t("l=1","block");
x.t("getting","packed");
x.t("single","logic");
x.t("block","supports");
x.t("block","parameter");
x.t("block","implemented");
x.t("block","basically");
x.t("block","uses");
x.t("block","register");
x.t("block","sample");
x.t("block","doesn\u2019t");
x.t("block","addressable");
x.t("block","reset");
x.t("block","form");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","back");
x.t("block","block");
x.t("block","ram");
x.t("block","collapses");
x.t("block","rams");
x.t("block","parameters");
x.t("block","explained");
x.t("block","delay");
x.t("block","implements");
x.t("block","may");
x.t("block","enable");
x.t("block","appear");
x.t("block","latency");
x.t("block","additional");
x.t("block","delays");
x.t("block","holds");
x.t("block","synthesize");
x.t("block","used");
x.t("block","behavior");
x.t("block","differs");
x.t("block","generally");
x.t("need","adjusted");
x.t("invoked","double-clicking");
x.t("again","reset");
x.t("cascaded","albeit");
x.t("upper","(slower)");
x.t("initialization","reset");
x.t("l=4","period=1s");
x.t("during","run-time");
x.t("during","logic");
x.t("srl-based","delay");
x.t("check","box");
x.t("results","designs");
x.t("results","known");
x.t("results","setting");
x.t("recommended","using");
x.t("1=32","cycles");
x.t("dsp","-1l");
x.t("cycle","delay");
x.t("cycle","contains");
x.t("specified","latency");
x.t("block-ram-based","delay");
x.t("ram","latency");
x.t("ram","associated");
x.t("re-settable","zero");
x.t("re-settable","delays");
x.t("libraries","basic");
x.t("run-time","addressable");
x.t("box","implement");
x.t("box","invoked");
x.t("flop","multiple");
x.t("flop","getting");
x.t("flop","sets");
x.t("flop","srl");
x.t("flop","adds");
x.t("flop","making");
x.t("flop","therefore");
x.t("flop","comprise");
x.t("common","options");
x.t("forward","blockrams");
x.t("path","burdened");
x.t("path","preceding");
x.t("path","delays");
x.t("wide","delay");
x.t("faster","conventional");
x.t("faster","design");
x.t("creating","circuit");
x.t("follows","provide");
x.t("follows","implement");
x.t("collapses","wire");
x.t("ends","delay");
x.t("virtex","device");
x.t("cycles","rate");
x.t("cycles","followed");
x.t("cycles","supported");
x.t("cycles","delay");
x.t("cycles","evident");
x.t("cycles","especially");
x.t("cycles","srl");
x.t("cycles","associated");
x.t("synchronous","reset");
x.t("synchronous","design");
x.t("perform","retiming");
x.t("less-flexible","implementation");
x.t("part","general");
x.t("rams","save");
x.t("3,3e","dsp");
x.t("inherited","input");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("boolean","provide");
x.t("boolean","latency");
x.t("zero","provided");
x.t("zero","delay");
x.t("zero","done");
x.t("provides","delay");
x.t("plus","last");
x.t("slower","remedied");
x.t("boxes","logic");
x.t("pro","downstream");
x.t("allows","downstream");
x.t("allows","logic");
x.t("allows","latency");
x.t("explained","topic");
x.t("optimizations","moving");
x.t("address","counters");
x.t("address","plus");
x.t("address","=1101");
x.t("address","generally");
x.t("fast","designs");
x.t("wire","during");
x.t("lines","based");
x.t("retiming","moving");
x.t("sets","cascaded");
x.t("critical","path");
x.t("string","register");
x.t("input","block");
x.t("width","greater");
x.t("moving","parts");
x.t("moving","portions");
x.t("employing","dedicated");
x.t("combinational","path");
x.t("combinational","logic");
x.t("second","srl");
x.t("cell","implement");
x.t("cell","srl");
x.t("minus","ram");
x.t("absolutely","re-settable");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("selected","delay");
x.t("selected","using");
x.t("designs","shown");
x.t("designs","combinational");
x.t("preceding","delay");
x.t("supported","delays");
x.t("logic","synthesis");
x.t("logic","cell");
x.t("logic","clouds");
x.t("equivalent","upper");
x.t("equivalent","faster");
x.t("equivalent","delay");
x.t("equivalent","setting");
x.t("blocks","implement");
x.t("blocks","yield");
x.t("point","operator");
x.t("delay","exploits");
x.t("delay","(l-1)");
x.t("delay","line");
x.t("delay","whereas");
x.t("delay","xilinx");
x.t("delay","block");
x.t("delay","creating");
x.t("delay","cycles");
x.t("delay","lines");
x.t("delay","second");
x.t("delay","blocks");
x.t("delay","delay");
x.t("delay","desires");
x.t("delay","floating-");
x.t("delay","latency");
x.t("delay","value");
x.t("delay","making");
x.t("delay","using");
x.t("delay","per");
x.t("checkbox","selected");
x.t("checkbox","checked");
x.t("non-negative","integer");
x.t("evident","address");
x.t("red","note");
x.t("especially","coupled");
x.t("fixed","address");
x.t("fixed","delay");
x.t("fixed","run-time-variable");
x.t("adjusted","during");
x.t("options","block");
x.t("long","delay");
x.t("long","setup");
x.t("long","delays");
x.t("sophisticated","enough");
x.t("first","srl");
x.t("run-time-variable","delay");
x.t("number","clock");
x.t("number","cycles");
x.t("srl","example");
x.t("srl","shift-register");
x.t("srl","provides");
x.t("srl","setup");
x.t("srl","value");
x.t("srl","efficient");
x.t("srl","flip");
x.t("srl","cascade");
x.t("srl","associated");
x.t("setup","time");
x.t("terminated","flip");
x.t("implements","fixed");
x.t("function","data");
x.t("design","few");
x.t("design","results");
x.t("design","faster");
x.t("design","implementing");
x.t("design","highlighted");
x.t("signal","available");
x.t("signal","precedence");
x.t("signal","driving");
x.t("signal","enable");
x.t("signal","asserted");
x.t("signal","run");
x.t("enough","perform");
x.t("better","xst");
x.t("better","block-ram-based");
x.t("lfsrs","linear");
x.t("driving","reset");
x.t("driving","enable");
x.t("may","zero");
x.t("may","better");
x.t("may","advantageous");
x.t("may","used");
x.t("desires","performing");
x.t("index","xilinx");
x.t("=1101","(binary)");
x.t("grand","total");
x.t("implementing","long");
x.t("implementing","delays");
x.t("eliminating","delay");
x.t("eliminating","delay3");
x.t("floating-","point");
x.t("initial","state");
x.t("initial","value");
x.t("initial","values");
x.t("-1l","6-1l");
x.t("floating-point","memory");
x.t("enable","signal");
x.t("enable","(en)");
x.t("enable","port");
x.t("dedicated","srl");
x.t("dedicated","cascade");
x.t("often","better");
x.t("packed","slice");
x.t("adds","cycle");
x.t("memory","index");
x.t("appear","output");
x.t("option","activates");
x.t("performing","optimizations");
x.t("known","less-flexible");
x.t("produces","structural");
x.t("lut","delay");
x.t("(slower)","design");
x.t("greater","implementation");
x.t("greater","128");
x.t("greater","l=17");
x.t("embedded","block");
x.t("embedded","iob");
x.t("(binary)","latency");
x.t("advantageous","using");
x.t("e.g","behavioral");
x.t("displayed","block");
x.t("architecture","selected");
x.t("architecture","srl");
x.t("srl/flip","flop");
x.t("longer","flip");
x.t("yield","synthesis");
x.t("latency","l=32");
x.t("latency","inverter2");
x.t("latency","l=1");
x.t("latency","cycle");
x.t("latency","zero");
x.t("latency","non-negative");
x.t("latency","delay");
x.t("latency","number");
x.t("latency","srl");
x.t("latency","may");
x.t("latency","initial");
x.t("latency","greater");
x.t("latency","latency");
x.t("simulink","model");
x.t("activates","optional");
x.t("dual-port","nature");
x.t("novel","implementing");
x.t("value","parameter");
x.t("value","counters");
x.t("value","address");
x.t("value","displayed");
x.t("value","zeros.the");
x.t("1-bit","wide");
x.t("additional","delay");
x.t("pipeline","delays");
x.t("delays","implemented");
x.t("delays","xilinx");
x.t("delays","need");
x.t("delays","long");
x.t("delays","initial");
x.t("delays","integer");
x.t("delays","used");
x.t("delays","say");
x.t("delays","portions");
x.t("delays","using");
x.t("figure","below");
x.t("specific","basic");
x.t("specific","implementation");
x.t("holds","current");
x.t("implementation","parameters");
x.t("implementation","allows");
x.t("implementation","often");
x.t("implementation","tab");
x.t("iob","flip");
x.t("delay3","however");
x.t("bus","widths");
x.t("synthesize","srl-based");
x.t("circuit","delay");
x.t("circuit","forces");
x.t("making","grand");
x.t("making","significantly");
x.t("remedied","using");
x.t("putting","register");
x.t("generator","block");
x.t("transfer","function");
x.t("output","cycles");
x.t("output","inherited");
x.t("output","zero");
x.t("consisting","flip");
x.t("larger","bus");
x.t("data","provided");
x.t("data","width");
x.t("data","output");
x.t("data","sheet");
x.t("zeros.the","figure");
x.t("optional","reset");
x.t("optional","enable");
x.t("tool","implement");
x.t("tool","logic");
x.t("tool","sophisticated");
x.t("tool","choose");
x.t("clouds","logic");
x.t("result","1-bit");
x.t("save","fabric");
x.t("(en)","pin");
x.t("slice","latency");
x.t("coupled","larger");
x.t("values","pertain");
x.t("values","addressable");
x.t("values","delay");
x.t("significantly","slower");
x.t("port","boolean");
x.t("port","checkbox");
x.t("port","option");
x.t("choose","best");
x.t("efficient","implementing");
x.t("feedback","shift");
x.t("sheet","spartan");
x.t("integer","number");
x.t("integer","latency");
x.t("blockrams","dsp48s");
x.t("note","equivalent");
x.t("done","using");
x.t("asserted","reset");
x.t("asserted","block");
x.t("asserted","again");
x.t("flip","flop");
x.t("flip","flops");
x.t("based","path");
x.t("based","architecture");
x.t("srls","part");
x.t("order","design");
x.t("following","xilinx");
x.t("following","synthesis");
x.t("elements","floating-point");
x.t("used","default");
x.t("used","block");
x.t("used","synchronous");
x.t("used","fixed");
x.t("used","mainly");
x.t("used","difference");
x.t("model","below");
x.t("model","basic");
x.t("run","multiple");
x.t("terminate","either");
x.t("either","ends");
x.t("albeit","without");
x.t("seventeen","cycles");
x.t("say","greater");
x.t("system","generator");
x.t("mainly","matching");
x.t("portions","delay");
x.t("portions","circuit");
x.t("(rst)","pin");
x.t("using","structural");
x.t("using","synplify");
x.t("using","addressable");
x.t("using","behavioral");
x.t("using","string");
x.t("using","lfsrs");
x.t("using","dedicated");
x.t("using","flip");
x.t("using","srls");
x.t("using","setting");
x.t("setting","precede");
x.t("setting","results");
x.t("setting","recommended");
x.t("setting","allows");
x.t("setting","produces");
x.t("setting","latency");
x.t("general","setting");
x.t("general","fabric");
x.t("routes","example");
x.t("v6.0","v6.0");
x.t("blockset","libraries");
x.t("blockset","delay");
x.t("tab","follows");
x.t("tab","parameters");
x.t("per","logic");
x.t("128","cycles");
x.t("fabric","xilinx");
x.t("fabric","delay");
x.t("kintex","device");
x.t("transform","block\u2019s");
x.t("behavior","l=4");
x.t("flops","implement");
x.t("flops","employing");
x.t("flops","data");
x.t("flops","terminate");
x.t("cascade","outputs");
x.t("cascade","routes");
x.t("without","using");
x.t("associated","address");
x.t("associated","flip");
x.t("l=16","1=32");
x.t("therefore","fast");
x.t("operator","v6.0");
x.t("l=17","multiple");
x.t("highlighted","red");
x.t("spartan","device");
x.t("shift","registers");
x.t("shift","register");
x.t("exceptions","block");
x.t("comprise","single");
x.t("forces","output");
x.t("matching","pipeline");
x.t("differs","register");
x.t("contains","initial");
x.t("checked","latency");
x.t("generally","synthesized");
x.t("generally","equivalent");
x.t("comprising","srl");
x.t("widths","may");
x.t("linear","feedback");
x.t("difference","value");
}
