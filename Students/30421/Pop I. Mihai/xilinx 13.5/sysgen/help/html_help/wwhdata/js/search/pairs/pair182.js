function FileData_Pairs(x)
{
x.t("preparing","block");
x.t("four","minimum");
x.t("registers","follows");
x.t("registers","accessed");
x.t("registers","scatter");
x.t("registers","updated");
x.t("accomplished","defining");
x.t("example","first");
x.t("example","valid");
x.t("debugging","vdma");
x.t("email","following");
x.t("clock","match");
x.t("clock","generator");
x.t("interfaces","vdma");
x.t("interfaces","design");
x.t("interfaces","specify");
x.t("s_axi","interface");
x.t("below","vdma");
x.t("available","vdma");
x.t("indicated","dmasr.idle");
x.t("seven","32-bit");
x.t("parameter","dialog");
x.t("parameter","start");
x.t("parameter","read");
x.t("hardware","initialization");
x.t("hardware","co-");
x.t("hardware","may");
x.t("fetch","descriptors");
x.t("fpga","device");
x.t("version","data");
x.t("shown","illustration");
x.t("lists","minimum");
x.t("iteration","time");
x.t("vdma","interfaces");
x.t("vdma","video");
x.t("vdma","interface");
x.t("vdma","register");
x.t("vdma","channel");
x.t("vdma","start");
x.t("vdma","block");
x.t("vdma","operation");
x.t("vdma","v4.00a");
x.t("vdma","sets");
x.t("vdma","configured");
x.t("vdma","running");
x.t("vdma","created");
x.t("vdma","axi");
x.t("vdma","operations");
x.t("vdma","logicores");
x.t("bit-accurate","simulation");
x.t("ml605","virtex-6");
x.t("ml605","kintex");
x.t("describes","specify");
x.t("timing","information");
x.t("aligned","32-bit");
x.t("currently","supported");
x.t("create","ise");
x.t("ise","xps");
x.t("ise","project");
x.t("required","channel");
x.t("required","axi");
x.t("various","axi");
x.t("[1..65536]","select");
x.t("flag","asserted");
x.t("video","parameter");
x.t("video","timing");
x.t("video","line");
x.t("video","direct");
x.t("video","transfer");
x.t("block\u2019s","axi");
x.t("xlvdmacreateproject","utility");
x.t("xlvdmacreateproject","netlistdirectory");
x.t("creates","ise");
x.t("c_include_sg","integrating");
x.t("c_include_sg","following");
x.t("c_include_sg","axi");
x.t("c_include_sg","scatter");
x.t("double","click");
x.t("double","buffer");
x.t("questions","and/or");
x.t("topic","common");
x.t("pages","101");
x.t("implemented","form");
x.t("0x00","0x20");
x.t("0x00","mm2s");
x.t("fetching","processing");
x.t("until","descriptor");
x.t("hdl","dcm/mmcm");
x.t("toplevelname","specified");
x.t("toplevelname","options");
x.t("toplevelname","entity");
x.t("uses","given");
x.t("uses","following");
x.t("line","buffer");
x.t("dialog","boxes");
x.t("interface","block\u2019s");
x.t("interface","block");
x.t("interface","parameters");
x.t("interface","separately");
x.t("interface","select");
x.t("interface","demo");
x.t("interface","connected");
x.t("interface","4.0");
x.t("interface","(8-256)");
x.t("interface","netlisted");
x.t("interface","note");
x.t("interface","axi");
x.t("interface","tabs");
x.t("interface","tab");
x.t("interface","1-4");
x.t("memory-mapped","interface");
x.t("memory-mapped","ports");
x.t("mode","c_include_sg");
x.t("mode","direct");
x.t("mode","starting");
x.t("mode","master");
x.t("mode","x-ref");
x.t("register","mode");
x.t("register","direct");
x.t("register","offset");
x.t("register","mapping");
x.t("register","descriptor");
x.t("provided","takes");
x.t("provided","demos");
x.t("interrupt","enables");
x.t("taildesc","pointer");
x.t("highly","recommended");
x.t("please","read");
x.t("open","xps");
x.t("open","generated");
x.t("close","xps");
x.t("basic","tab");
x.t("external","frame");
x.t("external","memory");
x.t("dmasr.idle","x-ref");
x.t("reset","soft");
x.t("time","significantly");
x.t("initially","following");
x.t("xilinx","ml605");
x.t("xilinx","sp601");
x.t("xilinx","logicore");
x.t("xilinx","sp605");
x.t("xilinx","blockset");
x.t("xilinx","kintex");
x.t("however","memory");
x.t("form","either");
x.t("listed","follows");
x.t("listed","following");
x.t("product","guide");
x.t("count","desired");
x.t("count","delay");
x.t("channel","fetching");
x.t("channel","write");
x.t("channel","finally");
x.t("channel","running");
x.t("channel","axi");
x.t("channel","descriptor");
x.t("default","power");
x.t("default","entity");
x.t("32-bit","words");
x.t("32-bit","word");
x.t("back","project");
x.t("access","interface");
x.t("access","(axi_vdma)");
x.t("engine","fetch");
x.t("engine","mode");
x.t("engine","excluded");
x.t("engine","idle");
x.t("engine","flush");
x.t("engine","used");
x.t("contents","initialized");
x.t("start","vdma");
x.t("start","channel");
x.t("start","addresses");
x.t("start","address");
x.t("start","axi");
x.t("descriptors","aligned");
x.t("descriptors","respectively");
x.t("descriptors","ignored");
x.t("descriptors","dma");
x.t("descriptors","update");
x.t("horizontal","size");
x.t("stimulus","instead");
x.t("stuck","questions");
x.t("(0-65535)","almost");
x.t("block","available");
x.t("block","parameter");
x.t("block","bit-accurate");
x.t("block","creates");
x.t("block","uses");
x.t("block","interface");
x.t("block","please");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","block");
x.t("block","helpful");
x.t("block","parameters");
x.t("block","explained");
x.t("block","supported");
x.t("block","configured");
x.t("block","simulation-only");
x.t("block","system");
x.t("block","axi");
x.t("block","scatter");
x.t("boards","sp601");
x.t("boards","based");
x.t("frame","count");
x.t("frame","delay");
x.t("frame","sync");
x.t("frame","stores");
x.t("chain","required");
x.t("chain","made");
x.t("chain","system");
x.t("size","external");
x.t("size","start");
x.t("size","order");
x.t("size","specify");
x.t("interconnect","s_axi");
x.t("interconnect","external");
x.t("interconnect","ports");
x.t("interconnect","ddr");
x.t("interconnect","mig");
x.t("initialization","preparing");
x.t("0x08","mm2s");
x.t("taildesc_pntr","register");
x.t("taildesc_pntr","processed");
x.t("soft","hard");
x.t("cpu","determine");
x.t("cpu","sets");
x.t("cpu","captured");
x.t("list","transfer");
x.t("able","utilize");
x.t("add","hardware");
x.t("axi4-lite","control");
x.t("corner","turn");
x.t("initialized","however");
x.t("initialized","unless");
x.t("unless","add");
x.t("guide","become");
x.t("guide","minimum");
x.t("guide","axi");
x.t("0x20","0x40");
x.t("simple","input");
x.t("chipscope","axi");
x.t("check","external");
x.t("become","familiar");
x.t("referred","descriptor");
x.t("recommended","first");
x.t("large","image");
x.t("dsp","-1l");
x.t("desired","frame");
x.t("desired","dmacr.rs=1");
x.t("processed","engine");
x.t("channels","descriptor");
x.t("specified","c_num_fstores");
x.t("specified","top-level");
x.t("specified","options");
x.t("mm2s_frmstore","s2mm_frmstore");
x.t("constraints","system");
x.t("true","chipscope");
x.t("libraries","axi4");
x.t("sub-module","open");
x.t("sub-module","instantiates");
x.t("familiar","behavior");
x.t("operation","pages");
x.t("channel\u2019s","taildesc_pntr");
x.t("channel\u2019s","curdesc_pntr");
x.t("channel\u2019s","dmacr");
x.t("stored","video");
x.t("sysgen_vdma_feedback@xilinx.com","xlvdmacreateproject");
x.t("settings","target");
x.t("settings","match");
x.t("name","vdma_top");
x.t("name","otherwise");
x.t("common","options");
x.t("axi4","index");
x.t("follows","double");
x.t("follows","write");
x.t("enables","desired");
x.t("addresses","associated");
x.t("addresses","descriptor");
x.t("populated","mm2s_frame_store");
x.t("edit","generated");
x.t("vdma_top","used");
x.t("virtex","device");
x.t("direct","register");
x.t("direct","mode");
x.t("direct","memory");
x.t("discrete","logic");
x.t("s2mm","interrupt");
x.t("s2mm","start");
x.t("s2mm","channels");
x.t("s2mm","write");
x.t("c_num_fstores","engine");
x.t("fit","specific");
x.t("argument","matlab");
x.t("3,3e","dsp");
x.t("integrating","vdma");
x.t("helpful","either");
x.t("lxt","devices");
x.t("parameters","basic");
x.t("parameters","stream");
x.t("parameters","specific");
x.t("parameters","data");
x.t("parameters","used");
x.t("continue","until");
x.t("s2mm_frame_store","registers");
x.t("s2mm_frame_store","descriptors");
x.t("s2mm_frame_store","start");
x.t("s2mm_frame_store","internal");
x.t("determine","axi");
x.t("matlab","struct");
x.t("boxes","xilinx");
x.t("sp601","sp605");
x.t("sp601","spartan-6");
x.t("(axi_vdma)","product");
x.t("(axi_vdma)","v4.00.a");
x.t("address","registers");
x.t("address","sysgen_vdma_feedback@xilinx.com");
x.t("vertical","size");
x.t("explained","topic");
x.t("gather","mode");
x.t("gather","engine");
x.t("gather","operations");
x.t("gather","descriptor");
x.t("target","board");
x.t("target","figure");
x.t("xps","sub-module");
x.t("xps","gui");
x.t("xps","projects");
x.t("write","frame");
x.t("write","vertical");
x.t("write","control");
x.t("write","mm2s_frame_store");
x.t("write","valid");
x.t("linked","list");
x.t("fields","register");
x.t("accessed","axi4-lite");
x.t("sets","dmasr.halted");
x.t("sets","dmacr.rs=1");
x.t("empty","threshold");
x.t("ports","vdma");
x.t("ports","except");
x.t("flow","supported");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("logicore","using");
x.t("0x40","s2mm");
x.t("0x40","0x60");
x.t("defining","linked");
x.t("input","stimulus");
x.t("input","port");
x.t("beta","feedback");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","chosen");
x.t("device","families");
x.t("device","kintex");
x.t("chosen","system");
x.t("three","interface");
x.t("stream","interface");
x.t("width","select");
x.t("width","master");
x.t("width","slave");
x.t("decoders","section");
x.t("yourself","provided");
x.t("small","image");
x.t("lastly","stuck");
x.t("virtex-6","devices");
x.t("activated","interface");
x.t("activated","customize");
x.t("supported","hardware");
x.t("supported","boards");
x.t("supported","customize");
x.t("supported","debug");
x.t("sp605","ml605");
x.t("sp605","spartan-6");
x.t("configured","scatter/gather");
x.t("configured","using");
x.t("logic","decoders");
x.t("non-scatter","gather");
x.t("separately","fourth");
x.t("v4.00.a","product");
x.t("delay","count");
x.t("delay","first");
x.t("delay","stride");
x.t("dmasr.halted","cpu");
x.t("dmasr.halted","write");
x.t("dmasr.halted","axi");
x.t("respectively","default");
x.t("respectively","descriptor");
x.t("hard","mm2s_frame_store");
x.t("finally","write");
x.t("top-level","hdl");
x.t("top-level","gateways");
x.t("top-level","ucf");
x.t("top-level","module");
x.t("minimum","steps");
x.t("minimum","read");
x.t("curdesc_pntr","register");
x.t("first","three");
x.t("first","familiarize");
x.t("first","descriptor");
x.t("options","create");
x.t("options","block");
x.t("options","specified");
x.t("options","argument");
x.t("options","supported");
x.t("select","number");
x.t("select","threshold");
x.t("select","master/slave");
x.t("select","depth");
x.t("select","data");
x.t("gateways","xlvdmacreateproject");
x.t("control","registers");
x.t("control","interface");
x.t("control","information");
x.t("processing","descriptors");
x.t("written","cpu");
x.t("demo","debugging");
x.t("demo","corner");
x.t("demo","triple");
x.t("demo","giant");
x.t("demo","image");
x.t("gui","back");
x.t("gui","xps");
x.t("gui","customize");
x.t("number","vdma");
x.t("number","frame");
x.t("sync","video");
x.t("sync","check");
x.t("sync","adds");
x.t("design","iteration");
x.t("design","vdma");
x.t("design","highly");
x.t("design","xilinx");
x.t("design","xps");
x.t("design","netlistdirectory");
x.t("design","m_axi_mm2s");
x.t("ucf","constraints");
x.t("co-","simulation");
x.t("may","initialized");
x.t("may","lag");
x.t("words","descriptor");
x.t("customize","ise");
x.t("customize","interface");
x.t("customize","fit");
x.t("customize","mig");
x.t("different","board");
x.t("navigator","double");
x.t("navigator","edit");
x.t("index","memory");
x.t("starting","vdma");
x.t("starting","page");
x.t("ignored","axi");
x.t("instead","large");
x.t("reduce","design");
x.t("stores","external");
x.t("stores","[1..16]");
x.t("almost","empty");
x.t("section","describes");
x.t("internal","register");
x.t("internal","address");
x.t("vsize","hsize");
x.t("pull","video");
x.t("match","target");
x.t("directory","toplevelname");
x.t("dmacr.rs","dmasr.halted");
x.t("dma","scatter");
x.t("excluded","video");
x.t("offsets","0x00");
x.t("0x60","x-ref");
x.t("initial","template");
x.t("tile","reconstruction");
x.t("reconstruction","demo");
x.t("-1l","vdma");
x.t("-1l","-1l");
x.t("connected","slave");
x.t("connected","axi");
x.t("stitches","system");
x.t("steps","starting");
x.t("steps","order");
x.t("stride","horizontal");
x.t("stride","frame");
x.t("2gb","number");
x.t("fsync","input");
x.t("scatter/gather","mode");
x.t("fft","demo");
x.t("m_axi_s2mm","interfaces");
x.t("master","video");
x.t("master","stream");
x.t("master","slave");
x.t("adds","fsync");
x.t("memory","shown");
x.t("memory","vdma");
x.t("memory","access");
x.t("memory","contents");
x.t("memory","size");
x.t("memory","connected");
x.t("memory","actual");
x.t("memory","16mb");
x.t("memory","descriptor");
x.t("familiarize","yourself");
x.t("given","toplevelname");
x.t("threshold","[1..65536]");
x.t("threshold","mm2s");
x.t("4.0","vdma");
x.t("4.0","xilinx");
x.t("4.0","block");
x.t("4.0","axi");
x.t("ddr","external");
x.t("ddr","settings");
x.t("actual","hardware");
x.t("actual","vdma");
x.t("101","four");
x.t("101","implemented");
x.t("idle","indicated");
x.t("projects","initially");
x.t("projects","different");
x.t("projects","system");
x.t("families","currently");
x.t("click","xps");
x.t("almost_empty","flag");
x.t("slave","video");
x.t("slave","stream");
x.t("slave","number");
x.t("slave","axi");
x.t("netlist","generated");
x.t("project","top-level");
x.t("project","navigator");
x.t("project","project");
x.t("taken","product");
x.t("mm2s","line");
x.t("mm2s","s2mm");
x.t("mm2s","0x40");
x.t("mm2s","0x30");
x.t("mm2s","0x38");
x.t("made","seven");
x.t("made","mm2s_frmstore");
x.t("made","mm2s_frame_store");
x.t("and/or","beta");
x.t("(8-256)","video");
x.t("triple","buffer");
x.t("spartan-6","lxt");
x.t("spartan-6","devices");
x.t("board","close");
x.t("board","edit");
x.t("board","usage");
x.t("board","following");
x.t("fourth","interface");
x.t("running","dmacr.rs");
x.t("running","note");
x.t("0x10","mm2s");
x.t("mm2s_frame_store","s2mm_frame_store");
x.t("power","reset");
x.t("value","specified");
x.t("value","true");
x.t("usage","xlvdmacreateproject");
x.t("figure","9\u20111");
x.t("figure","9\u20112");
x.t("figure","9\u20113");
x.t("figure","9\u20114");
x.t("figure","9\u20115");
x.t("figure","9\u20116");
x.t("figure","9\u20117");
x.t("specific","interface");
x.t("specific","basic");
x.t("specific","application");
x.t("send","email");
x.t("master/slave","master");
x.t("generated","ise");
x.t("generated","block");
x.t("generated","top-level");
x.t("generator","block");
x.t("generator","design");
x.t("generator","based");
x.t("fetched","taildesc");
x.t("giant","fifo");
x.t("simulation-only","model");
x.t("netlisted","top-level");
x.t("takes","design");
x.t("takes","system");
x.t("read","direct");
x.t("read","following");
x.t("read","axi");
x.t("valid","offsets");
x.t("valid","pointers");
x.t("valid","pointer");
x.t("pointers","control");
x.t("s2mm_frmstore","descriptors");
x.t("word","alignment");
x.t("template","customize");
x.t("[1..16]","select");
x.t("page","101");
x.t("page","axi");
x.t("transfer","control");
x.t("help","reduce");
x.t("depth","select");
x.t("depth","master");
x.t("depth","slave");
x.t("x-ref","target");
x.t("module","uses");
x.t("module","stitches");
x.t("information","accomplished");
x.t("information","video");
x.t("information","descriptors");
x.t("information","referred");
x.t("information","channel\u2019s");
x.t("information","control");
x.t("information","vsize");
x.t("information","taken");
x.t("optional","options");
x.t("inserted","various");
x.t("data","width");
x.t("data","sheet");
x.t("image","simple");
x.t("image","tile");
x.t("image","help");
x.t("utility","xlvdmacreateproject");
x.t("utility","provided");
x.t("utility","takes");
x.t("captured","stored");
x.t("application","demos");
x.t("significantly","lastly");
x.t("m-code","discrete");
x.t("feedback","send");
x.t("port","block");
x.t("sheet","spartan");
x.t("illustration","below");
x.t("note","descriptors");
x.t("note","may");
x.t("note","simulation");
x.t("otherwise","default");
x.t("16mb","2gb");
x.t("flush","frame");
x.t("9\u20111","vdma");
x.t("offset","0x00");
x.t("offset","0x08");
x.t("offset","0x10");
x.t("dmacr","register");
x.t("0x30","s2mm");
x.t("hsize","stride");
x.t("non","scatter");
x.t("cases","able");
x.t("based","fpga");
x.t("based","ddr");
x.t("debug","value");
x.t("monitors","inserted");
x.t("asserted","parameters");
x.t("asserted","slave");
x.t("dmacr.rs=1","start");
x.t("dmacr.rs=1","dmasr.halted");
x.t("dmacr.rs=1","axi");
x.t("lag","cpu");
x.t("lag","dmacr.rs=1");
x.t("9\u20112","x-ref");
x.t("order","required");
x.t("order","associated");
x.t("mapping","non-scatter");
x.t("mapping","scatter");
x.t("demos","listed");
x.t("demos","initial");
x.t("demos","cases");
x.t("created","ise");
x.t("following","lists");
x.t("following","open");
x.t("following","xilinx");
x.t("following","boards");
x.t("following","address");
x.t("following","logicore");
x.t("following","options");
x.t("following","information");
x.t("simulation","flow");
x.t("simulation","model");
x.t("model","memory");
x.t("model","netlist");
x.t("model","containing");
x.t("except","memory-mapped");
x.t("system","clock");
x.t("system","memory");
x.t("system","generator");
x.t("mig","clock");
x.t("mig","vdma");
x.t("mig","block");
x.t("mig","note");
x.t("either","small");
x.t("either","m-code");
x.t("pointer","channel\u2019s");
x.t("pointer","written");
x.t("9\u20113","mm2s");
x.t("used","block");
x.t("used","pull");
x.t("used","optional");
x.t("turn","fft");
x.t("dcm/mmcm","settings");
x.t("entity","name");
x.t("containing","axi");
x.t("axi","interfaces");
x.t("axi","vdma");
x.t("axi","video");
x.t("axi","memory-mapped");
x.t("axi","interconnect");
x.t("axi","monitors");
x.t("using","vdma");
x.t("using","block");
x.t("using","scatter");
x.t("9\u20114","x-ref");
x.t("tabs","parameters");
x.t("tabs","activated");
x.t("blockset","vdma");
x.t("blockset","libraries");
x.t("kintex","block");
x.t("kintex","device");
x.t("kintex","kintex");
x.t("kintex","devices");
x.t("instantiates","actual");
x.t("9\u20115","x-ref");
x.t("tab","parameters");
x.t("tab","activated");
x.t("tab","memory");
x.t("behavior","logicore");
x.t("operations","continue");
x.t("operations","write");
x.t("operations","non-scatter");
x.t("operations","non");
x.t("operations","associated");
x.t("9\u20116","x-ref");
x.t("associated","channel");
x.t("fifo","using");
x.t("netlistdirectory","toplevelname");
x.t("netlistdirectory","directory");
x.t("m_axi_mm2s","m_axi_s2mm");
x.t("9\u20117","vdma");
x.t("struct","following");
x.t("spartan","device");
x.t("scatter","gather");
x.t("utilize","demos");
x.t("buffer","(0-65535)");
x.t("buffer","demo");
x.t("buffer","almost_empty");
x.t("buffer","depth");
x.t("1-4","tabs");
x.t("1-4","tab");
x.t("logicores","connected");
x.t("specify","example");
x.t("specify","size");
x.t("specify","number");
x.t("specify","valid");
x.t("0x38","s2mm");
x.t("descriptor","chain");
x.t("descriptor","taildesc_pntr");
x.t("descriptor","populated");
x.t("descriptor","fields");
x.t("descriptor","made");
x.t("descriptor","fetched");
x.t("descriptor","page");
x.t("descriptor","information");
x.t("updated","value");
x.t("update","internal");
x.t("alignment","example");
x.t("devices","xilinx");
x.t("devices","device");
}
