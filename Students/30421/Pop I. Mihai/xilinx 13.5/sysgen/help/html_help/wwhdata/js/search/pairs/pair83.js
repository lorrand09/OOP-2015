function FileData_Pairs(x)
{
x.t("clock","rate");
x.t("clock","cycles");
x.t("clock","slower");
x.t("clock","connected");
x.t("clock","enable");
x.t("clock","value");
x.t("registers","enables");
x.t("supports","sample");
x.t("supports","interpolation");
x.t("precision","quantization");
x.t("aresertn","specifies");
x.t("active","low");
x.t("available","output");
x.t("method","used");
x.t("method","using");
x.t("parameter","dialog");
x.t("parameter","sample");
x.t("parameter","8192");
x.t("parameter","determines");
x.t("parameter","sets");
x.t("parameter","fixed");
x.t("parameter","number");
x.t("parameter","differential");
x.t("possible","xtremedsp");
x.t("possible","selected");
x.t("s_axis_data_tdata","port");
x.t("pulse","two");
x.t("fpga","devices");
x.t("digital","converters");
x.t("digital","down");
x.t("digital","systems");
x.t("hardware","oversampling");
x.t("version","data");
x.t("implement","axi4-stream-compliant");
x.t("converters","(ducs)");
x.t("converters","(ddcs)");
x.t("every","cycles");
x.t("clear","minimum");
x.t("build","proper");
x.t("appealing","hardware-efficient");
x.t("always","run");
x.t("once","every");
x.t("required","rate");
x.t("required","tready");
x.t("ability","design");
x.t("lowest","rate");
x.t("mux","blocks");
x.t("full_precision","trunction");
x.t("axi4-stream-compliant","cascaded");
x.t("topic","common");
x.t("hardware-efficient","implementations");
x.t("downstream","blocks");
x.t("handled","leave");
x.t("basically","creating");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("decimator","interpolator");
x.t("decimator","input");
x.t("uses","maximum");
x.t("uses","following");
x.t("field","s_axis_data_tdata");
x.t("field","specifies");
x.t("xtremedsp","slice");
x.t("support","ready");
x.t("support","implementation");
x.t("look","output");
x.t("leave","entire");
x.t("mode","place");
x.t("interface","multiple");
x.t("interface","specifies");
x.t("sample","available");
x.t("sample","rate");
x.t("sample","block");
x.t("sample","up-sampled");
x.t("sample","stream");
x.t("sample","period");
x.t("sample","rates");
x.t("sample","data");
x.t("change","basically");
x.t("change","again");
x.t("change","data_tvalid");
x.t("change","option");
x.t("change","value");
x.t("change","several");
x.t("change","valid");
x.t("change","case");
x.t("change","specification");
x.t("times","rate");
x.t("circuitry","automatically");
x.t("type","element");
x.t("type","selected");
x.t("type","cic");
x.t("compiler","block");
x.t("compiler","3.0");
x.t("compiler","provides");
x.t("compiler","v3.0");
x.t("compiler","correctly");
x.t("time","division");
x.t("time","alternatively");
x.t("reset","port");
x.t("xilinx","fpga");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("xilinx","cic");
x.t("multi-rate","filters");
x.t("multi-rate","filtering");
x.t("rate","registers");
x.t("rate","build");
x.t("rate","downstream");
x.t("rate","look");
x.t("rate","change");
x.t("rate","sample");
x.t("rate","block");
x.t("rate","remain");
x.t("rate","minimum");
x.t("rate","select");
x.t("rate","maximum");
x.t("rate","changes");
x.t("rate","enter");
x.t("rate","(ir)");
x.t("rate","value");
x.t("rate","larger");
x.t("rate","system");
x.t("rate","using");
x.t("rate","cic");
x.t("rate","specify");
x.t("down","converters");
x.t("multiple","channel");
x.t("multiple","channels");
x.t("listed","following");
x.t("filters","appealing");
x.t("filters","multi-rate");
x.t("filters","structures");
x.t("filters","often");
x.t("filters","known");
x.t("filters","variety");
x.t("automatically","enable");
x.t("division","multiplexed");
x.t("channel","implementations");
x.t("channel","equivalent");
x.t("new","sample");
x.t("new","rate");
x.t("integrators","comb");
x.t("element","target");
x.t("low","synchronous");
x.t("block","clock");
x.t("block","supports");
x.t("block","parameter");
x.t("block","always");
x.t("block","uses");
x.t("block","sample");
x.t("block","reset");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","programmable");
x.t("block","parameters");
x.t("block","explained");
x.t("block","different");
x.t("block","tready");
x.t("block","implementation");
x.t("block","forced");
x.t("block","output");
x.t("block","corresponding");
x.t("block","cic");
x.t("oversampling","rate");
x.t("oversampling","given");
x.t("oversampling","specification");
x.t("cascaded","integrator-comb");
x.t("occupied","processed");
x.t("capture","data");
x.t("again","enable");
x.t("proper","circuitry");
x.t("interpolation","decimation");
x.t("8192","hardware");
x.t("8192","minimum");
x.t("determines","hardware");
x.t("numerical","precision");
x.t("3.0","xilinx");
x.t("3.0","block");
x.t("3.0","cic");
x.t("decimation","architectures");
x.t("multiplexed","input");
x.t("filter","type");
x.t("filter","valid");
x.t("filter","comb");
x.t("filter","specification");
x.t("bits","trunction");
x.t("dsp","index");
x.t("dsp","-1l");
x.t("dsp","slice");
x.t("large","sample");
x.t("large","excess");
x.t("inherit","rate");
x.t("selects","method");
x.t("quantization","may");
x.t("processed","signal");
x.t("handle","cases");
x.t("specified","full_precision");
x.t("specified","sample");
x.t("specified","integrators");
x.t("specified","bits");
x.t("specified","value");
x.t("channels","support");
x.t("channels","specified");
x.t("channels","number");
x.t("directly","affects");
x.t("libraries","axi4");
x.t("programmable","mode");
x.t("programmable","rate");
x.t("programmable","fixed");
x.t("data_tvalid","signal");
x.t("creating","different");
x.t("box","filter");
x.t("range","parameter");
x.t("common","options");
x.t("axi4","dsp");
x.t("enables","enables");
x.t("enables","blocks");
x.t("enables","described");
x.t("virtex","device");
x.t("cycles","required");
x.t("cycles","downstream");
x.t("cycles","time");
x.t("cycles","input");
x.t("dsp48","type");
x.t("synchronous","clear");
x.t("3,3e","dsp");
x.t("provides","ability");
x.t("(cic)","filters");
x.t("filtering","sample");
x.t("pulses","once");
x.t("slower","rate");
x.t("alternatively","downsample");
x.t("up/down","sample");
x.t("parameters","dialog");
x.t("parameters","specific");
x.t("parameters","used");
x.t("up-sampled","number");
x.t("implementations","multi-rate");
x.t("implementations","control");
x.t("implementations","cic");
x.t("indicate","downstream");
x.t("place","up/down");
x.t("boxes","xilinx");
x.t("explained","topic");
x.t("entire","design");
x.t("interpolator","selected");
x.t("interpolator","valid");
x.t("sets","input");
x.t("s_axis_data_tvalid","control");
x.t("target","device");
x.t("structures","adders");
x.t("structures","cic");
x.t("remain","clock");
x.t("problems","long");
x.t("input","sample");
x.t("input","samples");
x.t("stream","hardware");
x.t("stream","down-sampled");
x.t("width","may");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","streaming");
x.t("device","kintex");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("signals","handle");
x.t("selected","decimator");
x.t("selected","block");
x.t("selected","input");
x.t("inherently","support");
x.t("blocks","new");
x.t("blocks","capture");
x.t("blocks","inherit");
x.t("blocks","different");
x.t("blocks","clocked");
x.t("aclken","specifies");
x.t("aclken","option");
x.t("equivalent","selecting");
x.t("delay","number");
x.t("delay","elements");
x.t("period","parameter");
x.t("period","selected");
x.t("period","signal");
x.t("period","integer");
x.t("(ducs)","implementations");
x.t("long","clock");
x.t("unit","delays");
x.t("select","hardware");
x.t("select","fixed");
x.t("select","hardware_oversampling_rate");
x.t("select","format");
x.t("fixed","sample");
x.t("fixed","rate");
x.t("fixed","programmable");
x.t("fixed","initial");
x.t("minimum","rate");
x.t("minimum","aresetn");
x.t("affects","level");
x.t("options","block");
x.t("options","aclken");
x.t("number","clock");
x.t("number","channels");
x.t("number","unit");
x.t("number","stages");
x.t("number","integrator");
x.t("control","options");
x.t("control","port");
x.t("gui","aresertn");
x.t("gui","parameters");
x.t("design","implement");
x.t("design","running");
x.t("signal","digital");
x.t("signal","pulses");
x.t("signal","indicate");
x.t("signal","connected");
x.t("maximum","possible");
x.t("maximum","rate");
x.t("maximum","oversampling");
x.t("cannot","inherently");
x.t("different","rate");
x.t("different","ways");
x.t("different","depending");
x.t("different","downsample");
x.t("different","paths");
x.t("specifies","possible");
x.t("specifies","block");
x.t("specifies","whether");
x.t("specifies","initial");
x.t("hardware_oversampling_rate","selects");
x.t("hardware_oversampling_rate","format");
x.t("may","specified");
x.t("whether","streaming");
x.t("index","xilinx");
x.t("ways","handled");
x.t("implementing","large");
x.t("changes","digital");
x.t("changes","required");
x.t("changes","mux");
x.t("changes","option");
x.t("section","either");
x.t("format","implementation");
x.t("format","choose");
x.t("samples","multiple");
x.t("initial","rate");
x.t("initial","fixed");
x.t("-1l","-1l");
x.t("-1l","cic");
x.t("excess","sample");
x.t("enable","downstream");
x.t("enable","signals");
x.t("enable","port");
x.t("connected","data");
x.t("connected","system");
x.t("often","used");
x.t("level","parallelism");
x.t("known","hogenauer");
x.t("option","select");
x.t("option","simulink");
x.t("option","core");
x.t("option","above");
x.t("ready","output");
x.t("differential","delay");
x.t("given","sample");
x.t("repeated","times");
x.t("architectures","filter");
x.t("maximum_possible","sample_period");
x.t("enter","hardware");
x.t("down-sampled","factor");
x.t("variety","xilinx");
x.t("simulink","cannot");
x.t("(ir)","8192");
x.t("(ir)","maximum");
x.t("(ir)","specifies");
x.t("running","system");
x.t("core","supports");
x.t("core","generator");
x.t("value","directly");
x.t("value","specified");
x.t("value","programmable");
x.t("value","integer");
x.t("value","cic");
x.t("tready","specifies");
x.t("tready","port");
x.t("several","different");
x.t("depending","rate");
x.t("specific","filter");
x.t("delays","employed");
x.t("implementation","valid");
x.t("implementation","tab");
x.t("implementation","resources");
x.t("selecting","aclken");
x.t("selecting","has_dout_tready");
x.t("aresetn","pulse");
x.t("rates","cic");
x.t("rates","without");
x.t("forced","s_axis_data_tvalid");
x.t("generator","block");
x.t("generator","gui");
x.t("has_dout_tready","option");
x.t("systems","typically");
x.t("valid","range");
x.t("larger","rate");
x.t("larger","bandwidth");
x.t("output","channel");
x.t("output","signal");
x.t("output","data");
x.t("output","cic");
x.t("comb","filter");
x.t("comb","section");
x.t("comb","stages");
x.t("data","field");
x.t("data","sample");
x.t("data","stream");
x.t("data","width");
x.t("data","repeated");
x.t("data","output");
x.t("data","correct");
x.t("data","sheet");
x.t("correct","time");
x.t("trunction","option");
x.t("trunction","output");
x.t("optional","xtreme");
x.t("employed","comb");
x.t("employed","applications");
x.t("(ddcs)","digital");
x.t("lower-than-system","rates");
x.t("probably","efficient");
x.t("case","downstream");
x.t("slice","field");
x.t("slice","dsp48");
x.t("described","above");
x.t("above","optional");
x.t("above","probably");
x.t("efficient","method");
x.t("specification","sample");
x.t("specification","filter");
x.t("specification","select");
x.t("specification","tab");
x.t("choose","maximum_possible");
x.t("port","active");
x.t("port","sample");
x.t("port","equivalent");
x.t("port","select");
x.t("port","data");
x.t("sheet","spartan");
x.t("hogenauer","filters");
x.t("downsample","block");
x.t("downsample","data");
x.t("integer","number");
x.t("two","cycles");
x.t("typically","employed");
x.t("applications","large");
x.t("adders","subtractors");
x.t("cases","larger");
x.t("correctly","pass");
x.t("factor","interpolator");
x.t("sample_period","hardware_oversampling_rate");
x.t("following","xilinx");
x.t("integrator-comb","(cic)");
x.t("used","block");
x.t("used","maximum");
x.t("used","implementing");
x.t("used","specify");
x.t("system","clock");
x.t("system","sample");
x.t("system","rate");
x.t("system","generator");
x.t("elements","structures");
x.t("run","system");
x.t("corresponding","lowest");
x.t("either","decimator");
x.t("xtreme","dsp");
x.t("using","enables");
x.t("using","cic");
x.t("parallelism","block");
x.t("streaming","interface");
x.t("cic","compiler");
x.t("cic","filters");
x.t("cic","core");
x.t("cic","valid");
x.t("cic","downsample");
x.t("blockset","libraries");
x.t("blockset","cic");
x.t("pass","sample");
x.t("tab","numerical");
x.t("tab","filter");
x.t("tab","parameters");
x.t("stages","filter");
x.t("stages","specified");
x.t("stages","number");
x.t("stages","stages");
x.t("kintex","device");
x.t("subtractors","delay");
x.t("without","problems");
x.t("paths","rate");
x.t("bandwidth","occupied");
x.t("clocked","lower-than-system");
x.t("spartan","device");
x.t("devices","cic");
x.t("integrator","comb");
x.t("specify","hardware");
x.t("specify","oversampling");
x.t("resources","used");
}
