function FileData_Pairs(x)
{
x.t("arc_tan","selected");
x.t("arc_tan","arc_tanh");
x.t("root","functional");
x.t("root","configurations");
x.t("root","input");
x.t("precision","determined");
x.t("precision","add-sub");
x.t("precision","configures");
x.t("clock","enable");
x.t("available","block");
x.t("available","cordic");
x.t("available","square");
x.t("coarse","rotation");
x.t("dout_tdata_phase","output");
x.t("dout_tdata_phase","port");
x.t("provide","tlast");
x.t("blocking","mode");
x.t("blocking","selects");
x.t("(p)","arc_tan");
x.t("(p)","sinh");
x.t("possible","without");
x.t("integers","phase");
x.t("determined","automatically");
x.t("digital","computer");
x.t("throughput","expense");
x.t("throughput","occupying");
x.t("throughput","pipelining");
x.t("simplified","cordic");
x.t("hardware","result");
x.t("version","data");
x.t("5.0","xilinx");
x.t("5.0","block");
x.t("5.0","cordic");
x.t("5.0","data");
x.t("5.0","axi");
x.t("single-cycle","data");
x.t("full","circle");
x.t("full","axi");
x.t("functional","configurations");
x.t("functional","selection");
x.t("functional","configuration");
x.t("every","shift-add");
x.t("atan","(imag/real)");
x.t("input/output","range");
x.t("input/output","options");
x.t("required","sinh");
x.t("required","accuracy");
x.t("required","cordic");
x.t("scaling","cordic");
x.t("scaling","affects");
x.t("scaling","module");
x.t("scaling","scale");
x.t("arctan","arctanh");
x.t("instantiation","coarse");
x.t("cartesian","input");
x.t("cartesian","phase");
x.t("cartesian","tuser");
x.t("cartesian","tlast");
x.t("optimal","cordic");
x.t("sub","stage");
x.t("1/2","rounded");
x.t("reaches","zero");
x.t("tan","coarse");
x.t("current","state");
x.t("coordinate","rotational");
x.t("expense","silicon");
x.t("dialog","box");
x.t("until","signal");
x.t("until","imag");
x.t("implemented","pipeline");
x.t("implemented","stages");
x.t("implemented","without");
x.t("shift-add","sub");
x.t("outputs","truncated");
x.t("outputs","rounded");
x.t("outputs","expressed");
x.t("uses","following");
x.t("mode","mode");
x.t("mode","no_pipelining");
x.t("mode","activated");
x.t("mode","selected");
x.t("mode","truncate");
x.t("mode","lack");
x.t("mode","axi");
x.t("icon","xilinx");
x.t("icon","block");
x.t("icon","display");
x.t("icon","select");
x.t("curve","until");
x.t("curve","hyperbolic");
x.t("2-bits","unsignedfraction");
x.t("state","until");
x.t("state","reset");
x.t("sample","full");
x.t("sample","rate");
x.t("sample","back");
x.t("sample","first");
x.t("sample","correct");
x.t("vector","cosh");
x.t("vector","(1,0)");
x.t("vector","rotated");
x.t("vector","rotation");
x.t("vector","cos");
x.t("vector","real");
x.t("vector","translation");
x.t("sinhcosh","arctan");
x.t("operates","first");
x.t("reset","signal");
x.t("xilinx","cordic");
x.t("xilinx","logicore");
x.t("xilinx","blockset");
x.t("square_root","selected");
x.t("square_root","two");
x.t("down","nearest_even");
x.t("down","3/2");
x.t("multiple","block's");
x.t("multiple","block");
x.t("rate","signal");
x.t("execution","operation");
x.t("listed","following");
x.t("automatically","compensating");
x.t("automatically","added");
x.t("automatically","based");
x.t("channel","blocking");
x.t("channel","block");
x.t("channel","optimization");
x.t("channel","tlasts");
x.t("channel","phase");
x.t("channel","tuser");
x.t("default","unselected");
x.t("default","following");
x.t("default","setting");
x.t("scaled_radians","phase");
x.t("pi-radian","units");
x.t("round_pos_inf","real");
x.t("-pi/4","pi/4");
x.t("back","initial");
x.t("back","appropriate");
x.t("block's","sample");
x.t("translate","selected");
x.t("translate","sin_and_cos");
x.t("circle","first");
x.t("circle","rotating");
x.t("advanced","configuration");
x.t("turned","functions");
x.t("precedence","clock");
x.t("precedence","optional");
x.t("block","uses");
x.t("block","icon");
x.t("block","sample");
x.t("block","reset");
x.t("block","execution");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","back");
x.t("block","parameters");
x.t("block","implements");
x.t("block","holds");
x.t("block","axi");
x.t("compliant","cordic");
x.t("compliant","ports");
x.t("architectural","configurations");
x.t("architectural","configuration");
x.t("configurations","available");
x.t("configurations","vector");
x.t("configurations","standard");
x.t("configurations","affect");
x.t("configurations","latter");
x.t("configurations","compensation");
x.t("rdy","maps");
x.t("dout_tlast","output");
x.t("unsignedinteger","available");
x.t("compensating","cordic");
x.t("scaled-radian","equals");
x.t("again","aresetn");
x.t("parallel","select");
x.t("parallel","configuration");
x.t("mag","real");
x.t("cartesian_tready","phase_tready");
x.t("dout_tdata_imag","dout_tdata_phase");
x.t("dout_tdata_imag","phase_out");
x.t("radians","input/output");
x.t("radians","phase");
x.t("bits","round");
x.t("bits","output");
x.t("nearest","even");
x.t("dsp","index");
x.t("dsp","-1l");
x.t("unsignedfraction","available");
x.t("units","scaled_radians");
x.t("units","scaled-radian");
x.t("selects","blocking");
x.t("selects","non-blocking");
x.t("channels","dout_tlast");
x.t("channels","added");
x.t("dout_tdata_real","dout_tdata_imag");
x.t("dout_tdata_real","y_out");
x.t("high","throughput");
x.t("unselected","full");
x.t("libraries","dsp");
x.t("box","page");
x.t("cosh","(p)");
x.t("cosh","arctanh");
x.t("range","full");
x.t("range","bits");
x.t("range","limited");
x.t("toward","nearest");
x.t("operation","data");
x.t("name","port");
x.t("performance","core");
x.t("performance","implementation");
x.t("performance","displaying");
x.t("sin","cos");
x.t("sin","sinh_and_cosh");
x.t("sinh","(p)");
x.t("sinh","cosh");
x.t("arc","tan");
x.t("virtex","device");
x.t("y_in","cartesian_tdata_imag");
x.t("angle","atan");
x.t("angle","square_root");
x.t("angle","represents");
x.t("angle","along");
x.t("angle","using");
x.t("angle","atanh");
x.t("angle","generates");
x.t("component","reaches");
x.t("component","zero");
x.t("no_pipelining","cordic");
x.t("perform","zero");
x.t("accuracy","output");
x.t("3,3e","dsp");
x.t("introduces","scale");
x.t("provides","option");
x.t("cartesian_tdata_imag","phase_in");
x.t("cartesian_tdata_imag","phase_tdata_phase");
x.t("parameters","dialog");
x.t("parameters","iterations");
x.t("zero","number");
x.t("zero","internal");
x.t("zero","generates");
x.t("boolean","tready");
x.t("boolean","aresetn");
x.t("nonblocking","mode");
x.t("nonblocking","selects");
x.t("area","coarse");
x.t("area","vector");
x.t("area","parallel");
x.t("area","word");
x.t("amplitude","result");
x.t("standard","cordic");
x.t("standard","aclken");
x.t("respective","channels");
x.t("cartesian_tdata_real","y_in");
x.t("cartesian_tdata_real","cartesian_tdata_imag");
x.t("selection","rotate");
x.t("(1,0)","hyperbolic");
x.t("optimization","nonblocking");
x.t("optimization","select");
x.t("optimization","options");
x.t("cordic","5.0");
x.t("cordic","v5.0");
x.t("cordic","magnitude");
x.t("cordic","4.0");
x.t("cordic","core");
x.t("cordic","scale");
x.t("cordic","algorithm");
x.t("cordic","operational");
x.t("input","sample");
x.t("input","vector");
x.t("input","channel");
x.t("input","architectural");
x.t("input","channels");
x.t("input","angle");
x.t("input","width");
x.t("input","ports");
x.t("input","port");
x.t("ports","cartesian");
x.t("ports","dout_tdata_real");
x.t("ports","standard");
x.t("ports","cartesian_tdata_real");
x.t("ports","flow");
x.t("ports","selected");
x.t("ports","and_all_tlasts");
x.t("ports","optional");
x.t("ports","renamed");
x.t("phase_out","dout_tdata_phase");
x.t("width","cartesian");
x.t("width","2-bits");
x.t("width","range");
x.t("width","input");
x.t("width","3-bits");
x.t("width","specifies");
x.t("width","output");
x.t("width","phase");
x.t("width","controls");
x.t("round","mode");
x.t("flow","control");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","system");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("silicon","area");
x.t("occupying","small");
x.t("small","area");
x.t("small","silicon");
x.t("selected","simplified");
x.t("selected","input");
x.t("selected","cordic");
x.t("selected","unit");
x.t("selected","separate");
x.t("selected","based");
x.t("selected","following");
x.t("functions","input/output");
x.t("activated","cartesian");
x.t("activated","resources");
x.t("present","tlast");
x.t("aclken","signal");
x.t("aclken","rst");
x.t("configured","provide");
x.t("configured","minimum");
x.t("configured","maximum");
x.t("display","display");
x.t("display","shortened");
x.t("calculate","positive");
x.t("3-bits","pi-radian");
x.t("3-bits","radian");
x.t("rotate","translate");
x.t("rotate","input");
x.t("rotate","selected");
x.t("tlasts","optimization");
x.t("rotated","input");
x.t("rotated","using");
x.t("-1/2","rounded");
x.t("logical","present");
x.t("serial","implementation");
x.t("first","quadrant");
x.t("y_out","dout_tdata_imag");
x.t("select","blocking");
x.t("select","hardware");
x.t("select","display");
x.t("select","whether");
x.t("minimum","resources");
x.t("trim","length");
x.t("unit","vector");
x.t("luts","maximum");
x.t("options","input");
x.t("options","activated");
x.t("add-sub","iterations");
x.t("affects","vector");
x.t("number","1/2");
x.t("number","iterations");
x.t("number","internal");
x.t("number","integer");
x.t("arctanh","square");
x.t("and_all_tlasts","pass");
x.t("control","axi");
x.t("non-blocking","mode");
x.t("implements","generalized");
x.t("implements","following");
x.t("equation","types");
x.t("function","selected");
x.t("maximum","performance");
x.t("maximum","cordic");
x.t("length","axi");
x.t("magnitude","scaling");
x.t("magnitude","mag");
x.t("truncated","round_pos_inf");
x.t("iterations","perform");
x.t("iterations","zero");
x.t("iterations","controls");
x.t("iterations","performed");
x.t("iterations","compensation");
x.t("signal","available");
x.t("signal","precedence");
x.t("signal","signal");
x.t("signal","driving");
x.t("signal","asserted");
x.t("signal","run");
x.t("phase_in","phase_tdata_phase");
x.t("whether","core");
x.t("move","vector");
x.t("move","input");
x.t("represents","log");
x.t("driving","port");
x.t("specifies","bit");
x.t("index","math");
x.t("rotation","required");
x.t("rotation","vector");
x.t("rotation","turned");
x.t("rotation","stage");
x.t("rotation","extends");
x.t("rotation","module");
x.t("rotation","controls");
x.t("rotation","performed");
x.t("inverse","coarse");
x.t("inverse","rotating");
x.t("signedfraction","default");
x.t("types","rotate");
x.t("changes","cordic");
x.t("changes","data");
x.t("format","radians");
x.t("format","signedfraction");
x.t("internal","precision");
x.t("internal","add-sub");
x.t("internal","iterations");
x.t("generalized","coordinate");
x.t("added","respective");
x.t("added","x_in");
x.t("truncate","real");
x.t("initial","state");
x.t("-1l","cordic");
x.t("-1l","-1l");
x.t("word_serial","select");
x.t("nearest_even","real");
x.t("sincos","sinhcosh");
x.t("enable","signal");
x.t("sin_and_cos","selected");
x.t("sin_and_cos","sinh_and_cosh");
x.t("arc_tanh","square_root");
x.t("arc_tanh","selected");
x.t("fully","parallel");
x.t("stage","required");
x.t("stage","rotates");
x.t("stage","data");
x.t("scaled","output");
x.t("adds","dout_tready");
x.t("adds","tuser");
x.t("adds","tlast");
x.t("option","automatically");
x.t("option","default");
x.t("cos","sin");
x.t("cos","arc");
x.t("hyperbolic","curve");
x.t("hyperbolic","angle");
x.t("square","root");
x.t("affect","sincos");
x.t("4.0","cordic");
x.t("(imag/real)","sin_and_cos");
x.t("(imag/real)","arc_tanh");
x.t("(imag/real)","hyperbolic");
x.t("trigonometric","angle");
x.t("null","data");
x.t("pass_cartesian_tlast","data");
x.t("displayed","block");
x.t("configuration","single-cycle");
x.t("configuration","parameters");
x.t("configuration","word_serial");
x.t("configuration","real");
x.t("dout_tready","cartesian_tready");
x.t("dout_tready","port");
x.t("core","implemented");
x.t("core","provides");
x.t("core","configured");
x.t("core","implements");
x.t("core","fully");
x.t("tready","ports");
x.t("tready","adds");
x.t("additional","luts");
x.t("1-bit","unsignedinteger");
x.t("configures","internal");
x.t("implementation","multiple-cycle");
x.t("implementation","tab");
x.t("rotates","output");
x.t("aresetn","rdy");
x.t("aresetn","signal");
x.t("pipeline","every");
x.t("round_pos_neg_inf","real");
x.t("holds","current");
x.t("computer","(cordic)");
x.t("x_out","dout_tdata_real");
x.t("pipelining","possible");
x.t("pipelining","optimal");
x.t("pipelining","mode");
x.t("fixed-point","complement");
x.t("fixed-point","numbers");
x.t("extends","cordic");
x.t("lack","data");
x.t("generator","block");
x.t("sinh_and_cosh","arc_tan");
x.t("sinh_and_cosh","selected");
x.t("word","serial");
x.t("quadrant","coarse");
x.t("quadrant","-pi/4");
x.t("quadrant","cordic");
x.t("quadrant","inverse");
x.t("quadrant","optional");
x.t("valid","first");
x.t("unrelated","trigonometric");
x.t("latter","configurations");
x.t("pi/4","coarse");
x.t("multiple-cycle","throughput");
x.t("output","precision");
x.t("output","sample");
x.t("output","vector");
x.t("output","angle");
x.t("output","ports");
x.t("output","width");
x.t("output","number");
x.t("output","magnitude");
x.t("output","port");
x.t("output","phase");
x.t("separate","tuser");
x.t("page","tab");
x.t("along","hyperbolic");
x.t("data","throughput");
x.t("data","input");
x.t("data","format");
x.t("data","output");
x.t("data","received");
x.t("data","sheet");
x.t("correct","quadrant");
x.t("optional","cordic");
x.t("optional","ports");
x.t("optional","aclken");
x.t("module","instantiation");
x.t("module","default");
x.t("module","used");
x.t("pass_phase_tlast","data");
x.t("result","high");
x.t("result","cordic");
x.t("result","small");
x.t("radian","units");
x.t("equals","radians");
x.t("appropriate","quadrant");
x.t("bit","width");
x.t("or_all_tlasts","pass");
x.t("received","input");
x.t("scale","factor");
x.t("scale","compensation");
x.t("displaying","port");
x.t("rotational","digital");
x.t("rst","aresetn");
x.t("maps","dout_tready");
x.t("phase_tready","automatically");
x.t("port","blocking");
x.t("port","cartesian");
x.t("port","boolean");
x.t("port","configured");
x.t("port","changes");
x.t("port","pass_cartesian_tlast");
x.t("port","displayed");
x.t("port","pass_phase_tlast");
x.t("port","or_all_tlasts");
x.t("port","phase");
x.t("port","names");
x.t("port","tlast");
x.t("phase","atan");
x.t("phase","outputs");
x.t("phase","input");
x.t("phase","format");
x.t("phase","expressed");
x.t("phase","tuser");
x.t("phase","tlast");
x.t("sheet","spartan");
x.t("two","architectural");
x.t("imag","translate");
x.t("imag","component");
x.t("imag","rotated");
x.t("imag","unrelated");
x.t("imag","output");
x.t("imag","along");
x.t("imag","phase");
x.t("imag","inputs");
x.t("integer","width");
x.t("integer","1-bit");
x.t("algorithm","until");
x.t("algorithm","operates");
x.t("algorithm","introduces");
x.t("algorithm","input");
x.t("algorithm","valid");
x.t("algorithm","used");
x.t("algorithm","axi");
x.t("algorithm","generates");
x.t("factor","amplitude");
x.t("factor","changes");
x.t("based","required");
x.t("based","function");
x.t("positive","square");
x.t("compensate","cordic");
x.t("asserted","block");
x.t("asserted","again");
x.t("asserted","aresetn");
x.t("renamed","aclken");
x.t("real","imag");
x.t("complement","number");
x.t("complement","numbers");
x.t("numbers","integer");
x.t("controls","instantiation");
x.t("controls","width");
x.t("controls","number");
x.t("controls","compensation");
x.t("3/2","rounded");
x.t("rotating","input");
x.t("rotating","output");
x.t("following","functional");
x.t("following","xilinx");
x.t("following","optimization");
x.t("following","equation");
x.t("used","calculate");
x.t("used","move");
x.t("used","compensate");
x.t("rounded","1/2");
x.t("rounded","down");
x.t("rounded","toward");
x.t("rounded","-1/2");
x.t("rounded","round_pos_neg_inf");
x.t("rounded","page");
x.t("scaping","controls");
x.t("run","multiple");
x.t("system","generator");
x.t("axi","compliant");
x.t("axi","name");
x.t("axi","port");
x.t("axi","behavior");
x.t("x_in","cartesian_tdata_real");
x.t("using","cordic");
x.t("using","additional");
x.t("setting","real");
x.t("blockset","libraries");
x.t("blockset","cordic");
x.t("tuser","input");
x.t("tuser","width");
x.t("tuser","adds");
x.t("tuser","tlast");
x.t("tab","functional");
x.t("tab","advanced");
x.t("tab","block");
x.t("stages","pipelining");
x.t("expressed","fixed-point");
x.t("expressed","unsigned");
x.t("translation","functional");
x.t("translation","sin");
x.t("pass","logical");
x.t("kintex","device");
x.t("performed","determined");
x.t("performed","rotate");
x.t("tlast","cartesian");
x.t("tlast","input");
x.t("tlast","adds");
x.t("tlast","tready");
x.t("tlast","behavior");
x.t("behavior","nonblocking");
x.t("behavior","select");
x.t("behavior","null");
x.t("names","block");
x.t("names","trim");
x.t("names","option");
x.t("shortened","port");
x.t("atanh","(imag/real)");
x.t("without","pipelining");
x.t("without","using");
x.t("compensation","coarse");
x.t("compensation","scaling");
x.t("compensation","scaping");
x.t("limited","first");
x.t("(cordic)","algorithm");
x.t("unsigned","integers");
x.t("unsigned","fixed-point");
x.t("spartan","device");
x.t("math","xilinx");
x.t("phase_tdata_phase","input");
x.t("phase_tdata_phase","x_out");
x.t("generates","scaled");
x.t("generates","hyperbolic");
x.t("generates","output");
x.t("log","area");
x.t("even","number");
x.t("operational","range");
x.t("resources","performance");
x.t("resources","maximum");
x.t("resources","core");
x.t("inputs","outputs");
}
