function FileData_Pairs(x)
{
x.t("example","below");
x.t("example","right-clicking");
x.t("below","right");
x.t("below","select");
x.t("below","lightling");
x.t("bolt","icon");
x.t("right","clicking");
x.t("right","click");
x.t("shown","below");
x.t("smart","connection");
x.t("smart","connections");
x.t("table","connection");
x.t("table","new");
x.t("green","line");
x.t("double","clicking");
x.t("double","click");
x.t("creates","smart");
x.t("line","connection");
x.t("line","confirm");
x.t("icon","indicates");
x.t("interface","allows");
x.t("open","port");
x.t("type","checking");
x.t("(2)","connect");
x.t("xilinx","blockconnect");
x.t("connection","example");
x.t("connection","smart");
x.t("connection","table");
x.t("connection","green");
x.t("connection","blocks");
x.t("connection","scope");
x.t("connection","made");
x.t("connection","turns");
x.t("connection","correct");
x.t("automatically","second");
x.t("automatically","added");
x.t("new","green");
x.t("block","right");
x.t("block","gateway");
x.t("block","second");
x.t("block","added");
x.t("block","output");
x.t("block","axi");
x.t("utilities","xilinx");
x.t("rapid","connection");
x.t("indicates","smart");
x.t("clicking","accumulator");
x.t("clicking","scope");
x.t("simple","connections");
x.t("nearest","connection");
x.t("built","help");
x.t("group/separate","axi");
x.t("name","signal");
x.t("name","used");
x.t("to/from","bus");
x.t("gateway","block");
x.t("proposes","nearest");
x.t("checking","performed");
x.t("confirm","double");
x.t("allows","(1)");
x.t("ports","allowed");
x.t("ports","number");
x.t("second","connection");
x.t("second","port");
x.t("selected","connection");
x.t("signals","to/from");
x.t("blocks","simulink");
x.t("select","open");
x.t("select","xilinx");
x.t("select","connection");
x.t("allowed","connect");
x.t("gui","utilities");
x.t("number","ports");
x.t("number","axi");
x.t("signal","name");
x.t("signal","driving");
x.t("driving","signal");
x.t("driving","scope");
x.t("accumulator","block");
x.t("lightling","bolt");
x.t("(1)","group/separate");
x.t("scope","creates");
x.t("scope","block");
x.t("scope","driving");
x.t("added","automatically");
x.t("added","scope");
x.t("right-clicking","block");
x.t("click","selected");
x.t("click","select");
x.t("made","scope");
x.t("simulink","model");
x.t("facilitates","rapid");
x.t("bus","(2)");
x.t("selecting","blockconnect");
x.t("generator","gui");
x.t("connections","shown");
x.t("connections","port");
x.t("connections","intellegence");
x.t("turns","black");
x.t("black","otherwise");
x.t("help","manage");
x.t("output","selecting");
x.t("correct","smart");
x.t("data","type");
x.t("port","automatically");
x.t("port","block");
x.t("port","data");
x.t("otherwise","select");
x.t("intellegence","built");
x.t("system","generator");
x.t("model","simple");
x.t("manage","connection");
x.t("used","name");
x.t("axi","interface");
x.t("axi","ports");
x.t("axi","signals");
x.t("axi","connections");
x.t("connect","smart");
x.t("connect","ports");
x.t("performed","axi");
x.t("blockconnect","double");
x.t("blockconnect","xilinx");
x.t("blockconnect","proposes");
x.t("blockconnect","facilitates");
x.t("blockconnect","system");
x.t("blockconnect","blockconnect");
}
