function FileData_Pairs(x)
{
x.t("double-clicking","icon");
x.t("precision","parameter");
x.t("precision","full");
x.t("precision","selected");
x.t("precision","option");
x.t("precision","signed");
x.t("precision","fixed-point");
x.t("precision","represent");
x.t("overflow","refer");
x.t("overflow","quantization");
x.t("addition/subtraction","selected");
x.t("determined","sub");
x.t("provide","carry-out");
x.t("provide","carry-in");
x.t("available","user");
x.t("available","target");
x.t("parameter","dialog");
x.t("parameter","allows");
x.t("carry-out","port");
x.t("version","data");
x.t("v11.0","floating-");
x.t("full","precision");
x.t("full","block");
x.t("implement","using");
x.t("sufficient","precision");
x.t("refer","section");
x.t("6-1l","addsub");
x.t("binary","point");
x.t("always","full");
x.t("sub","mode");
x.t("sub","input");
x.t("performs","addition");
x.t("performs","subtraction");
x.t("cin","carry-in");
x.t("don\u2019t","need");
x.t("user","defined");
x.t("topic","common");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("uses","sufficient");
x.t("uses","xilinx");
x.t("hdl","option");
x.t("hdl","gives");
x.t("hdl","otherwise");
x.t("implemented","using");
x.t("implemented","fabric");
x.t("downstream","logic");
x.t("until","maximum");
x.t("mode","signal");
x.t("icon","simulink");
x.t("register","put");
x.t("basic","tab");
x.t("pipelined","optimize");
x.t("xilinx","logicore");
x.t("xilinx","addsub");
x.t("xilinx","blockset");
x.t("total","bits");
x.t("listed","following");
x.t("behavioral","hdl");
x.t("speed","instead");
x.t("put","core");
x.t("default","fabric");
x.t("access","carry-out");
x.t("access","carry-in");
x.t("synthesis","tool");
x.t("single","output");
x.t("block","parameter");
x.t("block","performs");
x.t("block","uses");
x.t("block","implemented");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","operation");
x.t("block","parameters");
x.t("block","explained");
x.t("block","implements");
x.t("invoked","double-clicking");
x.t("need","full");
x.t("carry-in","port");
x.t("optimize","speed");
x.t("optimize","performance");
x.t("bits","user-defined");
x.t("bits","specifies");
x.t("bits","and/or");
x.t("bits","output");
x.t("bits","equals");
x.t("bits","integer");
x.t("quantization","overflow");
x.t("quantization","refer");
x.t("quantization","implementation");
x.t("dsp","-1l");
x.t("puts","user");
x.t("libraries","math");
x.t("operation","determined");
x.t("operation","addition");
x.t("operation","fixed");
x.t("operation","specifies");
x.t("box","invoked");
x.t("common","options");
x.t("subtractor","v11.0");
x.t("changed","dynamically");
x.t("follows","behavioral");
x.t("follows","operation");
x.t("performance","xilinx");
x.t("performance","area");
x.t("virtex","device");
x.t("dsp48","available");
x.t("dsp48","dsp48");
x.t("3,3e","dsp");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","pipeline");
x.t("parameters","used");
x.t("boolean","signal");
x.t("zero","provide");
x.t("zero","single");
x.t("zero","least");
x.t("floating","point");
x.t("reduced","number");
x.t("area","core");
x.t("area","selecting");
x.t("boxes","xilinx");
x.t("allows","access");
x.t("allows","specify");
x.t("explained","topic");
x.t("target","device");
x.t("addition","provide");
x.t("addition","subtraction");
x.t("input","block");
x.t("input","port");
x.t("logicore","version");
x.t("logicore","behavioral");
x.t("logicore","logicore");
x.t("logicore","internally");
x.t("logicore","system");
x.t("device","default");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","kintex");
x.t("selected","binary");
x.t("selected","block");
x.t("selected","allows");
x.t("selected","latency");
x.t("selected","inputs");
x.t("point","fixed-point");
x.t("point","output");
x.t("point","arithmetic");
x.t("point","operator");
x.t("point","position");
x.t("point","inputs");
x.t("error","user");
x.t("logic","implemented");
x.t("logic","synthesis");
x.t("fixed","addition");
x.t("options","block");
x.t("control","sub");
x.t("number","total");
x.t("number","bits");
x.t("number","number");
x.t("number","output");
x.t("number","bit");
x.t("number","unsigned");
x.t("implements","adder/subtractor");
x.t("signal","sub");
x.t("signal","block");
x.t("max","integer");
x.t("maximum","performance");
x.t("maximum","freedom");
x.t("maximum","allowable");
x.t("specifies","block");
x.t("specifies","bit");
x.t("user-defined","precision");
x.t("index","xilinx");
x.t("instead","area");
x.t("section","overflow");
x.t("floating-","point");
x.t("added","output");
x.t("-1l","6-1l");
x.t("floating-point","index");
x.t("option","puts");
x.t("option","allows");
x.t("option","selected");
x.t("option","used");
x.t("least","significant");
x.t("greater","zero");
x.t("cout","carry-out");
x.t("and/or","fractional");
x.t("simulink","model");
x.t("latency","added");
x.t("latency","greater");
x.t("latency","core");
x.t("latency","reached");
x.t("core","implement");
x.t("core","until");
x.t("core","block");
x.t("core","parameters");
x.t("core","logic");
x.t("core","additional");
x.t("additional","latency");
x.t("specific","basic");
x.t("specific","implementation");
x.t("signed","complement");
x.t("signed","comp");
x.t("implementation","tab");
x.t("gives","downstream");
x.t("pipeline","maximum");
x.t("selecting","option");
x.t("fixed-point","precision");
x.t("fixed-point","output");
x.t("fixed-point","arithmetic");
x.t("generator","block");
x.t("adder/subtractor","operation");
x.t("represent","result");
x.t("output","precision");
x.t("output","always");
x.t("output","register");
x.t("output","quantization");
x.t("output","number");
x.t("output","core");
x.t("output","signed");
x.t("output","integer");
x.t("output","tab");
x.t("output","unsigned");
x.t("location","binary");
x.t("subtraction","addition/subtraction");
x.t("subtraction","changed");
x.t("subtraction","otherwise");
x.t("subtraction","addition/");
x.t("tool","maximum");
x.t("freedom","optimize");
x.t("internally","pipelined");
x.t("data","sheet");
x.t("addsub","xilinx");
x.t("addsub","block");
x.t("addsub","addsub");
x.t("addsub","adder");
x.t("defined","precision");
x.t("defined","don\u2019t");
x.t("defined","latency");
x.t("equals","max");
x.t("result","without");
x.t("bit","binary");
x.t("bit","zero");
x.t("bit","location");
x.t("adder","subtractor");
x.t("port","available");
x.t("port","cin");
x.t("port","selected");
x.t("port","cout");
x.t("port","driven");
x.t("sheet","spartan");
x.t("otherwise","performs");
x.t("otherwise","core");
x.t("integer","bits");
x.t("fractional","bits");
x.t("significant","bit");
x.t("driven","boolean");
x.t("complement","number");
x.t("reached","option");
x.t("following","xilinx");
x.t("model","basic");
x.t("used","block");
x.t("system","generator");
x.t("arithmetic","floating");
x.t("arithmetic","output");
x.t("using","behavioral");
x.t("using","core");
x.t("v6.0","v6.0");
x.t("blockset","libraries");
x.t("blockset","addsub");
x.t("tab","precision");
x.t("tab","follows");
x.t("tab","parameters");
x.t("addition/","subtraction");
x.t("allowable","latency");
x.t("fabric","dsp48");
x.t("fabric","parameters");
x.t("kintex","device");
x.t("without","error");
x.t("operator","v6.0");
x.t("unsigned","number");
x.t("unsigned","output");
x.t("position","binary");
x.t("spartan","device");
x.t("math","floating-point");
x.t("dynamically","control");
x.t("inputs","zero");
x.t("inputs","output");
x.t("specify","reduced");
x.t("specify","output");
x.t("comp","output");
}
