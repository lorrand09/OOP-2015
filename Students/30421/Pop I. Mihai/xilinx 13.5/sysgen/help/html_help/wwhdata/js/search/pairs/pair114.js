function FileData_Pairs(x)
{
x.t("supports","various");
x.t("modes","output");
x.t("modes","described");
x.t("satisfied","option");
x.t("double-clicking","icon");
x.t("precision","specified");
x.t("precision","elements");
x.t("equal","provide");
x.t("equal","advanced");
x.t("equal","ceil");
x.t("parameter","dialog");
x.t("parameter","write");
x.t("parameter","selected");
x.t("indicated","address");
x.t("below","figure");
x.t("below","read-read");
x.t("possible","following");
x.t("provide","synchronous");
x.t("provide","maximum");
x.t("provide","enable");
x.t("available","latency");
x.t("available","port");
x.t("available","spartan");
x.t("256","8193");
x.t("256","2049");
x.t("simultaneously","memory");
x.t("version","data");
x.t("16k","16k");
x.t("16k","32k");
x.t("16k","192");
x.t("fpga","families");
x.t("port's","address");
x.t("write-read","collisions");
x.t("timing","performance");
x.t("various","form");
x.t("various","depth");
x.t("binary","point");
x.t("always","uses");
x.t("always","port");
x.t("(d)","denotes");
x.t("try","write");
x.t("topic","common");
x.t("tables","above");
x.t("4096","inclusive");
x.t("4096","192");
x.t("line","hence");
x.t("line","during");
x.t("line","write");
x.t("line","output");
x.t("last","output");
x.t("outputs","marked");
x.t("dialog","box");
x.t("dialog","boxes");
x.t("uses","xilinx");
x.t("uses","following");
x.t("4097","8192");
x.t("interface","block");
x.t("mode","write");
x.t("mode","initial");
x.t("mode","output");
x.t("mode","port");
x.t("register","block");
x.t("register","selected");
x.t("register","specifies");
x.t("register","initial");
x.t("register","un-checked");
x.t("icon","simulink");
x.t("sample","rates");
x.t("type","binary");
x.t("type","option");
x.t("providing","valid");
x.t("obtained","location");
x.t("basic","tab");
x.t("ram's","trailing");
x.t("reset","signal");
x.t("reset","port");
x.t("hence","value");
x.t("vector","ram's");
x.t("vector","saturated");
x.t("vector","specifies");
x.t("vector","longer");
x.t("vector","based");
x.t("xilinx","logicore");
x.t("xilinx","dual");
x.t("xilinx","blockset");
x.t("xilinx","logicores");
x.t("multiple","data");
x.t("form","factors");
x.t("form","factor");
x.t("listed","following");
x.t("default","port");
x.t("saturated","rounded");
x.t("access","reset");
x.t("access","single");
x.t("access","ports");
x.t("access","enable");
x.t("access","memory");
x.t("single","memory");
x.t("denotes","ram");
x.t("denotes","memory");
x.t("contents","size");
x.t("contents","specified");
x.t("contents","write");
x.t("contents","corrupted");
x.t("advanced","tab");
x.t("spartan-3a","dsp");
x.t("block","supports");
x.t("block","parameter");
x.t("block","always");
x.t("block","uses");
x.t("block","interface");
x.t("block","xilinx");
x.t("block","listed");
x.t("block","ram");
x.t("block","parameters");
x.t("block","explained");
x.t("block","accessed");
x.t("block","implements");
x.t("block","memory");
x.t("block","greater");
x.t("block","two");
x.t("block","distributed");
x.t("size","precision");
x.t("invoked","double-clicking");
x.t("8192","256");
x.t("8192","8193");
x.t("256k","256k");
x.t("256k","width");
x.t("256k","512k");
x.t("add","port");
x.t("during","write");
x.t("8193","16k");
x.t("presented","input");
x.t("according","precision");
x.t("depends","write");
x.t("depends","device");
x.t("depends","depth");
x.t("dsp","-1l");
x.t("dsp","depth");
x.t("dsp","devices");
x.t("ram","provide");
x.t("ram","always");
x.t("ram","reset");
x.t("ram","xilinx");
x.t("ram","contents");
x.t("ram","block");
x.t("ram","blocks");
x.t("ram","particular");
x.t("ram","vector's");
x.t("ram","memory");
x.t("ram","option");
x.t("ram","longer");
x.t("ram","depth");
x.t("ram","dual");
x.t("ram","distributed");
x.t("writing","providing");
x.t("writing","independent");
x.t("specified","form");
x.t("specified","block");
x.t("specified","address");
x.t("specified","input");
x.t("specified","maximum");
x.t("specified","data");
x.t("specified","port");
x.t("specified","using");
x.t("cycle","configure");
x.t("libraries","control");
x.t("operation","depends");
x.t("operation","successful");
x.t("operation","asserted");
x.t("stored","memory");
x.t("box","invoked");
x.t("box","maximum");
x.t("common","options");
x.t("follows","data");
x.t("corresponds","read");
x.t("performance","possible");
x.t("performance","implementing");
x.t("virtex","/virtex-e/spartan");
x.t("virtex","virtex-5");
x.t("virtex","device");
x.t("2048","256");
x.t("inclusive","fpga");
x.t("inclusive","spartan");
x.t("synchronous","reset");
x.t("old","memory");
x.t("old","value");
x.t("3,3e","dsp");
x.t("2049","4096");
x.t("boolean","value");
x.t("parameters","dialog");
x.t("parameters","block");
x.t("parameters","specific");
x.t("parameters","used");
x.t("zero","initial");
x.t("boxes","xilinx");
x.t("65536","inclusive");
x.t("address","line");
x.t("address","input");
x.t("address","width");
x.t("address","data");
x.t("address","bit");
x.t("address","port");
x.t("address","individual");
x.t("address","unsigned");
x.t("writes","reads");
x.t("allows","access");
x.t("explained","topic");
x.t("sets","ports");
x.t("write","modes");
x.t("write","simultaneously");
x.t("write","mode");
x.t("write","cycle");
x.t("write","operation");
x.t("write","parameters");
x.t("write","write");
x.t("write","enable");
x.t("write","collision");
x.t("write","read");
x.t("write","data");
x.t("write","port");
x.t("allow","shared");
x.t("accessed","reading");
x.t("attempt","read");
x.t("virtex-4","virtex-5");
x.t("/virtex-e/spartan","depth");
x.t("ports","try");
x.t("ports","address");
x.t("ports","allow");
x.t("ports","enable");
x.t("ports","read");
x.t("ports","location");
x.t("ports","simultaneous");
x.t("ports","port");
x.t("ports","described");
x.t("ports","labeled");
x.t("three","input");
x.t("input","during");
x.t("input","ports");
x.t("input","written");
x.t("input","data");
x.t("input","port");
x.t("width","equal");
x.t("width","various");
x.t("width","8192");
x.t("width","2048");
x.t("width","given");
x.t("width","1024");
x.t("width","data");
x.t("width","port");
x.t("cell","outputs");
x.t("cell","memory");
x.t("cell","read");
x.t("marked","invalid");
x.t("virtex-5","virtex-6");
x.t("logicore","version");
x.t("logicore","block");
x.t("logicore","logicore");
x.t("logicore","dual");
x.t("logicore","distributed");
x.t("device","virtex");
x.t("device","3,3e");
x.t("device","family");
x.t("device","kintex");
x.t("random","access");
x.t("selected","port's");
x.t("selected","allows");
x.t("selected","logicore");
x.t("virtex-6","spartan-3a");
x.t("virtex-6","spartan");
x.t("logic","memory");
x.t("point","index");
x.t("point","output");
x.t("point","operator");
x.t("point","position");
x.t("independent","address");
x.t("independent","sets");
x.t("error","simulation");
x.t("choices","read");
x.t("blocks","virtex");
x.t("16,384","option");
x.t("family","targeted");
x.t("occurs","port");
x.t("discarded","ram");
x.t("space","default");
x.t("space","different");
x.t("means","output");
x.t("select","block");
x.t("options","block");
x.t("targeted","tables");
x.t("32k","32k");
x.t("32k","64k");
x.t("control","logic");
x.t("number","words");
x.t("written","means");
x.t("written","location");
x.t("implements","random");
x.t("signal","input");
x.t("maximum","timing");
x.t("maximum","width");
x.t("maximum","depth");
x.t("maximum","data");
x.t("1024k","distributed");
x.t("different","sample");
x.t("different","arithmetic");
x.t("words","block");
x.t("words","ram");
x.t("words","zero");
x.t("words","memory");
x.t("particular","port");
x.t("reads","memory");
x.t("specifies","number");
x.t("specifies","initial");
x.t("v5.2","distributed");
x.t("index","xilinx");
x.t("floating-","point");
x.t("(ff)","form");
x.t("types","corresponding");
x.t("implementing","dual");
x.t("format","specified");
x.t("factors","(ff)");
x.t("factors","greater");
x.t("factors","dual");
x.t("initial","ram");
x.t("initial","memory");
x.t("initial","value");
x.t("(nan)","write-read");
x.t("(nan)","write");
x.t("-1l","-1l");
x.t("-1l","dual");
x.t("enable","synchronous");
x.t("enable","ports");
x.t("enable","simultaneous");
x.t("enable","port");
x.t("enable","optionally");
x.t("end","memory");
x.t("invalid","(nan)");
x.t("collision","occurs");
x.t("collision","behavior");
x.t("corrupted","validity");
x.t("log2","(d)");
x.t("memory","parameter");
x.t("memory","type");
x.t("memory","contents");
x.t("memory","block");
x.t("memory","depends");
x.t("memory","address");
x.t("memory","cell");
x.t("memory","space");
x.t("memory","floating-");
x.t("memory","initial");
x.t("memory","generator");
x.t("memory","location");
x.t("memory","depth");
x.t("memory","dual");
x.t("memory","(ram)");
x.t("memory","port");
x.t("memory","used");
x.t("memory","distributed");
x.t("memory","caught");
x.t("option","provide");
x.t("option","select");
x.t("option","initial");
x.t("option","latency");
x.t("option","depth");
x.t("vector's","trailing");
x.t("given","block");
x.t("greater","equal");
x.t("greater","data");
x.t("families","word");
x.t("less","16,384");
x.t("longer","vector");
x.t("longer","ram");
x.t("1024","inclusive");
x.t("latency","block");
x.t("latency","higher");
x.t("simulink","model");
x.t("value","available");
x.t("value","vector");
x.t("value","saturated");
x.t("value","corresponds");
x.t("value","address");
x.t("value","location");
x.t("value","data");
x.t("value","port");
x.t("ceil","log2");
x.t("figure","below");
x.t("figure","memory");
x.t("validity","output");
x.t("specific","basic");
x.t("specific","advanced");
x.t("rates","using");
x.t("inferred","form");
x.t("inferred","specified");
x.t("generator","block");
x.t("generator","v5.2");
x.t("generator","v6.1");
x.t("virtex-4/virtex-5/spartan-3a","dsp");
x.t("512k","1024k");
x.t("512k","512k");
x.t("valid","address");
x.t("read","simultaneously");
x.t("read","operation");
x.t("read","old");
x.t("read","write");
x.t("read","port");
x.t("read","past");
x.t("reliably","read");
x.t("word","width");
x.t("output","last");
x.t("output","register");
x.t("output","obtained");
x.t("output","during");
x.t("output","old");
x.t("output","ports");
x.t("output","read");
x.t("output","data");
x.t("output","port");
x.t("output","unaffected");
x.t("output","two");
x.t("depth","4096");
x.t("depth","block");
x.t("depth","depends");
x.t("depth","specified");
x.t("depth","65536");
x.t("depth","width");
x.t("depth","number");
x.t("depth","maximum");
x.t("depth","specifies");
x.t("depth","less");
x.t("depth","inferred");
x.t("depth","port");
x.t("depth","ranges");
x.t("location","indicated");
x.t("location","specified");
x.t("location","selected");
x.t("location","written");
x.t("location","memory");
x.t("help","figure");
x.t("dual","ports");
x.t("dual","port");
x.t("data","presented");
x.t("data","write");
x.t("data","width");
x.t("data","input");
x.t("data","ports");
x.t("data","words");
x.t("data","format");
x.t("data","read");
x.t("data","word");
x.t("data","output");
x.t("data","port");
x.t("data","sheet");
x.t("data","widths");
x.t("configure","behavior");
x.t("128k","256k");
x.t("128k","128k");
x.t("shared","access");
x.t("defined","data");
x.t("bit","specified");
x.t("result","simultaneous");
x.t("read-only","mode");
x.t("successful","write-write");
x.t("port","available");
x.t("port","vector");
x.t("port","form");
x.t("port","block");
x.t("port","depends");
x.t("port","ram");
x.t("port","stored");
x.t("port","boolean");
x.t("port","writes");
x.t("port","attempt");
x.t("port","write");
x.t("port","three");
x.t("port","selected");
x.t("port","different");
x.t("port","enable");
x.t("port","invalid");
x.t("port","value");
x.t("port","inferred");
x.t("port","valid");
x.t("port","read");
x.t("port","reliably");
x.t("port","output");
x.t("port","depth");
x.t("port","data");
x.t("port","read-only");
x.t("port","port");
x.t("port","positive");
x.t("port","following");
x.t("port","using");
x.t("port","unsigned");
x.t("(ram)","dual");
x.t("simultaneous","access");
x.t("simultaneous","reading");
x.t("described","below");
x.t("described","help");
x.t("unaffected","address");
x.t("above","provide");
x.t("sheet","spartan");
x.t("64k","128k");
x.t("64k","64k");
x.t("two","modes");
x.t("two","independent");
x.t("integer","port");
x.t("integer","d-1");
x.t("d-1","denotes");
x.t("optionally","add");
x.t("factor","form");
x.t("factor","specified");
x.t("factor","follows");
x.t("factor","defined");
x.t("asserted","data");
x.t("positive","integer");
x.t("based","data");
x.t("192","16k");
x.t("192","4097");
x.t("following","xilinx");
x.t("following","choices");
x.t("following","conditions");
x.t("corresponding","input");
x.t("individual","address");
x.t("simulation","initial");
x.t("model","basic");
x.t("elements","discarded");
x.t("elements","initial");
x.t("rounded","according");
x.t("used","block");
x.t("used","depth");
x.t("system","generator");
x.t("using","multiple");
x.t("using","advanced");
x.t("using","read");
x.t("arithmetic","type");
x.t("v6.0","maximum");
x.t("v6.0","v6.0");
x.t("blockset","libraries");
x.t("blockset","dual");
x.t("collisions","ports");
x.t("collisions","collision");
x.t("tab","block");
x.t("tab","parameters");
x.t("tab","depth");
x.t("tab","port");
x.t("distributed","ram");
x.t("distributed","memory");
x.t("distributed","dual");
x.t("kintex","device");
x.t("v6.1","floating-");
x.t("past","end");
x.t("caught","error");
x.t("behavior","data");
x.t("behavior","result");
x.t("operator","v6.0");
x.t("ranges","virtex");
x.t("ranges","virtex-4/virtex-5/spartan-3a");
x.t("position","form");
x.t("unsigned","integer");
x.t("unsigned","arithmetic");
x.t("labeled","types");
x.t("read-read","collisions");
x.t("spartan","dsp");
x.t("spartan","virtex");
x.t("spartan","virtex-4");
x.t("spartan","device");
x.t("reading","writing");
x.t("conditions","satisfied");
x.t("trailing","words");
x.t("trailing","elements");
x.t("widths","block");
x.t("widths","initial");
x.t("write-write","collisions");
x.t("devices","provide");
x.t("devices","maximum");
x.t("devices","initial");
x.t("devices","depth");
x.t("un-checked","option");
x.t("higher","block");
x.t("logicores","system");
}
