function FileData_Pairs(x)
{
x.t("passed","handle");
x.t("included","matlab");
x.t("in-ports","using");
x.t("example","gatewayin.arith_type=");
x.t("example","gatewayout.arith_type=");
x.t("example","runs");
x.t("possible","change");
x.t("possible","values");
x.t("usegatewayins","instructs");
x.t("gatewayin","gateway");
x.t("gatewayin","gatewayout");
x.t("parameter","names");
x.t("drive","unconnected");
x.t("sourcewithport","string");
x.t("full","path");
x.t("description","source");
x.t("description","gcs");
x.t("description","following");
x.t("table","describes");
x.t("describes","possible");
x.t("refer","sourcewith");
x.t("s.termwith.port","s.recursesubsystem");
x.t("source","gatewayin");
x.t("source","field");
x.t("source","block's");
x.t("source","block");
x.t("source","blocks");
x.t("source","terminator");
x.t("source","xladdterms");
x.t("source","term");
x.t("termwithport","string");
x.t("required","existence");
x.t("built-in/display","s.termwith.port");
x.t("arguments","second");
x.t("(gcs)","example");
x.t("refers","block");
x.t("current","system");
x.t("user","ensure");
x.t("string-handle","current");
x.t("string-handle","system");
x.t("field","source");
x.t("field","prompts");
x.t("field","parameters");
x.t("field","allows");
x.t("field","present");
x.t("field","similar");
x.t("field","optionstruct");
x.t("field","used");
x.t("field","names");
x.t("gatewayin.bin_pt=","gateway");
x.t("gatewayout.n_bits=","gatewayout.bin_pt=");
x.t("prompts","xladdterms");
x.t("change","type");
x.t("type","source");
x.t("type","ufix_32_0");
x.t("source.const","source.arith_type=");
x.t("left","user");
x.t("built-in/terminator","xbsindex_r3/addsub");
x.t("block's","property");
x.t("block's","value");
x.t("block's","constant");
x.t("property","e.g");
x.t("default","parameters");
x.t("default","simulink");
x.t("default","constant");
x.t("command","simulink");
x.t("block","possible");
x.t("block","refer");
x.t("block","refers");
x.t("block","left");
x.t("block","list");
x.t("block","termwith");
x.t("block","specified");
x.t("block","input");
x.t("block","sourcewith");
x.t("block","s.source.const");
x.t("block","e.g");
x.t("block","simulink");
x.t("block","value");
x.t("block","called");
x.t("block","used");
x.t("block","run");
x.t("block","additionally");
x.t("block","setting");
x.t("ufix_32_0","usegatewayouts");
x.t("ufix_32_0","done");
x.t("ufix_32_0","recursesubsystems");
x.t("utilities","xladdterms");
x.t("list","string");
x.t("list","arg1");
x.t("list","numeric");
x.t("termwith","field");
x.t("termwith","termwith");
x.t("termwith","two");
x.t("gcs","string-handle");
x.t("gcs","remarks");
x.t("built-in/constant","xbsindex_r3/addsub");
x.t("searchdepth","example");
x.t("handle","block");
x.t("handle","system");
x.t("true","matlab");
x.t("specified","default");
x.t("specified","termwithblock");
x.t("specified","sourcewithblock");
x.t("specified","using");
x.t("source.n_bits=32","sourcewith");
x.t("existence","field");
x.t("name","block");
x.t("name","system");
x.t("test1","process");
x.t("test1","case");
x.t("test1","including");
x.t("path","name");
x.t("find_system","tt/mysubsystem");
x.t("gateway","ins");
x.t("gateway","input");
x.t("gateway","blocks");
x.t("gateway","output");
x.t("gateway","outs");
x.t("t/b1","t/b2");
x.t("argument","name");
x.t("argument","configured");
x.t("argument","optionstruct");
x.t("argument","optional");
x.t("handles","[1;2;3]");
x.t("handles","optionstruct");
x.t("handles","case");
x.t("t/b2","t/b3");
x.t("set_params","source");
x.t("t/b3","block");
x.t("parameters","source");
x.t("parameters","constant");
x.t("parameters","relevant");
x.t("parameters","using");
x.t("parameters","sub-fields");
x.t("matlab","structure");
x.t("gatewayout.bin_pt=","gateway");
x.t("unconnected","ports");
x.t("unconnected","port");
x.t("allows","source");
x.t("allows","term");
x.t("ins","required");
x.t("ins","field");
x.t("ins","inserted");
x.t("ins","used");
x.t("usegatewayouts","instructs");
x.t("string","handles");
x.t("string","specifying");
x.t("fields","source");
x.t("ports","terminated");
x.t("ports","correctly");
x.t("ports","model");
x.t("input","ufix_32_0");
x.t("input","ports");
x.t("second","argument");
x.t("conditionally","added");
x.t("sourcewith","field");
x.t("sourcewith","sourcewith");
x.t("sourcewith","two");
x.t("present","gateway");
x.t("xladdterm","recursively");
x.t("xladdterm","child");
x.t("blocks","test1");
x.t("blocks","t/b1");
x.t("blocks","conditionally");
x.t("blocks","syntax");
x.t("blocks","subsystem");
x.t("blocks","terminate");
x.t("blocks","used");
x.t("blocks","subsystems");
x.t("configured","instruct");
x.t("display","block");
x.t("syntax","xladdterms");
x.t("termwithblock","string");
x.t("addterms","command");
x.t("first","argument");
x.t("source.value","system");
x.t("terminated","xladdterms");
x.t("terminated","simulink");
x.t("terminator","block");
x.t("terminator","blocks");
x.t("number","examples");
x.t("number","used");
x.t("gateways","added");
x.t("scalar","number");
x.t("different","source");
x.t("instructs","xladdterm");
x.t("instructs","xladdterms");
x.t("insertion","gateway");
x.t("xladdterms","passed");
x.t("xladdterms","(gcs)");
x.t("xladdterms","current");
x.t("xladdterms","block's");
x.t("xladdterms","block");
x.t("xladdterms","gcs");
x.t("xladdterms","find_system");
x.t("xladdterms","blocks");
x.t("xladdterms","xladdterms");
x.t("xladdterms","similar");
x.t("xladdterms","takes");
x.t("xladdterms","output");
x.t("xladdterms","arg1");
x.t("xladdterms","system");
x.t("xladdterms","terminate");
x.t("xladdterms","connect");
x.t("xladdterms","series");
x.t("xladdterms","insert");
x.t("added","optionstruct");
x.t("added","subsystems");
x.t("s.source.const","s.usegatewayouts");
x.t("adds","blocks");
x.t("term","example");
x.t("term","block");
x.t("expects","scalar");
x.t("gatewayin.arith_type=","unsigned");
x.t("recursively","terminated");
x.t("recursively","run");
x.t("e.g","built-in/terminator");
x.t("e.g","built-in/constant");
x.t("e.g","simulink");
x.t("e.g","constant");
x.t("e.g","specifying");
x.t("ensure","parameter");
x.t("ensure","parameters");
x.t("gatewayout.arith_type=","unsigned");
x.t("tt./mysubsystem","xladdterms");
x.t("changing","term");
x.t("simulink","display");
x.t("simulink","terminator");
x.t("simulink","adds");
x.t("simulink","constant");
x.t("simulink","system");
x.t("[1;2;3]","block");
x.t("source.bin_pt=0","source.n_bits=32");
x.t("similar","source");
x.t("similar","addterms");
x.t("value","type");
x.t("value","different");
x.t("value","done");
x.t("value","using");
x.t("source.arith_type=","unsigned");
x.t("constant","source");
x.t("constant","block's");
x.t("constant","block");
x.t("constant","value");
x.t("optionstruct","description");
x.t("optionstruct","argument");
x.t("optionstruct","xladdterms");
x.t("optionstruct","passing");
x.t("generator","utilities");
x.t("generator","gateway");
x.t("generator","constant");
x.t("process","child");
x.t("subsystem","tt./mysubsystem");
x.t("s.usegatewayouts","s.termwith.block");
x.t("instruct","xladdterms");
x.t("takes","either");
x.t("sourcewithblock","string");
x.t("runs","xladdterms");
x.t("valid","toolbar");
x.t("output","ufix_32_0");
x.t("output","ports");
x.t("specifying","full");
x.t("specifying","instructs");
x.t("specifying","port");
x.t("remarks","note");
x.t("optional","included");
x.t("optional","first");
x.t("sensitive","optionstruct");
x.t("sensitive","using");
x.t("inserted","parameters");
x.t("gatewayout","gateway");
x.t("gatewayout","users");
x.t("arg1","description");
x.t("arg1","optionstruct");
x.t("xbsindex_r3/addsub","sourcewithport");
x.t("xbsindex_r3/addsub","termwithport");
x.t("examples","example");
x.t("toolbar","xltbutils");
x.t("case","xladdterms");
x.t("case","sensitive");
x.t("values","structure");
x.t("port","usegatewayins");
x.t("port","termwith");
x.t("port","number");
x.t("port","xladdterms");
x.t("port","term");
x.t("called","test1");
x.t("children","blocks");
x.t("structure","field");
x.t("structure","structure");
x.t("structure","following");
x.t("s.recursesubsystem","xladdterms");
x.t("done","source.const");
x.t("done","source.value");
x.t("two","sub-fields");
x.t("note","field");
x.t("users","ensure");
x.t("correctly","driven");
x.t("top/test1","string-handle");
x.t("top/test1","block");
x.t("numeric","handles");
x.t("gatewayin.n_bits=","gatewayin.bin_pt=");
x.t("outs","required");
x.t("outs","field");
x.t("outs","changing");
x.t("outs","inserted");
x.t("outs","used");
x.t("driven","either");
x.t("system","default");
x.t("system","block");
x.t("system","generator");
x.t("system","called");
x.t("system","top/test1");
x.t("system","run");
x.t("system","setting");
x.t("terminate","in-ports");
x.t("terminate","drive");
x.t("terminate","unconnected");
x.t("model","xladdterms");
x.t("either","arguments");
x.t("either","simulink");
x.t("following","description");
x.t("following","table");
x.t("used","gatewayin");
x.t("used","drive");
x.t("used","source");
x.t("used","gateways");
x.t("used","e.g");
x.t("used","gatewayout");
x.t("used","terminate");
x.t("used","connect");
x.t("used","denote");
x.t("run","xladdterm");
x.t("run","xladdterms");
x.t("relevant","source");
x.t("additionally","system");
x.t("using","source");
x.t("using","field");
x.t("using","gateway");
x.t("using","fields");
x.t("using","port");
x.t("setting","source");
x.t("setting","block's");
x.t("setting","constant");
x.t("connect","e.g");
x.t("connect","using");
x.t("s.termwith.block","built-in/display");
x.t("series","set_params");
x.t("recursesubsystems","instructs");
x.t("child","blocks");
x.t("child","subsystems");
x.t("names","true");
x.t("names","valid");
x.t("names","case");
x.t("tt/mysubsystem","searchdepth");
x.t("including","children");
x.t("passing","parameters");
x.t("unsigned","gatewayout.n_bits=");
x.t("unsigned","source.bin_pt=0");
x.t("unsigned","gatewayin.n_bits=");
x.t("insert","system");
x.t("subsystems","expects");
x.t("subsystems","recursively");
x.t("subsystems","top/test1");
x.t("sub-fields","source");
x.t("sub-fields","specified");
x.t("denote","insertion");
}
