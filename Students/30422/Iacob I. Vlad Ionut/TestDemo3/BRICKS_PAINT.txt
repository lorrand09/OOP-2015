for (int j = 0; j < 10; j ++)
			switch (j) {

			case 0:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.red, 15 + i * 90, 20*j+35);
					Brickss[i][j]=1;
				}
				break;
			case 1:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.red, 15 + i * 90, 20*j+35);
					Brickss[i][j]=1;
				}
				break;

			case 2:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.orange, 15 + i * 90, 20*j+35);
					Brickss[i][j]=1;
				}
				break;
			case 3:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.orange, 15 + i * 90, 20*j+35);
					Brickss[i][j]=1;
				}
				break;
			case 4:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.yellow, 15 + i * 90, 20*j+35);
					Brickss[i][j]=1;
				}
				break;
			case 5:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.yellow, 15 + i * 90, 20*j+35);
					Brickss[i][j]=1;
				}
				break;
			case 6:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.green, 15 + i * 90,20*j+35);
					Brickss[i][j]=1;
				}
				break;
			case 7:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.green, 15 + i * 90, 20*j+35);
					Brickss[i][j]=1;
				}
				break;
			case 8:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.cyan, 15 + i * 90, 20*j+35);
					Brickss[i][j]=1;
				}
				break;
			case 9:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.cyan, 15 + i * 90, 20*j+35);
					Brickss[i][j]=1;

				}
				default:
					break;
					

			}