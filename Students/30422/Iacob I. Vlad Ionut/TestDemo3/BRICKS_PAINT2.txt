for (int j = 35; j <= 235; j +=20)
			switch (j) {

			case 55:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.red, 15 + i * 90, j);
					Brickss[i][j]=1;
				}
				break;
			case 75:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.red, 15 + i * 90, j);
					Brickss[i][j]=1;
				}
				break;

			case 95:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.orange, 15 + i * 90, j);
					Brickss[i][j]=1;
				}
				break;
			case 115:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.orange, 15 + i * 90, j);
					Brickss[i][j]=1;
				}
				break;
			case 135:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.yellow, 15 + i * 90, j);
					Brickss[i][j]=1;
				}
				break;
			case 155:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.yellow, 15 + i * 90, j);
					Brickss[i][j]=1;
				}
				break;
			case 175:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.green, 15 + i * 90,j);
					Brickss[i][j]=1;
				}
				break;
			case 195:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.green, 15 + i * 90, j);
					Brickss[i][j]=1;
				}
				break;
			case 215:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.cyan, 15 + i * 90, j);
					Brickss[i][j]=1;
				}
				break;
			case 235:
				for (int i = 0; i <= 8; i++) {
					brick.Paint(g, Color.cyan, 15 + i * 90, j);
					Brickss[i][j]=1;

				}
				default:
					break;
					

			}